{"version":3,"file":"static/js/77.d519627e.chunk.js","mappings":"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","sources":["helpers/createMarkup.js","components/MyEMS/common/MultiTrendChart.js","components/MyEMS/common/PeriodTypeOptions.js","components/MyEMS/common/ComparisonTypeOptions.js","components/MyEMS/common/DateRangePickerWrapper.js","components/MyEMS/Space/SpaceEnergyCategory.js","components/MyEMS/common/MultipleLineChart.js","components/MyEMS/common/MultipleLineChartnew.js","components/MyEMS/Space/SpaceEnergyItem.js","components/MyEMS/Space/SpaceCarbon.js","components/MyEMS/Space/SpaceCost.js","components/MyEMS/Space/SpaceOutput.js","components/MyEMS/Space/SpaceIncome.js","components/MyEMS/Space/SpaceEfficiency.js","components/MyEMS/Space/SpaceLoad.js","components/MyEMS/Space/SpaceStatistics.js","components/MyEMS/Space/SpaceSaving.js","components/MyEMS/Space/RealtimeData.js","components/MyEMS/Space/SpaceEnvironmentMonitor.js","components/MyEMS/AuxiliarySystem/EnergyFlowDiagram.js","components/MyEMS/AuxiliarySystem/RealtimeChart.js","hooks/useInterval.js","components/MyEMS/common/dialog/charts.js","components/MyEMS/common/dialog/dialog.js","components/MyEMS/AuxiliarySystem/DistributionSystem.js","components/common/Loader.js","components/MyEMS/Microgrid/MicrogridListItem.js","components/MyEMS/Microgrid/MicrogridFooter.js","hooks/usePagination.js","components/MyEMS/Microgrid/MicrogridList.js","components/MyEMS/Microgrid/MicrogridDetails.js","components/MyEMS/Microgrid/MicrogridReporting.js","components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationListItem.js","components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationFooter.js","components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationList.js","components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationDetails.js","components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationReporting.js","components/MyEMS/common/WARN_COLUMNS.js","components/MyEMS/common/Reacttable.js","components/MyEMS/FDD/Fault.js","hooks/useFakeFetch.js","components/MyEMS/Monitoring/EquipmentList.js","components/MyEMS/Monitoring/EquipmentFooter.js","components/MyEMS/Monitoring/equipments.js","components/MyEMS/Monitoring/SpaceEquipments.js","components/MyEMS/Monitoring/option_time.js","components/MyEMS/Monitoring/makeData.js","components/MyEMS/Monitoring/Materialtable.js","components/MyEMS/Monitoring/New_material_crud.js","components/MyEMS/Monitoring/CombinedEquipments.js","components/common/Calendar.js","components/MyEMS/AdvancedReporting/Summary.js","components/MyEMS/AdvancedReporting/AdvancedReporting.js","components/MyEMS/KnowledgeBase/Summary.js","components/MyEMS/KnowledgeBase/KnowledgeBase.js","components/MyEMS/Notification/Notification.js","layouts/MyEMSRoutes.js"],"sourcesContent":["export default html => ({ __html: html });\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { Row, Col, Card, CardBody, CustomInput } from 'reactstrap';\r\nimport { rgbaColor, themeColors, isIterableArray } from '../../../helpers/utils';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  BarElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport AppContext from '../../../context/Context';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { number } from 'is_js';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  BarElement,\r\n  Tooltip,\r\n  Legend,\r\n);\r\n\r\nconst MultiTrendChart = ({\r\n  reportingTitle,\r\n  baseTitle,\r\n  reportingTooltipTitle,\r\n  baseTooltipTitle,\r\n  reportingLabels,\r\n  baseLabels,\r\n  reportingData,\r\n  baseData,\r\n  rates,\r\n  options,\r\n  t\r\n}) => {\r\n  const [option, setOption] = useState('a0');\r\n  const { isDark } = useContext(AppContext);\r\n  const chartRef = useRef(null);\r\n  const [lineData, setLineData] = useState({\r\n    datasets: [],\r\n  });\r\n  useEffect(() => {\r\n    const chart = chartRef.current;\r\n    if (chart) {\r\n      const ctx = chart.ctx;\r\n      const gradientFill = isDark\r\n        ? ctx.createLinearGradient(0, 0, 0, ctx.canvas.height)\r\n        : ctx.createLinearGradient(0, 0, 0, 250);\r\n      gradientFill.addColorStop(0, isDark ? 'rgba(44,123,229, 0.5)' : 'rgba(255, 255, 255, 0.3)');\r\n      gradientFill.addColorStop(1, isDark ? 'transparent' : 'rgba(255, 255, 255, 0)');\r\n\r\n      const chartData = {\r\n        datasets: [{\r\n            data: undefinedConvertsToEmptyArray(rates[option]),\r\n            borderColor: rgbaColor(isDark ? themeColors.primary : '#000', 0.8) ,\r\n            backgroundColor: gradientFill,\r\n            type: 'line',\r\n            yAxisID: 'y1',\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(context){\r\n                  return context.raw + '%';\r\n                }\r\n              }\r\n            },\r\n            datalabels: {\r\n              formatter: function(value, context) {\r\n                return value + '%';\r\n              },\r\n              color: isDark ? themeColors.light : themeColors.dark,\r\n              align: 'end',\r\n              anchor: 'end',\r\n              display: function(content){\r\n                return content.dataset.data.length <= 20 ? true : false;\r\n              }\r\n            }\r\n          },{\r\n            //label: baseTitle,\r\n            data: undefinedConvertsToEmptyArray(baseData[option]),\r\n            backgroundColor: '#1a3a64',\r\n            stack: \"base\",\r\n            tension: 0.4,\r\n            datalabels: {\r\n              display: function(context){\r\n                return false;\r\n               }\r\n            },\r\n            borderWidth: 0.1,\r\n            borderRadius: 4\r\n          },{\r\n            //label: reportingTitle,\r\n            data: undefinedConvertsToEmptyArray(reportingData[option]),\r\n            backgroundColor: '#2c7be5',\r\n            stack: \"reporting\",\r\n            tension: 0.4,\r\n            datalabels: {\r\n              display: function(context){\r\n                return false;\r\n               }\r\n            },\r\n            borderWidth: 0.1,\r\n            borderRadius: 4\r\n          },],\r\n        labels: undefinedConvertsToEmptyArray(reportingLabels[option]),\r\n      };\r\n      setLineData(chartData);\r\n    }\r\n  }, [baseData, reportingData, option, baseLabels, reportingLabels, rates]);\r\n\r\n  const config = {\r\n    plugins: [ChartDataLabels],\r\n    options: {\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltip: {\r\n            xPadding: 20,\r\n            yPadding: 10,\r\n            displayColors: false,\r\n            callbacks: {\r\n            title: function(context){\r\n              if (context[0].datasetIndex - 1) {\r\n                  return `${reportingLabels[option][context[0].dataIndex]}`;\r\n              } else {\r\n                  return `${baseLabels[option][context[0].dataIndex]}`;\r\n              }\r\n            },\r\n            label: function(context) {\r\n              let raw = Number(context.raw);\r\n              if (context.raw != null && !isNaN(raw)){\r\n                raw = raw.toFixed(3)\r\n              } else {\r\n                raw = null;\r\n              }\r\n              if (context.datasetIndex - 1) {\r\n                return `${parseTitleOrTooltipTitle(reportingTooltipTitle, option)} - ${raw}`;\r\n              } else {\r\n                return `${parseTitleOrTooltipTitle(baseTooltipTitle, option)} - ${raw}`;\r\n              }\r\n            }\r\n            }\r\n        },\r\n      },\r\n      interaction: {\r\n        intersect: false,\r\n        mode: 'x',\r\n        },\r\n      scales: {\r\n        x: {\r\n            display: true,\r\n            ticks: {\r\n                fontColor: rgbaColor('#fff', 0.8),\r\n                fontStyle: 600,\r\n                color: isDark ? themeColors.light : themeColors.dark\r\n            },\r\n            stacked: true,\r\n        },\r\n        y: {\r\n            display: true,\r\n            gridLines: {\r\n                color: rgbaColor('#000', 0.1)\r\n            },\r\n            ticks: {\r\n              color: isDark ? themeColors.light : themeColors.dark\r\n            },\r\n            stack: true,\r\n        },\r\n        y1: {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          grid: {\r\n            drawOnChartArea: false,\r\n          },\r\n          suggestedMax: 100,\r\n          ticks: {\r\n            callback: function(value, index, ticks){\r\n              return value + '%';\r\n            },\r\n            color: isDark ? themeColors.light : themeColors.dark\r\n          }\r\n        },\r\n      },\r\n      hover: { mode: 'label' },\r\n    }\r\n  };\r\n\r\n  const undefinedConvertsToEmptyArray = (value) => {\r\n    if(value === undefined) {\r\n        return [];\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const parseTitleOrTooltipTitle = (title, key) => {\r\n    const name = title[\"name\"];\r\n    const substitute = title[\"substitute\"];\r\n    let title_parameter = {}\r\n    substitute.forEach((currentKey) => {\r\n        title_parameter[currentKey] = title[currentKey]? title[currentKey][key] : null;\r\n    });\r\n    return t(name, title_parameter);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <CardBody className=\"rounded-soft\">\r\n        <Row className=\"text-white align-items-center no-gutters\">\r\n          <Col>\r\n            <h5 className=\"text-lightSlateGray mb-0\">{parseTitleOrTooltipTitle(reportingTitle, option)}</h5>\r\n            <p className=\"fs--1 font-weight-semi-bold\">\r\n              {parseTitleOrTooltipTitle(baseTitle, option)}\r\n            </p>\r\n          </Col>\r\n          {isIterableArray(options) &&\r\n            <Col xs=\"auto\" className=\"d-none d-sm-block\">\r\n              <CustomInput\r\n                id=\"ddd\"\r\n                type=\"select\"\r\n                bsSize=\"sm\"\r\n                className=\"mb-3 shadow\"\r\n                value={option}\r\n                onChange={({ target }) => {setOption(target.value); chartRef.current.update();}}\r\n              >\r\n                {options.map(({ value, label }) => (\r\n                    <option key={value} value={value}>{label}</option>\r\n                  ))}\r\n              </CustomInput>\r\n            </Col>\r\n          }\r\n        </Row>\r\n        <Chart ref={chartRef} type=\"bar\" data={lineData} options={config.options} plugins={config.plugins} width={1618} height={218} />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(MultiTrendChart);\r\n\r\n","export const periodTypeOptions = [\r\n  { value: 'yearly', label: 'Yearly' },\r\n  { value: 'monthly', label: 'Monthly' },\r\n  { value: 'weekly', label: 'Weekly' },\r\n  { value: 'daily', label: 'Daily' },\r\n  { value: 'hourly', label: 'Hourly' }\r\n];\r\n","export const comparisonTypeOptions = [\r\n  { value: 'year-over-year', label: 'Year-Over-Year' },\r\n  { value: 'month-on-month', label: 'Month-On-Month' },\r\n  { value: 'free-comparison', label: 'Free Comparison' },\r\n  { value: 'none-comparison', label: 'None Comparison' }\r\n];\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DateRangePickerWrapper = ({id, disabled, format, value, onChange, size, style, onClean, locale, placeholder}) => {\r\n\r\n    let flag = true;\r\n    const Ref = React.useRef();\r\n\r\n    const onSelected = (date) => {\r\n        let time = moment(date).format('YYYY-MM-DD');\r\n        let calendarObj = Ref.current.overlay.children[0].children[0].children[0].children[0].children[1];\r\n        let calendarTitleObj = Ref.current.overlay.children[0].children[0].children[0].children[0].children[0];\r\n        if(flag) {\r\n          setTimeout(() => {\r\n            calendarTitleObj.childNodes[0].nodeValue = time + ' ' + calendarObj.children[0].children[0].children[1].innerText;\r\n          }, 0);\r\n        }\r\n        flag = !flag;\r\n      }\r\n\r\n    return (\r\n        <DateRangePicker\r\n            id={id}\r\n            disabled={disabled}\r\n            format={format}\r\n            value={value}\r\n            onChange={onChange}\r\n            size={size}\r\n            style={style}\r\n            onClean={onClean}\r\n            cleanable={false}\r\n            locale={locale}\r\n            placeholder={placeholder}\r\n            onSelect={onSelected}\r\n            ref={Ref}\r\n            preventOverflow={true}\r\n        />\r\n    )\r\n}\r\n\r\nDateRangePickerWrapper.propTypes = {\r\n    ranges: PropTypes.array,\r\n    value: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\r\n    defaultValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\r\n    defaultCalendarValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\r\n    hoverRange: PropTypes.oneOfType([PropTypes.oneOf(['week', 'month']), PropTypes.func]),\r\n    format: PropTypes.string,\r\n    isoWeek: PropTypes.bool,\r\n    oneTap: PropTypes.bool,\r\n    limitEndYear: PropTypes.number,\r\n    onChange: PropTypes.func,\r\n    onOk: PropTypes.func,\r\n    disabledDate: PropTypes.func,\r\n    onSelect: PropTypes.func,\r\n    showWeekNumbers: PropTypes.bool,\r\n    showMeridian: PropTypes.bool,\r\n    showOneCalendar: PropTypes.bool\r\n  };\r\n  export default DateRangePickerWrapper;","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\n// import MultipleLineChart from '../common/MultipleLineChart';\r\nimport SharePie from '../common/SharePie';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\nimport {useLocation, Link} from \"react-router-dom\";\r\n\r\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\nconst WorkingDaysConsumptionTable = loadable(() => import('../common/WorkingDaysConsumptionTable'));\r\n\r\nconst SpaceEnergyCategory = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  const location = useLocation();\r\n  const uuid_ = location.search.split('=')[1];\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [cascaderValue, setCascaderValue] = useState([]);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\r\n  const [TCEShareData, setTCEShareData] = useState([]);\r\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\r\n\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n  const [totalInTCE, setTotalInTCE] = useState({});\r\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\r\n  const [childSpaceProportionList, setChildSpaceProportionList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n\r\n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\r\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  const [workingDaysConsumptionTableData, setWorkingDaysConsumptionTableData] = useState([]);\r\n  const [workingDaysConsumptionTableColumns, setWorkingDaysConsumptionTableColumns] = useState([{dataField: 'name', text: t('Energy Category'), sort: true }]);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n        loadUUID(json);\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }, [t]);\r\n\r\n  const spaceName = (spaceList, spaceID, name, ids) => {\r\n    let newName = name;\r\n    let newIds = ids + '';\r\n    for(let space of spaceList){\r\n      if(space.value == spaceID) {\r\n        setSelectedSpaceName(newName.length == 0 ? space.label : newName + '/' + space.label);\r\n        let idArr = []\r\n        newIds.split('-').forEach(id => idArr.push(+id))\r\n        idArr.push(space.value)\r\n        setCascaderValue(idArr)\r\n        return true;\r\n      }\r\n      let rt = false;\r\n      if(space['children'] && space.children.length > 0) {\r\n        rt = spaceName(space.children, spaceID, newName.length == 0 ? space.label : newName + '/' + space.label, newIds.length == 0 ? space.value : newIds + '-' + space.value)\r\n        if(rt) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const loadUUID = (spaceList) => {\r\n    if(uuid_ !== null && uuid_) {\r\n      let url = APIBaseURL + '/reports/spaceenergycategory?' +\r\n          'spaceuuid=' + uuid_ +\r\n          '&periodtype=' + periodType +\r\n          '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n          '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n          '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&language=' + language\r\n      loadData(url, spaceList)\r\n    }\r\n  }\r\n\r\n  const loadData = (url, spaceList) => {\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n    setChildSpacesTableData([]);\r\n    let isResponseOK = false;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        if(spaceList && spaceList.length > 0) {\r\n          let spaceID = json['space']['id']\r\n          spaceName(spaceList, spaceID, '', '')\r\n          setSelectedSpaceID(spaceID);\r\n        }\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let timeOfUseArray = [];\r\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\r\n          if (currentValue === 1) {\r\n            // energy_category_id 1 electricity\r\n            let timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 1;\r\n            timeOfUseItem['name'] = t('Top-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\r\n            timeOfUseItem['color'] = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 2;\r\n            timeOfUseItem['name'] = t('On-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 3;\r\n            timeOfUseItem['name'] = t('Mid-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 4;\r\n            timeOfUseItem['name'] = t('Off-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n          }\r\n        });\r\n        setTimeOfUseShareData(timeOfUseArray);\r\n\r\n        let totalInTCE = {};\r\n        totalInTCE['value'] = json['reporting_period']['total_in_kgce'] / 1000; // convert from kg to t\r\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce'] * 100).toFixed(2) + \"%\";\r\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area'] / 1000; // convert from kg to t\r\n        setTotalInTCE(totalInTCE);\r\n\r\n        let totalInTCO2E = {};\r\n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e'] / 1000; // convert from kg to t\r\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e'] * 100).toFixed(2) + \"%\";\r\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area'] / 1000; // convert from kg to t\r\n        setTotalInTCO2E(totalInTCO2E);\r\n\r\n        let TCEDataArray = [];\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let TCEDataItem = {}\r\n          TCEDataItem['id'] = index;\r\n          TCEDataItem['name'] = currentValue;\r\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce'][index] / 1000; // convert from kg to t\r\n          TCEDataItem['color'] = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\r\n          TCEDataArray.push(TCEDataItem);\r\n        });\r\n        setTCEShareData(TCEDataArray);\r\n\r\n        let TCO2EDataArray = [];\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let TCO2EDataItem = {}\r\n          TCO2EDataItem['id'] = index;\r\n          TCO2EDataItem['name'] = currentValue;\r\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e'][index] / 1000; // convert from kg to t\r\n          TCO2EDataItem['color'] = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\r\n          TCO2EDataArray.push(TCO2EDataItem);\r\n        });\r\n        setTCO2EShareData(TCO2EDataArray);\r\n\r\n        let childSpaceProportionArray = [];\r\n        json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n          if (json['child_space']['child_space_names_array'][energyCategoryIndex].length > 0) {\r\n            let childSpaceProportionItem = {}\r\n            childSpaceProportionItem['data'] = []\r\n            json['child_space']['child_space_names_array'][energyCategoryIndex].forEach((currentSpaceName, spaceIndex) => {\r\n              let childSpaceProportionItemDataItem = {}\r\n              childSpaceProportionItemDataItem['id'] = spaceIndex;\r\n              childSpaceProportionItemDataItem['name'] = currentSpaceName;\r\n              childSpaceProportionItemDataItem['value'] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n              childSpaceProportionItemDataItem['color'] = \"#\" + ((1 << 24) * Math.random() | 0).toString(16);\r\n              childSpaceProportionItem['data'].push(childSpaceProportionItemDataItem);\r\n            });\r\n\r\n            childSpaceProportionItem['name'] = json['child_space']['energy_category_names'][energyCategoryIndex];\r\n            childSpaceProportionItem['unit'] = json['child_space']['units'][energyCategoryIndex];\r\n            childSpaceProportionArray.push(childSpaceProportionItem);\r\n          };\r\n        });\r\n        setChildSpaceProportionList(childSpaceProportionArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\" + currentValue + \")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({'value': 'a' + index, 'label': currentValue});\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if (!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          };\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n          });\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          })\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let workding_days_table_column_list = [];\r\n          workding_days_table_column_list.push({\r\n            dataField: 'name',\r\n            text: t('Energy Category'),\r\n            sort: true\r\n          });\r\n          workding_days_table_column_list.push({\r\n            dataField: 'b0',\r\n            text: t('Reporting Period') + ' - ' + t('Working Days'),\r\n            sort: false,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                if (decimalValue === 0) {\r\n                  return '-'\r\n                }\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return decimalValue;\r\n              }\r\n            }\r\n          });\r\n          workding_days_table_column_list.push({\r\n            dataField: 'b1',\r\n            text: t('Reporting Period') + ' - ' + t('Non Working Days'),\r\n            sort: false,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                if (decimalValue === 0) {\r\n                  return '-'\r\n                }\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return decimalValue;\r\n              }\r\n            }\r\n          });\r\n\r\n          setWorkingDaysConsumptionTableColumns(workding_days_table_column_list);\r\n\r\n          let working_days_table_value_list = [];\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let working_days_table_value = {};\r\n            let unit = json['reporting_period']['units'][index];\r\n            working_days_table_value['name'] = currentValue + ' (' + unit + ')';\r\n            working_days_table_value['b0'] = json['space']['working_calendars'].length > 0 ? json['reporting_period']['working_days_subtotals'][index] : \"-\";\r\n            working_days_table_value['b1'] = json['space']['working_calendars'].length > 0 ? json['reporting_period']['non_working_days_subtotals'][index] : \"-\";\r\n            working_days_table_value_list.push(working_days_table_value);\r\n          });\r\n\r\n          setWorkingDaysConsumptionTableData(working_days_table_value_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length ?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length ? json['base_period']['timestamps'][0][index] : null;\r\n              json['base_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values'][energyCategoryIndex].length ? json['base_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length ? json['reporting_period']['timestamps'][0][index] : null;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values'][energyCategoryIndex].length ? json['reporting_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n            });\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n            });\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout(() => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n\r\n          let workding_days_table_column_list = [];\r\n          workding_days_table_column_list.push({\r\n            dataField: 'name',\r\n            text: t('Energy Category'),\r\n            sort: true\r\n          });\r\n          workding_days_table_column_list.push({\r\n            dataField: 'a0',\r\n            text: t('Base Period') + ' - ' + t('Working Days'),\r\n            sort: false,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                if (decimalValue === 0) {\r\n                  return '-'\r\n                }\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return decimalValue;\r\n              }\r\n            }\r\n          });\r\n          workding_days_table_column_list.push({\r\n            dataField: 'a1',\r\n            text: t('Base Period') + ' - ' + t('Non Working Days'),\r\n            sort: false,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                if (decimalValue === 0) {\r\n                  return '-'\r\n                }\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return decimalValue;\r\n              }\r\n            }\r\n          });\r\n          workding_days_table_column_list.push({\r\n            dataField: 'b0',\r\n            text: t('Reporting Period') + ' - ' + t('Working Days'),\r\n            sort: false,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                if (decimalValue === 0) {\r\n                  return '-'\r\n                }\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return decimalValue;\r\n              }\r\n            }\r\n          });\r\n          workding_days_table_column_list.push({\r\n            dataField: 'b1',\r\n            text: t('Reporting Period') + ' - ' + t('Non Working Days'),\r\n            sort: false,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                if (decimalValue === 0) {\r\n                  return '-'\r\n                }\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return decimalValue;\r\n              }\r\n            }\r\n          });\r\n\r\n          setWorkingDaysConsumptionTableColumns(workding_days_table_column_list);\r\n\r\n          let working_days_table_value_list = [];\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let working_days_table_value = {};\r\n            let unit = json['base_period']['units'][index];\r\n            working_days_table_value['name'] = currentValue + ' (' + unit + ')';\r\n            working_days_table_value['a0'] = json['space']['working_calendars'].length > 0 ? json['base_period']['working_days_subtotals'][index] : \"-\";\r\n            working_days_table_value['a1'] = json['space']['working_calendars'].length > 0 ? json['base_period']['non_working_days_subtotals'][index] : \"-\";\r\n            working_days_table_value['b0'] = json['space']['working_calendars'].length > 0 ? json['reporting_period']['working_days_subtotals'][index] : \"-\";\r\n            working_days_table_value['b1'] = json['space']['working_calendars'].length > 0 ? json['reporting_period']['non_working_days_subtotals'][index] : \"-\";\r\n            working_days_table_value_list.push(working_days_table_value);\r\n          });\r\n\r\n          setWorkingDaysConsumptionTableData(working_days_table_value_list);\r\n        }\r\n\r\n        let child_space_value_list = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let child_space_value = {};\r\n            child_space_value['id'] = spaceIndex;\r\n            child_space_value['name'] = currentSpaceName;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              child_space_value['a' + (2 * energyCategoryIndex)] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n              let total = json['child_space']['subtotals_array'][energyCategoryIndex].reduce((a, b) => a + b);\r\n              child_space_value['a' + (2 * energyCategoryIndex + 1)] =\r\n                  total > 0 ? json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex] / total * 100 : 0.00;\r\n            });\r\n            console.log(child_space_value)\r\n            child_space_value_list.push(child_space_value);\r\n          });\r\n        }\r\n        ;\r\n\r\n        setChildSpacesTableData(child_space_value_list);\r\n\r\n        let child_space_column_list = [];\r\n        child_space_column_list.push({\r\n          dataField: 'name',\r\n          text: t('Child Spaces'),\r\n          sort: true\r\n        });\r\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\r\n          let unit = json['child_space']['units'][index];\r\n          child_space_column_list.push({\r\n            dataField: 'a' + (2 * index),\r\n            text: currentValue + ' (' + unit + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n          child_space_column_list.push({\r\n            dataField: 'a' + (2 * index + 1),\r\n            text: t('Percentage'),\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2) + '%';\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setChildSpacesTableColumns(child_space_column_list);\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    let url = APIBaseURL + '/reports/spaceenergycategory?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language;\r\n    loadData(url);\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spaceenergycategory.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active onClick={ () => window.location.reload() }>\r\n            <Link to=\"/space/energycategory\">{t('Energy Category Data')}</Link>\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    value={cascaderValue}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n\r\n        <CardSummary\r\n          rate={totalInTCE['increment_rate'] || ''}\r\n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\r\n          color=\"warning\"\r\n          footnote={t('Per Unit Area')}\r\n          footvalue={totalInTCE['value_per_unit_area']}\r\n          footunit=\"(TCE/M²)\">\r\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n        </CardSummary>\r\n        <CardSummary\r\n          rate={totalInTCO2E['increment_rate'] || ''}\r\n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\r\n          color=\"warning\"\r\n          footnote={t('Per Unit Area')}\r\n          footvalue={totalInTCO2E['value_per_unit_area']}\r\n          footunit=\"(TCO2E/M²)\">\r\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n        </CardSummary>\r\n      </div>\r\n      <Row noGutters>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={timeOfUseShareData} title={t('Electricity Consumption by Time-Of-Use')} />\r\n        </Col>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\r\n        </Col>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\r\n        </Col>\r\n        {childSpaceProportionList.map(childSpaceProportionItem => (\r\n          <Col className=\"mb-3 pr-lg-2 mb-3\" key={uuid()}>\r\n            <SharePie\r\n              data={childSpaceProportionItem['data']}\r\n              title={t('Child Space Proportion CATEGORY UNIT',\r\n                      {'CATEGORY': childSpaceProportionItem['name'],\r\n                       'UNIT': '(' + childSpaceProportionItem['unit'] + ')'\r\n                      })}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      {/* <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart> */}\r\n\r\n      <WorkingDaysConsumptionTable\r\n       data={workingDaysConsumptionTableData}\r\n       columns={workingDaysConsumptionTableColumns}>\r\n      </WorkingDaysConsumptionTable>\r\n      <br />\r\n\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n\r\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\r\n      </ChildSpacesTable>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceEnergyCategory));\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { CheckPicker } from 'rsuite';\r\nimport { rgbaColor, themeColors, isIterableArray, getGrays } from '../../../helpers/utils';\r\nimport AppContext from '../../../context/Context';\r\nimport moment from 'moment';\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport * as echarts from 'echarts/lib/echarts';\r\nimport { LineChart } from 'echarts/charts';\r\nimport {\r\n  GridComponent,\r\n  ToolboxComponent,\r\n  DataZoomComponent,\r\n  MarkLineComponent,\r\n  MarkPointComponent} from 'echarts/components';\r\n\r\necharts.use([\r\n  LineChart,\r\n  GridComponent,\r\n  ToolboxComponent,\r\n  DataZoomComponent,\r\n  MarkLineComponent,\r\n  MarkPointComponent\r\n]);\r\n\r\nconst MultipleLineChart = ({\r\n  reportingTitle,\r\n  baseTitle,\r\n  labels,\r\n  data,\r\n  options\r\n}) => {\r\n  const colors = ['#2c7be5', '#00d27a', '#27bcfd', '#f5803e', '#e63757'];\r\n  const [values, setValues] = useState(['a0']);\r\n  const [oldValues, setOldValues] = useState(['a0']);\r\n  const { isDark } = useContext(AppContext);\r\n  const [nodes, setNodes] = useState([{\r\n    name: options.label,\r\n    borderWidth: 2,\r\n    data: data['a0'],\r\n    type: 'line',\r\n    markPoint: {\r\n      label:{\r\n        color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n      },\r\n      itemStyle: {\r\n        color: colors[0],\r\n      },\r\n      data: [\r\n        {\r\n          type: 'max',\r\n          name: 'Max Value',\r\n        },\r\n        {\r\n          type: 'min',\r\n          name: 'Min Value',\r\n        }\r\n      ]\r\n    },\r\n    markLine: {\r\n      lineStyle: {\r\n        color: colors[0],\r\n      },\r\n      data: [{\r\n          type: 'average',\r\n          name: 'Average Value'\r\n      }],\r\n      label: {\r\n        color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n      },\r\n    },\r\n  }]);\r\n  const [lastMoment, setLastMoment] = useState(moment());\r\n  const [lineLabels, setLinaLabels] = useState([]);\r\n\r\n  let handleChange = (arr) => {\r\n    if (arr.length < 1) {\r\n      return ;\r\n    }\r\n    let currentMoment = moment();\r\n    setOldValues(values);\r\n    setValues(arr);\r\n    setLastMoment(currentMoment);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let tempNodes = [...nodes];\r\n    let index = values[0];\r\n    if (options[index.slice(1)] && data[index] && tempNodes.length > 0 && tempNodes[0].label === undefined) {\r\n      tempNodes = [];\r\n      tempNodes[0] = {\r\n        data: data[index],\r\n        type: 'line',\r\n        smooth: true,\r\n        name: options[index.slice(1)] ? options[index.slice(1)].label : '',\r\n        lineStyle: {\r\n          color: colors[0],\r\n        },\r\n        itemStyle: {\r\n          color: colors[0],\r\n        },\r\n        markPoint: {\r\n          data: [\r\n           {\r\n              type: 'max',\r\n              name: 'Max Value',\r\n            },\r\n            {\r\n              type: 'min',\r\n              name: 'Min Value',\r\n            }\r\n          ],\r\n          label:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n          itemStyle: {\r\n            color: colors[0],\r\n          },\r\n        },\r\n        markLine: {\r\n          lineStyle: {\r\n            color: colors[0],\r\n          },\r\n          data: [{\r\n              type: 'average',\r\n              name: 'Average Value'\r\n          }],\r\n          label: {\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n        },\r\n      }\r\n    }\r\n    setNodes(tempNodes);\r\n    setLinaLabels(labels[values[0]]);\r\n    setValues(['a0']);\r\n    setOldValues(['a0'])\r\n  }, [data, labels, options]);\r\n\r\n  useEffect(() => {\r\n    let tempNodes = [...nodes];\r\n    if (oldValues.length < values.length) {\r\n      let index = values[values.length - 1];\r\n      tempNodes.push({\r\n        data: data[index],\r\n        type: 'line',\r\n        smooth: true,\r\n        name: options[index.slice(1)].label,\r\n        itemStyle: {\r\n          color: colors[index.slice(1) % 5],\r\n        },\r\n        lineStyle: {\r\n          color: colors[index.slice(1) % 5],\r\n        },\r\n        markPoint: {\r\n          data: [\r\n            {\r\n              type: 'max',\r\n              name: 'Max Value',\r\n            },\r\n            {\r\n              type: 'min',\r\n              name: 'Min Value',\r\n            }\r\n          ],\r\n          label:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n          itemStyle: {\r\n            color: colors[index.slice(1) % 5],\r\n          },\r\n        },\r\n        markLine: {\r\n          lineStyle: {\r\n            color: colors[index.slice(1) % 5],\r\n          },\r\n          label: {\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n          data: [\r\n            {\r\n              type: 'average',\r\n              name: 'Average Value'\r\n            }\r\n          ]\r\n        },\r\n      })\r\n    } else {\r\n      let i = 0\r\n      for (; i <= oldValues.length; i++ ) {\r\n        if (i === values.length || oldValues[i] !== values[i]){\r\n          break;\r\n        }\r\n      }\r\n      tempNodes.splice(i, 1);\r\n    }\r\n    setNodes(tempNodes);\r\n    setLinaLabels(labels[values[0]]);\r\n  }, [lastMoment]);\r\n\r\n  let getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        backgroundColor: getGrays(isDark)[100],\r\n        borderColor: getGrays(isDark)[300],\r\n        color: isDark ? themeColors.light : themeColors.dark,\r\n      },\r\n      grid: {\r\n        left: '5%',\r\n        right: '5%',\r\n        bottom: '15%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: lineLabels ? lineLabels : ['0'],\r\n        axisLabel: {\r\n          interval: 'auto',\r\n          color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          rotate:30\r\n        },\r\n        axisLine:{\r\n          lineStyle:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        splitLine: {show: false},\r\n        axisLabel: {\r\n          color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n        },\r\n        axisLine:{\r\n          lineStyle:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          }\r\n        }\r\n      },\r\n      series: nodes,\r\n      toolbox: {\r\n        right: 10,\r\n        feature: {\r\n          // dataZoom: {\r\n          //   yAxisIndex: 'none'\r\n          // },\r\n        },\r\n        show: false\r\n      },\r\n      dataZoom: [\r\n        {\r\n          type: 'slider',\r\n          show: true,\r\n          xAxisIndex: [0],\r\n        },\r\n        {\r\n          type: 'slider',\r\n          show: true,\r\n          yAxisIndex: [0],\r\n          left: '2%',\r\n        },\r\n        {\r\n          type: 'inside',\r\n          xAxisIndex: [0],\r\n        },\r\n        {\r\n          type: 'inside',\r\n          yAxisIndex: [0],\r\n        }\r\n      ],\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <CardBody className=\"rounded-soft\">\r\n        <Row className=\"text-white align-items-center no-gutters\">\r\n          <Col>\r\n            <h5 className=\"text-lightSlateGray mb-0\">{reportingTitle}</h5>\r\n            <p className=\"fs--1 font-weight-semi-bold\">\r\n              {baseTitle}\r\n            </p>\r\n          </Col>\r\n          {options[0] && isIterableArray(options) &&\r\n            <Col xs=\"auto\" className=\"d-none d-sm-block\">\r\n              <CheckPicker\r\n                data={options}\r\n                value={values}\r\n                appearance=\"default\"\r\n                placeholder=\"select\"\r\n                searchable={false}\r\n                countable={false}\r\n                onSelect={handleChange}\r\n                style={{ width: 224, borderRadius: '.25rem'}}\r\n                />\r\n            </Col>\r\n          }\r\n        </Row>\r\n        <ReactEchartsCore\r\n            echarts={echarts}\r\n            notMerge={true}\r\n            option={getOption()}\r\n            style={{ width: '100%', height: 318 }}\r\n            />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MultipleLineChart;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport { CheckPicker } from 'rsuite';\r\nimport { rgbaColor, themeColors, isIterableArray, getGrays } from '../../../helpers/utils';\r\nimport AppContext from '../../../context/Context';\r\nimport moment from 'moment';\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport * as echarts from 'echarts/lib/echarts';\r\nimport { LineChart } from 'echarts/charts';\r\nimport {\r\n  GridComponent,\r\n  ToolboxComponent,\r\n  DataZoomComponent,\r\n  MarkLineComponent,\r\n  MarkPointComponent} from 'echarts/components';\r\n\r\necharts.use([\r\n  LineChart,\r\n  GridComponent,\r\n  ToolboxComponent,\r\n  DataZoomComponent,\r\n  MarkLineComponent,\r\n  MarkPointComponent]);\r\n\r\n\r\n// 主要 控制呈現內容  的部分為series node  data 這幾個變數\r\nconst MultipleLineChartnew = ({\r\n  reportingTitle,\r\n  baseTitle,\r\n  labels,\r\n  data,\r\n  options\r\n}) => {\r\n  const colors = ['#2c7be5', '#00d27a', '#27bcfd', '#f5803e', '#e63757'];\r\n  const [values, setValues] = useState(['a0']);\r\n  const [oldValues, setOldValues] = useState(['a0']);\r\n  const { isDark } = useContext(AppContext);\r\n\r\n  const [nodes, setNodes] = useState([{\r\n    name: options.label,\r\n    borderWidth: 2,\r\n    // data: data['a0'],\r\n    data: data['a0'],\r\n    type: 'line',\r\n    markPoint: {\r\n      label:{\r\n        color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n      },\r\n      itemStyle: {\r\n        color: colors[0],\r\n      },\r\n      data: [\r\n        {\r\n          type: 'max',\r\n          name: 'Max Value',\r\n        },\r\n        {\r\n          type: 'min',\r\n          name: 'Min Value',\r\n        }\r\n      ]\r\n    },\r\n    markLine: {\r\n      lineStyle: {\r\n        color: colors[0],\r\n      },\r\n      data: [{\r\n          type: 'average',\r\n          name: 'Average Value'\r\n      }],\r\n      label: {\r\n        color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n      },\r\n    },\r\n  }]);\r\n\r\n\r\n  const [lastMoment, setLastMoment] = useState(moment());\r\n  const [lineLabels, setLinaLabels] = useState([]);\r\n\r\n  let handleChange = (arr) => {\r\n    if (arr.length < 1) {\r\n      return ;\r\n    }\r\n    let currentMoment = moment();\r\n    setOldValues(values);\r\n    setValues(arr);\r\n    setLastMoment(currentMoment);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let tempNodes = [...nodes];\r\n    let index = values[0];\r\n    if (options[index.slice(1)] && data[index] && tempNodes.length > 0 && tempNodes[0].label === undefined) {\r\n      tempNodes = [];\r\n      tempNodes[0] = {\r\n        data: data[index],\r\n        type: 'line',\r\n        smooth: true,\r\n        name: options[index.slice(1)] ? options[index.slice(1)].label : '',\r\n        lineStyle: {\r\n          color: colors[0],\r\n        },\r\n        itemStyle: {\r\n          color: colors[0],\r\n        },\r\n        markPoint: {\r\n          data: [\r\n           {\r\n              type: 'max',\r\n              name: 'Max Value',\r\n            },\r\n            {\r\n              type: 'min',\r\n              name: 'Min Value',\r\n            }\r\n          ],\r\n          label:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n          itemStyle: {\r\n            color: colors[0],\r\n          },\r\n        },\r\n        markLine: {\r\n          lineStyle: {\r\n            color: colors[0],\r\n          },\r\n          data: [{\r\n              type: 'average',\r\n              name: 'Average Value'\r\n          }],\r\n          label: {\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n        },\r\n      }\r\n    }\r\n    setNodes(tempNodes);\r\n    setLinaLabels(labels[values[0]]);\r\n    setValues(['a0']);\r\n    setOldValues(['a0'])\r\n  }, [data, labels, options]);\r\n\r\n  useEffect(() => {\r\n    let tempNodes = [...nodes];\r\n    if (oldValues.length < values.length) {\r\n      let index = values[values.length - 1];\r\n      tempNodes.push({\r\n        data: data[index],\r\n        type: 'line',\r\n        smooth: true,\r\n        name: options[index.slice(1)].label,\r\n        itemStyle: {\r\n          color: colors[index.slice(1) % 5],\r\n        },\r\n        lineStyle: {\r\n          color: colors[index.slice(1) % 5],\r\n        },\r\n        markPoint: {\r\n          data: [\r\n            {\r\n              type: 'max',\r\n              name: 'Max Value',\r\n            },\r\n            {\r\n              type: 'min',\r\n              name: 'Min Value',\r\n            }\r\n          ],\r\n          label:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n          itemStyle: {\r\n            color: colors[index.slice(1) % 5],\r\n          },\r\n        },\r\n        markLine: {\r\n          lineStyle: {\r\n            color: colors[index.slice(1) % 5],\r\n          },\r\n          label: {\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          },\r\n          data: [\r\n            {\r\n              type: 'average',\r\n              name: 'Average Value'\r\n            }\r\n          ]\r\n        },\r\n      })\r\n    } else {\r\n      let i = 0\r\n      for (; i <= oldValues.length; i++ ) {\r\n        if (i === values.length || oldValues[i] !== values[i]){\r\n          break;\r\n        }\r\n      }\r\n      tempNodes.splice(i, 1);\r\n    }\r\n    setNodes(tempNodes);\r\n    setLinaLabels(labels[values[0]]);\r\n  }, [lastMoment]);\r\n\r\n  let getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        backgroundColor: getGrays(isDark)[100],\r\n        borderColor: getGrays(isDark)[300],\r\n        color: isDark ? themeColors.light : themeColors.dark,\r\n      },\r\n      grid: {\r\n        left: '5%',\r\n        right: '5%',\r\n        bottom: '15%',\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        // data: lineLabels ? lineLabels : ['0'],\r\n        data: ['2024/03/11', '2024/03/12', '2024/03/13', '2024/03/14', '2024/03/15', '2024/03/16', '2024/03/17'],\r\n        axisLabel: {\r\n          interval: 'auto',\r\n          color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          rotate:30\r\n        },\r\n        axisLine:{\r\n          lineStyle:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        splitLine: {show: false},\r\n        axisLabel: {\r\n          color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n        },\r\n        axisLine:{\r\n          lineStyle:{\r\n            color: rgbaColor(isDark ? '#fff' : '#000', 0.8),\r\n          }\r\n        }\r\n      },\r\n      series: nodes,\r\n      toolbox: {\r\n        right: 10,\r\n        feature: {\r\n          // dataZoom: {\r\n          //   yAxisIndex: 'none'\r\n          // },\r\n        },\r\n        show: false\r\n      },\r\n      dataZoom: [\r\n        {\r\n          type: 'slider',\r\n          show: true,\r\n          xAxisIndex: [0],\r\n        },\r\n        {\r\n          type: 'slider',\r\n          show: true,\r\n          yAxisIndex: [0],\r\n          left: '2%',\r\n        },\r\n        {\r\n          type: 'inside',\r\n          xAxisIndex: [0],\r\n        },\r\n        {\r\n          type: 'inside',\r\n          yAxisIndex: [0],\r\n        }\r\n      ],\r\n    };\r\n  }\r\n\r\n  // const getOption = () => {\r\n  //   return {\r\n  //     tooltip: {\r\n  //       trigger: 'axis',\r\n  //       backgroundColor: '#ffffff',\r\n  //       borderColor: '#cccccc',\r\n  //       padding: 10,\r\n  //       textStyle: {\r\n  //         color: '#333333',\r\n  //       },\r\n  //       formatter: function (params) {\r\n  //         const date = params[0].name;\r\n  //         const value = params[0].value[1];\r\n  //         return `Date: ${date}<br/>Frequency: ${value}`;\r\n  //       },\r\n  //     },\r\n  //     grid: {\r\n  //       left: '5%',\r\n  //       right: '5%',\r\n  //       bottom: '15%',\r\n  //       containLabel: true,\r\n  //     },\r\n  //     xAxis: {\r\n  //       type: 'category',\r\n  //       data: data.map(item => item.date), // 请确保你的数据结构有一个包含日期的字段\r\n  //       axisLabel: {\r\n  //         interval: 'auto',\r\n  //         rotate: 30,\r\n  //       },\r\n  //     },\r\n  //     yAxis: {\r\n  //       type: 'value',\r\n  //       splitLine: { show: false },\r\n  //     },\r\n  //     series: [\r\n  //       {\r\n  //         type: 'line',\r\n  //         data: data.map(item => [item.date, item.frequency]), // 请确保你的数据结构有日期和频率字段\r\n  //         markLine: {\r\n  //           lineStyle: {\r\n  //             color: 'red',\r\n  //           },\r\n  //           data: [\r\n  //             {\r\n  //               type: 'average',\r\n  //               name: 'Average Frequency',\r\n  //             },\r\n  //           ],\r\n  //         },\r\n  //       },\r\n  //     ],\r\n  //   };\r\n  // };\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <CardBody className=\"rounded-soft\">\r\n        <Row className=\"text-white align-items-center no-gutters\">\r\n          <Col>\r\n            <h5 className=\"text-lightSlateGray mb-0\">{reportingTitle}</h5>\r\n            <p className=\"fs--1 font-weight-semi-bold\">\r\n              {baseTitle}\r\n            </p>\r\n          </Col>\r\n          {/* 帶出label */}\r\n          {options[0] && isIterableArray(options) &&\r\n            <Col xs=\"auto\" className=\"d-none d-sm-block\">\r\n              <CheckPicker\r\n                data={options}\r\n                value={values}\r\n                appearance=\"default\"\r\n                placeholder=\"select\"\r\n                searchable={false}\r\n                countable={false}\r\n                onSelect={handleChange}\r\n                style={{ width: 224, borderRadius: '.25rem'}}\r\n                />\r\n            </Col>\r\n          }\r\n        </Row>\r\n        {/* 運行值條圖 */}\r\n        <ReactEchartsCore\r\n            echarts={echarts}\r\n            notMerge={true}\r\n            option={getOption()}\r\n            style={{ width: '100%', height: 318 }}\r\n            />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MultipleLineChartnew;","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\n\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport MultipleLineChartnew from '../common/MultipleLineChartnew';\r\n\r\n\r\nimport SharePie from '../common/SharePie';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\n\r\nimport EchartsDemo from './EchartsDemo'\r\n\r\n\r\n\r\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst SpaceEnergyItem = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n  const [sharePieList, setSharePieList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\",\"a1\":\"\",\"a2\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\",\"a1\":\"()\",\"a2\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": [],\"a1\": [],\"a2\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": [],\"a1\": [],\"a2\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2),\"a1\": (0).toFixed(2),\"a2\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": [],\"a1\": [],\"a2\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": [],\"a1\": [],\"a2\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2),\"a0\": (1).toFixed(2),\"a0\": (2).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": [],\"a1\": [],\"a2\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  // const [parameterLineChartLabels, setParameterLineChartLabels] = useState(['Label1', 'Label2', 'Label3']);\r\n  // const aa = ['', '2024/01/04', '2024/01/16',  '2024/01/31', '2024/02/04', '2024/02/15', '2024/02/29'];\r\n  \r\n  //  aa 這個不影響\r\n  const aa = [];\r\n  // const aa = ['2024-01-04', '2024-01-04', '2024-01-16',  '2024-01-31', '2024-02-04', '2024-02-15', '2024-02-29'];\r\n  // const aa = [new Date('2019-02-27').getTime(), new Date('2020-02-27').getTime(), new Date('2021-02-27').getTime(),  new Date('2022-02-27').getTime(), new Date('2023-02-27').getTime(), new Date('2024-01-27').getTime(), new Date('2024-03-05').getTime()];\r\n\r\n  \r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  // const [parameterLineChartData, setParameterLineChartData] = useState({\r\n  //   a0: [10, 20, 30],\r\n  //   a1: [15, 25, 35],\r\n  //   a2: [9, 145, 88]\r\n  //   // ...其他索引\r\n  // });\r\n\r\n\r\n  // bb資料根據\r\n  const bb = {\r\n      a0: [1, 20, 30],\r\n      'a1': [2, 25, 35],\r\n      'a2': [3, 145, 88, 210, 179]\r\n      // ...其他索引\r\n  };\r\n  \r\n\r\n\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n  // const [parameterLineChartOptions, setParameterLineChartOptions] = useState([\r\n  //   { value: 'a0', label: 'Label1' },\r\n  //   { value: 'a1', label: 'Label2' },\r\n  //   { value: 'a2', label: 'Label3' }\r\n  //   // ...其他選項\r\n  // ]);\r\n\r\n  const cc = [\r\n    { value: 'a0', label: 'Label1' },\r\n    { value: 'a1', label: 'Label2' },\r\n    { value: 'a2', label: 'Label3' }\r\n  ];\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n\r\n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\r\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n    setChildSpacesTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spaceenergyitem?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['energy_category_name'] = json['reporting_period']['energy_category_names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let sharePieDict = {};\r\n        let energyCategoryDict = {};\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let sharePieSubItem = {}\r\n          sharePieSubItem['id'] = index;\r\n          sharePieSubItem['name'] = json['reporting_period']['names'][index];\r\n          sharePieSubItem['value'] = json['reporting_period']['subtotals'][index];\r\n          sharePieSubItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n\r\n          let current_energy_category_id = json['reporting_period']['energy_category_ids'][index]\r\n          if (current_energy_category_id in sharePieDict) {\r\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\r\n          } else {\r\n            sharePieDict[current_energy_category_id] = [];\r\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\r\n          }\r\n\r\n          if (!(current_energy_category_id in energyCategoryDict)) {\r\n            energyCategoryDict[current_energy_category_id] =\r\n            {'name': json['reporting_period']['energy_category_names'][index],\r\n             'unit': json['reporting_period']['units'][index],\r\n            }\r\n          }\r\n        });\r\n        let sharePieArray = [];\r\n        for (let current_energy_category_id in sharePieDict) {\r\n          let sharePieItem = {}\r\n          sharePieItem['data'] = sharePieDict[current_energy_category_id];\r\n          sharePieItem['energy_category_name'] = energyCategoryDict[current_energy_category_id]['name'];\r\n          sharePieItem['unit'] = energyCategoryDict[current_energy_category_id]['unit'];\r\n          sharePieArray.push(sharePieItem);\r\n        }\r\n\r\n        setSharePieList(sharePieArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          };\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n          });\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          })\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        }else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              json['base_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values'][energyCategoryIndex].length? json['base_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values'][energyCategoryIndex].length? json['reporting_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n            });\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n            });\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        let child_space_value_list = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let child_space_value = {};\r\n            child_space_value['id'] = spaceIndex;\r\n            child_space_value['name'] = currentSpaceName;\r\n            json['child_space']['energy_item_names'].forEach((currentValue, energyItemIndex) => {\r\n              child_space_value['a' + energyItemIndex] = json['child_space']['subtotals_array'][energyItemIndex][spaceIndex];\r\n            });\r\n            child_space_value_list.push(child_space_value);\r\n          });\r\n        };\r\n\r\n        setChildSpacesTableData(child_space_value_list);\r\n\r\n        let child_space_column_list = [];\r\n        child_space_column_list.push({\r\n          dataField: 'name',\r\n          text: t('Child Spaces'),\r\n          sort: true\r\n        });\r\n        json['child_space']['energy_item_names'].forEach((currentValue, index) => {\r\n          let unit = json['child_space']['units'][index];\r\n          child_space_column_list.push({\r\n            dataField: 'a' + index,\r\n            text: currentValue + ' (' + unit + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setChildSpacesTableColumns(child_space_column_list);\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spaceenergyitem.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Item Data')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      {/* <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Consumption ITEM CATEGORY UNIT', { 'ITEM': cardSummaryItem['name'], 'CATEGORY': cardSummaryItem['energy_category_name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n      </div> */}\r\n      {/* 這下面的本來就沒帶出來 */}\r\n      {/* <Row noGutters>\r\n        {sharePieList.map(sharePieItem => (\r\n          <Col key={sharePieItem['energy_category_name']} className=\"mb-3 pr-lg-2 mb-3\">\r\n            <SharePie key={sharePieItem['energy_category_name']}\r\n              data={sharePieItem['data']}\r\n              title={t('CATEGORY UNIT Consumption by Energy Items', { 'CATEGORY': sharePieItem['energy_category_name'], 'UNIT': '(' + sharePieItem['unit'] + ')' })} />\r\n          </Col>\r\n        ))}\r\n      </Row> */}\r\n\r\n\r\n      {/* <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart> */}\r\n      {/* <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={aa}\r\n        data={bb}\r\n        options={cc}>\r\n      </MultipleLineChart> */}\r\n\r\n      {/* 0312帶入圖形 */}\r\n      {/* 0313 帶出label有問題 */}\r\n\r\n      <MultipleLineChartnew reportingTitle={t('測試折線圖吧')}\r\n        baseTitle=''\r\n        labels={aa}\r\n        data={bb}\r\n        options={cc}>\r\n      </MultipleLineChartnew>\r\n\r\n      {/* 0308下午嘗試 多直條 折線比較圖 */}\r\n      <EchartsDemo/>\r\n\r\n\r\n\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\r\n      </ChildSpacesTable>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceEnergyItem));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport SharePie from '../common/SharePie';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst SpaceCarbon = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\r\n  const [carbonShareData, setCarbonShareData] = useState([]);\r\n\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [childSpaceProportionList, setChildSpaceProportionList] = useState([]);\r\n  const [childSpaceSubtotalShareData, setChildSpaceSubtotalShareData] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n\r\n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\r\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n    setChildSpacesTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spacecarbon?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language,  {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n\r\n        let cardSummaryList = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\r\n          cardSummaryList.push(cardSummaryItem);\r\n        });\r\n        let cardSummaryItem = {}\r\n        cardSummaryItem['name'] = t('Total');\r\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\r\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\r\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\r\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\r\n        cardSummaryList.push(cardSummaryItem);\r\n        setCardSummaryList(cardSummaryList);\r\n\r\n        let timeOfUseArray = [];\r\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\r\n          if(currentValue === 1) {\r\n            // energy_category_id 1 electricity\r\n            let timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 1;\r\n            timeOfUseItem['name'] =  t('Top-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 2;\r\n            timeOfUseItem['name'] =  t('On-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 3;\r\n            timeOfUseItem['name'] =  t('Mid-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 4;\r\n            timeOfUseItem['name'] =  t('Off-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n          }\r\n        });\r\n        setTimeOfUseShareData(timeOfUseArray);\r\n\r\n        let carbonDataArray = [];\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let carbonDataItem = {}\r\n          carbonDataItem['id'] = index;\r\n          carbonDataItem['name'] = currentValue;\r\n          carbonDataItem['value'] = json['reporting_period']['subtotals'][index];\r\n          carbonDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n          carbonDataArray.push(carbonDataItem);\r\n        });\r\n        setCarbonShareData(carbonDataArray);\r\n\r\n        let childSpaceProportionArray = [];\r\n        json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n          if (json['child_space']['child_space_names_array'][energyCategoryIndex].length > 0) {\r\n            let childSpaceProportionItem = {}\r\n            childSpaceProportionItem['data'] = []\r\n            json['child_space']['child_space_names_array'][energyCategoryIndex].forEach((currentSpaceName, spaceIndex) => {\r\n              let childSpaceProportionItemDataItem = {}\r\n              childSpaceProportionItemDataItem['id'] = spaceIndex;\r\n              childSpaceProportionItemDataItem['name'] = currentSpaceName;\r\n              childSpaceProportionItemDataItem['value'] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n              childSpaceProportionItemDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n              childSpaceProportionItem['data'].push(childSpaceProportionItemDataItem);\r\n            });\r\n\r\n            childSpaceProportionItem['name'] = json['child_space']['energy_category_names'][energyCategoryIndex];\r\n            childSpaceProportionItem['unit'] = json['child_space']['units'][energyCategoryIndex];\r\n            childSpaceProportionArray.push(childSpaceProportionItem);\r\n          };\r\n        });\r\n        setChildSpaceProportionList(childSpaceProportionArray);\r\n\r\n        let childSpaceSubtotalShareDataArray = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let subtotal = 0.0;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              subtotal += json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n            });\r\n            let childSpaceSubtotalDataItem = {};\r\n            childSpaceSubtotalDataItem['id'] = spaceIndex;\r\n            childSpaceSubtotalDataItem['name'] = currentSpaceName;\r\n            childSpaceSubtotalDataItem['value'] = subtotal;\r\n            childSpaceSubtotalDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n           childSpaceSubtotalShareDataArray.push(childSpaceSubtotalDataItem);\r\n          });\r\n        };\r\n        setChildSpaceSubtotalShareData(childSpaceSubtotalShareDataArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              let total_current_timstamp = 0.0;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n                total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value['total'] = total_current_timstamp;\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          };\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          let total_of_subtotals = 0.0;\r\n          json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n            total_of_subtotals += currentValue\r\n          });\r\n          detailed_value['total'] = total_of_subtotals;\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          });\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n          detailed_column_list.push({\r\n            dataField: 'total',\r\n            text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodTotal',\r\n            text: t('Base Period') + ' - ' + t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          })\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodTotal',\r\n            text: t('Reporting Period') + ' - ' + t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          })\r\n\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              detailed_value['basePeriodTotal'] = 0.0;\r\n              if (detailed_value['basePeriodDatetime'] == null) {\r\n                detailed_value['basePeriodTotal'] = null;\r\n              }\r\n              json['base_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values'][energyCategoryIndex].length? json['base_period']['values'][energyCategoryIndex][index] : null;\r\n                if(detailed_value['a' + energyCategoryIndex] != null) {\r\n                  detailed_value['basePeriodTotal'] += detailed_value['a' + energyCategoryIndex];\r\n                }\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              detailed_value['reportingPeriodTotal'] = 0.0;\r\n              if (detailed_value['reportingPeriodDatetime'] == null) {\r\n                detailed_value['reportingPeriodTotal'] = null;\r\n              }\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values'][energyCategoryIndex].length? json['reporting_period']['values'][energyCategoryIndex][index] : null;\r\n                if(detailed_value['b' + energyCategoryIndex] != null) {\r\n                  detailed_value['reportingPeriodTotal'] += detailed_value['b' + energyCategoryIndex];\r\n                }\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            let total_of_subtotals_from_base_period = 0.0\r\n            json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n              total_of_subtotals_from_base_period += detailed_value['a' + index];\r\n            });\r\n            detailed_value['basePeriodTotal'] = total_of_subtotals_from_base_period;\r\n\r\n            let total_of_subtotals_from_reporting_period = 0.0\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n              total_of_subtotals_from_reporting_period += detailed_value['b' + index];\r\n            });\r\n            detailed_value['reportingPeriodTotal'] =total_of_subtotals_from_reporting_period;\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        let child_space_value_list = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let child_space_value = {};\r\n            child_space_value['id'] = spaceIndex;\r\n            child_space_value['name'] = currentSpaceName;\r\n            let total = 0.0;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n              total += json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex]\r\n            });\r\n            child_space_value['total'] = total;\r\n            child_space_value_list.push(child_space_value);\r\n          });\r\n        };\r\n\r\n        setChildSpacesTableData(child_space_value_list);\r\n\r\n        let child_space_column_list = [];\r\n        child_space_column_list.push({\r\n          dataField: 'name',\r\n          text: t('Child Spaces'),\r\n          sort: true\r\n        });\r\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\r\n          let unit = json['child_space']['units'][index];\r\n          child_space_column_list.push({\r\n            dataField: 'a' + index,\r\n            text: currentValue + ' (' + unit + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n        });\r\n        child_space_column_list.push({\r\n          dataField: 'total',\r\n          text: t('Total') + ' (' + json['child_space']['total_unit'] + ')',\r\n          sort: true,\r\n          formatter: function (decimalValue) {\r\n            if (typeof decimalValue === 'number') {\r\n              return decimalValue.toFixed(2);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        });\r\n\r\n        setChildSpacesTableColumns(child_space_column_list);\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spacecarbon.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Carbon')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Carbon Dioxide Emissions CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n      </div>\r\n      <Row noGutters>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={timeOfUseShareData} title={t('Electricity Carbon Dioxide Emissions by Time-Of-Use')} />\r\n        </Col>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={carbonShareData} title={t('Carbon Dioxide Emissions by Energy Category')} />\r\n        </Col>\r\n        {childSpaceProportionList.map(childSpaceProportionItem => (\r\n          <Col className=\"mb-3 pr-lg-2 mb-3\" key={uuid()}>\r\n            <SharePie\r\n              data={childSpaceProportionItem['data']}\r\n              title={t('Child Space Proportion CATEGORY UNIT',\r\n                      {'CATEGORY': childSpaceProportionItem['name'],\r\n                       'UNIT': '(' + childSpaceProportionItem['unit'] + ')'\r\n                      })}\r\n            />\r\n          </Col>\r\n        ))}\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie\r\n            data={childSpaceSubtotalShareData}\r\n            title={t('Child Space Total Proportion')}\r\n          />\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Carbon Dioxide Emissions CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Carbon Dioxide Emissions CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Carbon Dioxide Emissions CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Carbon Dioxide Emissions CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\r\n      </ChildSpacesTable>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceCarbon));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport SharePie from '../common/SharePie';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst SpaceCost = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\r\n  const [costShareData, setCostShareData] = useState([]);\r\n\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [childSpaceProportionList, setChildSpaceProportionList] = useState([]);\r\n  const [childSpaceSubtotalShareData, setChildSpaceSubtotalShareData] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n\r\n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\r\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n    setChildSpacesTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spacecost?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n\r\n        let cardSummaryList = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\r\n          cardSummaryList.push(cardSummaryItem);\r\n        });\r\n        let cardSummaryItem = {}\r\n        cardSummaryItem['name'] = t('Total');\r\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\r\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\r\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\r\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\r\n        cardSummaryList.push(cardSummaryItem);\r\n        setCardSummaryList(cardSummaryList);\r\n\r\n        let timeOfUseArray = [];\r\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\r\n          if(currentValue === 1) {\r\n            // energy_category_id 1 electricity\r\n            let timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 1;\r\n            timeOfUseItem['name'] =  t('Top-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 2;\r\n            timeOfUseItem['name'] =  t('On-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 3;\r\n            timeOfUseItem['name'] =  t('Mid-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n\r\n            timeOfUseItem = {}\r\n            timeOfUseItem['id'] = 4;\r\n            timeOfUseItem['name'] =  t('Off-Peak');\r\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\r\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n            timeOfUseArray.push(timeOfUseItem);\r\n          }\r\n        });\r\n        setTimeOfUseShareData(timeOfUseArray);\r\n\r\n        let costDataArray = [];\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let costDataItem = {}\r\n          costDataItem['id'] = index;\r\n          costDataItem['name'] = currentValue;\r\n          costDataItem['value'] = json['reporting_period']['subtotals'][index];\r\n          costDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n          costDataArray.push(costDataItem);\r\n        });\r\n        setCostShareData(costDataArray);\r\n\r\n        let childSpaceProportionArray = [];\r\n        json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n          if (json['child_space']['child_space_names_array'][energyCategoryIndex].length > 0) {\r\n            let childSpaceProportionItem = {}\r\n            childSpaceProportionItem['data'] = []\r\n            json['child_space']['child_space_names_array'][energyCategoryIndex].forEach((currentSpaceName, spaceIndex) => {\r\n              let childSpaceProportionItemDataItem = {}\r\n              childSpaceProportionItemDataItem['id'] = spaceIndex;\r\n              childSpaceProportionItemDataItem['name'] = currentSpaceName;\r\n              childSpaceProportionItemDataItem['value'] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n              childSpaceProportionItemDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n              childSpaceProportionItem['data'].push(childSpaceProportionItemDataItem);\r\n            });\r\n\r\n            childSpaceProportionItem['name'] = json['child_space']['energy_category_names'][energyCategoryIndex];\r\n            childSpaceProportionItem['unit'] = json['child_space']['units'][energyCategoryIndex];\r\n            childSpaceProportionArray.push(childSpaceProportionItem);\r\n          };\r\n        });\r\n        setChildSpaceProportionList(childSpaceProportionArray);\r\n\r\n        let childSpaceSubtotalShareDataArray = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let subtotal = 0.0;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              subtotal += json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n            });\r\n            let childSpaceSubtotalDataItem = {};\r\n            childSpaceSubtotalDataItem['id'] = spaceIndex;\r\n            childSpaceSubtotalDataItem['name'] = currentSpaceName;\r\n            childSpaceSubtotalDataItem['value'] = subtotal;\r\n            childSpaceSubtotalDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n           childSpaceSubtotalShareDataArray.push(childSpaceSubtotalDataItem);\r\n          });\r\n        };\r\n        setChildSpaceSubtotalShareData(childSpaceSubtotalShareDataArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              let total_current_timstamp = 0.0;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n                total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value['total'] = total_current_timstamp;\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          };\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          let total_of_subtotals = 0.0;\r\n          json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n            total_of_subtotals += currentValue\r\n          });\r\n          detailed_value['total'] = total_of_subtotals;\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          });\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n          detailed_column_list.push({\r\n            dataField: 'total',\r\n            text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodTotal',\r\n            text: t('Base Period') + ' - ' + t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          })\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodTotal',\r\n            text: t('Reporting Period') + ' - ' + t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          })\r\n\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              detailed_value['basePeriodTotal'] = 0.0;\r\n              if (detailed_value['basePeriodDatetime'] == null) {\r\n                detailed_value['basePeriodTotal'] = null;\r\n              }\r\n              json['base_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values'][energyCategoryIndex].length? json['base_period']['values'][energyCategoryIndex][index] : null;\r\n                if(detailed_value['a' + energyCategoryIndex] != null) {\r\n                  detailed_value['basePeriodTotal'] += detailed_value['a' + energyCategoryIndex];\r\n                }\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              detailed_value['reportingPeriodTotal'] = 0.0;\r\n              if (detailed_value['reportingPeriodDatetime'] == null) {\r\n                detailed_value['reportingPeriodTotal'] = null;\r\n              }\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values'][energyCategoryIndex].length? json['reporting_period']['values'][energyCategoryIndex][index] : null;\r\n                if(detailed_value['b' + energyCategoryIndex] != null) {\r\n                  detailed_value['reportingPeriodTotal'] += detailed_value['b' + energyCategoryIndex];\r\n                }\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            let total_of_subtotals_from_base_period = 0.0\r\n            json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n              total_of_subtotals_from_base_period += detailed_value['a' + index];\r\n            });\r\n            detailed_value['basePeriodTotal'] = total_of_subtotals_from_base_period;\r\n\r\n            let total_of_subtotals_from_reporting_period = 0.0\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n              total_of_subtotals_from_reporting_period += detailed_value['b' + index];\r\n            });\r\n            detailed_value['reportingPeriodTotal'] = total_of_subtotals_from_reporting_period;\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        let child_space_value_list = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let child_space_value = {};\r\n            child_space_value['id'] = spaceIndex;\r\n            child_space_value['name'] = currentSpaceName;\r\n            let total = 0.0;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n              total += json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex]\r\n            });\r\n            child_space_value['total'] = total;\r\n            child_space_value_list.push(child_space_value);\r\n          });\r\n        };\r\n\r\n        setChildSpacesTableData(child_space_value_list);\r\n\r\n        let child_space_column_list = [];\r\n        child_space_column_list.push({\r\n          dataField: 'name',\r\n          text: t('Child Spaces'),\r\n          sort: true\r\n        });\r\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\r\n          let unit = json['child_space']['units'][index];\r\n          child_space_column_list.push({\r\n            dataField: 'a' + index,\r\n            text: currentValue + ' (' + unit + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n        });\r\n        child_space_column_list.push({\r\n          dataField: 'total',\r\n          text: t('Total') + ' (' + json['child_space']['total_unit'] + ')',\r\n          sort: true,\r\n          formatter: function (decimalValue) {\r\n            if (typeof decimalValue === 'number') {\r\n              return decimalValue.toFixed(2);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        });\r\n\r\n        setChildSpacesTableColumns(child_space_column_list);\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spacecost.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Cost')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n      </div>\r\n      <Row noGutters>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={timeOfUseShareData} title={t('Electricity Cost by Time-Of-Use')} />\r\n        </Col>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={costShareData} title={t('Costs by Energy Category')} />\r\n        </Col>\r\n        {childSpaceProportionList.map(childSpaceProportionItem => (\r\n          <Col className=\"mb-3 pr-lg-2 mb-3\" key={uuid()}>\r\n            <SharePie\r\n              data={childSpaceProportionItem['data']}\r\n              title={t('Child Space Proportion CATEGORY UNIT',\r\n                      {'CATEGORY': childSpaceProportionItem['name'],\r\n                       'UNIT': '(' + childSpaceProportionItem['unit'] + ')'\r\n                      })}\r\n            />\r\n          </Col>\r\n        ))}\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie\r\n            data={childSpaceSubtotalShareData}\r\n            title={t('Child Space Total Proportion')}\r\n          />\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Costs CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Costs CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Costs CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Costs CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\r\n      </ChildSpacesTable>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceCost));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst SpaceOutput = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n\r\n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\r\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n    setChildSpacesTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spaceoutput?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          }\r\n          ;\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n          });\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          })\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              json['base_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values'][energyCategoryIndex].length? json['base_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values'][energyCategoryIndex].length? json['reporting_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n            });\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n            });\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n\r\n        }\r\n\r\n        let child_space_value_list = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let child_space_value = {};\r\n            child_space_value['id'] = spaceIndex;\r\n            child_space_value['name'] = currentSpaceName;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n            });\r\n            child_space_value_list.push(child_space_value);\r\n          });\r\n        };\r\n\r\n        setChildSpacesTableData(child_space_value_list);\r\n\r\n        let child_space_column_list = [];\r\n        child_space_column_list.push({\r\n          dataField: 'name',\r\n          text: t('Child Spaces'),\r\n          sort: true\r\n        });\r\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\r\n          let unit = json['child_space']['units'][index];\r\n          child_space_column_list.push({\r\n            dataField: 'a' + index,\r\n            text: currentValue + ' (' + unit + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setChildSpacesTableColumns(child_space_column_list);\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spaceoutput.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Output')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Output CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n      </div>\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Output CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Output CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Output CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Output CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\r\n      </ChildSpacesTable>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceOutput));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport SharePie from '../common/SharePie';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst SpaceIncome = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [incomeShareData, setIncomeShareData] = useState([]);\r\n\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n\r\n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\r\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n    setChildSpacesTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spaceincome?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        let cardSummaryItem = {}\r\n        cardSummaryItem['name'] = t('Total');\r\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\r\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\r\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\r\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\r\n        cardSummaryArray.push(cardSummaryItem);\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let incomeDataArray = [];\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let incomeDataItem = {}\r\n          incomeDataItem['id'] = index;\r\n          incomeDataItem['name'] = currentValue;\r\n          incomeDataItem['value'] = json['reporting_period']['subtotals'][index];\r\n          incomeDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n          incomeDataArray.push(incomeDataItem);\r\n        });\r\n        setIncomeShareData(incomeDataArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              let total_current_timstamp = 0.0;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n                total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value['total'] = total_current_timstamp;\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          }\r\n          ;\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          let total_of_subtotals = 0.0;\r\n          json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n            total_of_subtotals += currentValue\r\n          });\r\n          detailed_value['total'] = total_of_subtotals;\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          });\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n          detailed_column_list.push({\r\n            dataField: 'total',\r\n            text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodTotal',\r\n            text: t('Base Period') + ' - ' + t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          })\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodTotal',\r\n            text: t('Reporting Period') + ' - ' + t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          })\r\n\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              detailed_value['basePeriodTotal'] = 0.0;\r\n              if (detailed_value['basePeriodDatetime'] == null) {\r\n                detailed_value['basePeriodTotal'] = null;\r\n              }\r\n              json['base_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values'][energyCategoryIndex].length? json['base_period']['values'][energyCategoryIndex][index] : null;\r\n                if(detailed_value['a' + energyCategoryIndex] != null) {\r\n                  detailed_value['basePeriodTotal'] += detailed_value['a' + energyCategoryIndex];\r\n                }\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              detailed_value['reportingPeriodTotal'] = 0.0;\r\n              if (detailed_value['reportingPeriodDatetime'] == null) {\r\n                detailed_value['reportingPeriodTotal'] = null;\r\n              }\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values'][energyCategoryIndex].length? json['reporting_period']['values'][energyCategoryIndex][index] : null;\r\n                if(detailed_value['b' + energyCategoryIndex] != null) {\r\n                  detailed_value['reportingPeriodTotal'] += detailed_value['b' + energyCategoryIndex];\r\n                }\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            let total_of_subtotals_from_base_period = 0.0\r\n            json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n              total_of_subtotals_from_base_period += detailed_value['a' + index];\r\n            });\r\n            detailed_value['basePeriodTotal'] = total_of_subtotals_from_base_period;\r\n\r\n            let total_of_subtotals_from_reporting_period = 0.0\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n              total_of_subtotals_from_reporting_period += detailed_value['b' + index];\r\n            });\r\n            detailed_value['reportingPeriodTotal'] = total_of_subtotals_from_reporting_period;\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        let child_space_value_list = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let child_space_value = {};\r\n            child_space_value['id'] = spaceIndex;\r\n            child_space_value['name'] = currentSpaceName;\r\n            let total = 0.0;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\r\n              total += json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex]\r\n            });\r\n            child_space_value['total'] = total;\r\n            child_space_value_list.push(child_space_value);\r\n          });\r\n        };\r\n\r\n        setChildSpacesTableData(child_space_value_list);\r\n\r\n        let child_space_column_list = [];\r\n        child_space_column_list.push({\r\n          dataField: 'name',\r\n          text: t('Child Spaces'),\r\n          sort: true\r\n        });\r\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\r\n          let unit = json['child_space']['units'][index];\r\n          child_space_column_list.push({\r\n            dataField: 'a' + index,\r\n            text: currentValue + ' (' + unit + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n        });\r\n        child_space_column_list.push({\r\n          dataField: 'total',\r\n          text: t('Total') + ' (' + json['child_space']['total_unit'] + ')',\r\n          sort: true,\r\n          formatter: function (decimalValue) {\r\n            if (typeof decimalValue === 'number') {\r\n              return decimalValue.toFixed(2);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        });\r\n\r\n        setChildSpacesTableColumns(child_space_column_list);\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spaceincome.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Income')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Income CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n      </div>\r\n      <Row noGutters>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={incomeShareData} title={t('Incomes by Energy Category')} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Income CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Income CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Income CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Income CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\r\n      </ChildSpacesTable>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceIncome));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst SpaceEfficiency = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spaceefficiency?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n        let cardSummaryArray = []\r\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period_efficiency']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period_efficiency']['units'][index];\r\n          cardSummaryItem['cumulation'] = json['reporting_period_efficiency']['cumulations'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period_efficiency']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period_efficiency']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period_efficiency']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period_efficiency']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period_efficiency']['cumulations'].forEach((currentValue, index) => {\r\n          if (currentValue != null) {\r\n            base_subtotals['a' + index] = currentValue.toFixed(2);\r\n          }else {\r\n             base_subtotals['a' + index] = null;\r\n          }\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period_efficiency']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period_efficiency']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period_efficiency']['cumulations'].forEach((currentValue, index) => {\r\n          if (currentValue != null) {\r\n            reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n          }else {\r\n             reporting_subtotals['a' + index] = null;\r\n          }\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period_efficiency']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period_efficiency']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        let detailed_value_list = [];\r\n        if (json['reporting_period_efficiency']['timestamps'].length > 0) {\r\n          json['reporting_period_efficiency']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n            let detailed_value = {};\r\n            detailed_value['id'] = timestampIndex;\r\n            detailed_value['startdatetime'] = currentTimestamp;\r\n            json['reporting_period_efficiency']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n              if (json['reporting_period_efficiency']['values'][energyCategoryIndex][timestampIndex] != null) {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period_efficiency']['values'][energyCategoryIndex][timestampIndex];\r\n              } else {\r\n                detailed_value['a' + energyCategoryIndex] = null;\r\n              };\r\n            });\r\n\r\n            detailed_value_list.push(detailed_value);\r\n          });\r\n        };\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period_efficiency'])) {\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          json['reporting_period_efficiency']['cumulations'].forEach((currentValue, index) => {\r\n            if (currentValue != null) {\r\n              detailed_value['a' + index] = currentValue;\r\n            } else {\r\n              detailed_value['a' + index] = null;\r\n            }\r\n          });\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          })\r\n          json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period_efficiency']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period_efficiency']['names'] ===  json['reporting_period_efficiency']['names']\r\n          *     json['base_period_efficiency']['units'] ===  json['reporting_period_efficiency']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period_efficiency']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period_efficiency']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period_efficiency']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period_efficiency']['timestamps'].length > 0 || json['reporting_period_efficiency']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period_efficiency']['timestamps'][0].length >= json['reporting_period_efficiency']['timestamps'][0].length?\r\n                json['base_period_efficiency']['timestamps'][0].length : json['reporting_period_efficiency']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period_efficiency']['timestamps'][0].length? json['base_period_efficiency']['timestamps'][0][index] : null;\r\n              json['base_period_efficiency']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period_efficiency']['values'][energyCategoryIndex].length? json['base_period_efficiency']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period_efficiency']['timestamps'][0].length? json['reporting_period_efficiency']['timestamps'][0][index] : null;\r\n              json['reporting_period_efficiency']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period_efficiency']['values'][energyCategoryIndex].length? json['reporting_period_efficiency']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            json['base_period_efficiency']['cumulations'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n            });\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period_efficiency']['cumulations'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n            });\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spaceefficiency.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Efficiency')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Cumulative Efficiency NAME UNIT', { 'NAME': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            >\r\n            {cardSummaryItem['cumulation'] && <CountUp end={cardSummaryItem['cumulation']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n      </div>\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Cumulative Efficiency NAME VALUE UNIT\", \"substitute\": [\"NAME\", \"VALUE\", \"UNIT\"], \"NAME\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Cumulative Efficiency NAME VALUE UNIT\", \"substitute\": [\"NAME\", \"VALUE\", \"UNIT\"], \"NAME\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Cumulative Efficiency NAME VALUE UNIT\", \"substitute\": [\"NAME\", \"VALUE\", \"UNIT\"], \"NAME\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Cumulative Efficiency NAME VALUE UNIT\", \"substitute\": [\"NAME\", \"VALUE\", \"UNIT\"], \"NAME\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceEfficiency));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\n\r\nconst SpaceLoad = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spaceload?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {};\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['average'] = json['reporting_period']['averages'][index];\r\n          cardSummaryItem['average_increment_rate'] = parseFloat(json['reporting_period']['averages_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['average_per_unit_area'] = json['reporting_period']['averages_per_unit_area'][index];\r\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\r\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\r\n          cardSummaryItem['factor'] = json['reporting_period']['factors'][index];\r\n          cardSummaryItem['factor_increment_rate'] = parseFloat(json['reporting_period']['factors_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['sub_maximums'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\"/H)\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['sub_maximums'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates_of_sub_maximums'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + '/H)'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\r\n                if (json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex] != null) {\r\n                  detailed_value['a' + 2 * energyCategoryIndex] = json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex];\r\n                } else {\r\n                  detailed_value['a' + 2 * energyCategoryIndex] = null;\r\n                };\r\n\r\n                if (json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex] != null) {\r\n                  detailed_value['a' + (2 * energyCategoryIndex + 1)] = json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex];\r\n                } else {\r\n                  detailed_value['a' + (2 * energyCategoryIndex + 1)] = null;\r\n                };\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          }\r\n          ;\r\n\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          })\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + 2 * index,\r\n              text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n            detailed_column_list.push({\r\n              dataField: 'a' + (2 * index + 1),\r\n              text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + 2 * index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n            detailed_column_list.push({\r\n              dataField: 'a' + (2 * index + 1),\r\n              text: t('Base Period') + ' - ' + currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + 2 * index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n            detailed_column_list.push({\r\n              dataField: 'b' + (2 * index + 1),\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              json['base_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex*2] = index < json['base_period']['sub_averages'][energyCategoryIndex].length? json['base_period']['sub_averages'][energyCategoryIndex][index] : null;\r\n              });\r\n              json['base_period']['sub_maximums'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + (energyCategoryIndex*2+1)] = index < json['base_period']['sub_maximums'][energyCategoryIndex].length? json['base_period']['sub_maximums'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex*2] = index < json['reporting_period']['sub_averages'][energyCategoryIndex].length? json['reporting_period']['sub_averages'][energyCategoryIndex][index] : null;\r\n              });\r\n              json['reporting_period']['sub_maximums'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + (energyCategoryIndex*2+1)] = index < json['reporting_period']['sub_maximums'][energyCategoryIndex].length? json['reporting_period']['sub_maximums'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spaceload.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Load')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      {cardSummaryList.map(cardSummaryItem => (\r\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\r\n          <CardSummary key={cardSummaryItem['name'] + 'average'}\r\n            rate={cardSummaryItem['average_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Average Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['average_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\r\n            {cardSummaryItem['average'] && <CountUp end={cardSummaryItem['average']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\r\n            rate={cardSummaryItem['maximum_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['maximum_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\r\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n          <CardSummary key={cardSummaryItem['name'] + 'factor'}\r\n            rate={cardSummaryItem['factor_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Load Factor', { 'CATEGORY': cardSummaryItem['name'] })}\r\n            color=\"success\"\r\n            footnote={t('Ratio of Average Load to Maximum Load')} >\r\n            {cardSummaryItem['factor'] && <CountUp end={cardSummaryItem['factor']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        </div>\r\n      ))}\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period CATEGORY Maximum Load UNIT\", \"substitute\": [\"CATEGORY\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period CATEGORY Maximum Load UNIT\", \"substitute\": [\"CATEGORY\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period CATEGORY Maximum Load UNIT\", \"substitute\": [\"CATEGORY\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period CATEGORY Maximum Load UNIT\", \"substitute\": [\"CATEGORY\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceLoad));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\n\r\nconst SpaceStatistics = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spacestatistics?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {};\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['mean'] = json['reporting_period']['means'][index];\r\n          cardSummaryItem['mean_increment_rate'] = parseFloat(json['reporting_period']['means_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['mean_per_unit_area'] = json['reporting_period']['means_per_unit_area'][index];\r\n          cardSummaryItem['median'] = json['reporting_period']['medians'][index];\r\n          cardSummaryItem['median_increment_rate'] = parseFloat(json['reporting_period']['medians_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['median_per_unit_area'] = json['reporting_period']['medians_per_unit_area'][index];\r\n          cardSummaryItem['minimum'] = json['reporting_period']['minimums'][index];\r\n          cardSummaryItem['minimum_increment_rate'] = parseFloat(json['reporting_period']['minimums_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['minimum_per_unit_area'] = json['reporting_period']['minimums_per_unit_area'][index];\r\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\r\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\r\n          cardSummaryItem['stdev'] = json['reporting_period']['stdevs'][index];\r\n          cardSummaryItem['stdev_increment_rate'] = parseFloat(json['reporting_period']['stdevs_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['stdev_per_unit_area'] = json['reporting_period']['stdevs_per_unit_area'][index];\r\n          cardSummaryItem['variance'] = json['reporting_period']['variances'][index];\r\n          cardSummaryItem['variance_increment_rate'] = parseFloat(json['reporting_period']['variances_increment_rate'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['variance_per_unit_area'] = json['reporting_period']['variances_per_unit_area'][index];\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          }\r\n          ;\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n          });\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          })\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              json['base_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values'][energyCategoryIndex].length? json['base_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values'][energyCategoryIndex].length? json['reporting_period']['values'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            json['base_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n            });\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n            });\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spacestatistics.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Statistics')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      {cardSummaryList.map(cardSummaryItem => (\r\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\r\n          <CardSummary key={cardSummaryItem['name'] + 'mean'}\r\n            rate={cardSummaryItem['mean_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Mean UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['mean_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['mean'] && <CountUp end={cardSummaryItem['mean']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n          <CardSummary key={cardSummaryItem['name'] + 'median'}\r\n            rate={cardSummaryItem['median_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Median UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['median_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['median'] && <CountUp end={cardSummaryItem['median']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n          <CardSummary key={cardSummaryItem['name'] + 'minimum'}\r\n            rate={cardSummaryItem['minimum_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Minimum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['minimum_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['minimum'] && <CountUp end={cardSummaryItem['minimum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\r\n            rate={cardSummaryItem['maximum_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Maximum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['maximum_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n          <CardSummary key={cardSummaryItem['name'] + 'stdev'}\r\n            rate={cardSummaryItem['stdev_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Stdev UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['stdev_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['stdev'] && <CountUp end={cardSummaryItem['stdev']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n          <CardSummary key={cardSummaryItem['name'] + 'variance'}\r\n            rate={cardSummaryItem['variance_increment_rate']}\r\n            title={t('Reporting Period CATEGORY Variance UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['variance_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['variance'] && <CountUp end={cardSummaryItem['variance']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        </div>\r\n      ))}\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Consumption CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceStatistics));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport SharePie from '../common/SharePie';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\n\r\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst SpaceSaving = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'months').startOf('month').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n\r\n  //Results\r\n  const [TCEShareData, setTCEShareData] = useState([]);\r\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\r\n\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n  const [totalInTCE, setTotalInTCE] = useState({});\r\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\r\n\r\n  const [spaceBaseAndReportingNames, setSpaceBaseAndReportingNames] = useState({\"a0\":\"\"});\r\n  const [spaceBaseAndReportingUnits, setSpaceBaseAndReportingUnits] = useState({\"a0\":\"()\"});\r\n\r\n  const [spaceBaseLabels, setSpaceBaseLabels] = useState({\"a0\": []});\r\n  const [spaceBaseData, setSpaceBaseData] = useState({\"a0\": []});\r\n  const [spaceBaseSubtotals, setSpaceBaseSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingLabels, setSpaceReportingLabels] = useState({\"a0\": []});\r\n  const [spaceReportingData, setSpaceReportingData] = useState({\"a0\": []});\r\n  const [spaceReportingSubtotals, setSpaceReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n\r\n  const [spaceReportingRates, setSpaceReportingRates] = useState({\"a0\": []});\r\n  const [spaceReportingOptions, setSpaceReportingOptions] = useState([]);\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n\r\n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\r\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  const isBasePeriodTimestampExists = (base_period_data) => {\r\n    const timestamps = base_period_data['timestamps'];\r\n\r\n    if (timestamps.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < timestamps.length; i++) {\r\n      if (timestamps[i].length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n    setChildSpacesTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spacesaving?' +\r\n      'spaceid=' + selectedSpaceID +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {}\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals_saving'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates_saving'][index] * 100).toFixed(2) + \"%\";\r\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area_saving'][index];\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n        let totalInTCE = {};\r\n        totalInTCE['value'] = json['reporting_period']['total_in_kgce_saving'] / 1000; // convert from kg to t\r\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce_saving'] * 100).toFixed(2) + \"%\";\r\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area_saving'] / 1000; // convert from kg to t\r\n        setTotalInTCE(totalInTCE);\r\n\r\n        let totalInTCO2E = {};\r\n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e_saving'] / 1000; // convert from kg to t\r\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e_saving'] * 100).toFixed(2) + \"%\";\r\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area_saving'] / 1000; // convert from kg to t\r\n        setTotalInTCO2E(totalInTCO2E);\r\n\r\n        let TCEDataArray = [];\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let TCEDataItem = {}\r\n          TCEDataItem['id'] = index;\r\n          TCEDataItem['name'] = currentValue;\r\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce_saving'][index] / 1000; // convert from kg to t\r\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n          TCEDataArray.push(TCEDataItem);\r\n        });\r\n        setTCEShareData(TCEDataArray);\r\n\r\n        let TCO2EDataArray = [];\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let TCO2EDataItem = {}\r\n          TCO2EDataItem['id'] = index;\r\n          TCO2EDataItem['name'] = currentValue;\r\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e_saving'][index] / 1000; // convert from kg to t\r\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\r\n          TCO2EDataArray.push(TCO2EDataItem);\r\n        });\r\n        setTCO2EShareData(TCO2EDataArray);\r\n\r\n        let base_timestamps = {}\r\n        json['base_period']['timestamps'].forEach((currentValue, index) => {\r\n          base_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseLabels(base_timestamps)\r\n\r\n        let base_values = {}\r\n        json['base_period']['values_saving'].forEach((currentValue, index) => {\r\n          base_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseData(base_values)\r\n\r\n        /*\r\n        * Tip:\r\n        *     base_names === reporting_names\r\n        *     base_units === reporting_units\r\n        * */\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setSpaceBaseAndReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setSpaceBaseAndReportingUnits(base_and_reporting_units)\r\n\r\n        let base_subtotals = {}\r\n        json['base_period']['subtotals_saving'].forEach((currentValue, index) => {\r\n          base_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceBaseSubtotals(base_subtotals)\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values_saving'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        setSpaceReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setSpaceReportingSubtotals(reporting_subtotals);\r\n\r\n        let rates = {}\r\n        json['reporting_period']['rates_saving'].forEach((currentValue, index) => {\r\n          let currentRate = Array();\r\n          currentValue.forEach((rate) => {\r\n            currentRate.push(rate ? parseFloat(rate * 100).toFixed(2) : '0.00');\r\n          });\r\n          rates['a' + index] = currentRate;\r\n        });\r\n        setSpaceReportingRates(rates)\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setSpaceReportingOptions(options);\r\n\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        if(!isBasePeriodTimestampExists(json['base_period'])) {\r\n          let detailed_value_list = [];\r\n          if (json['reporting_period']['timestamps'].length > 0) {\r\n            json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = timestampIndex;\r\n              detailed_value['startdatetime'] = currentTimestamp;\r\n              json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values_saving'][energyCategoryIndex][timestampIndex];\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            });\r\n          };\r\n\r\n          let detailed_value = {};\r\n          detailed_value['id'] = detailed_value_list.length;\r\n          detailed_value['startdatetime'] = t('Subtotal');\r\n          json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\r\n            detailed_value['a' + index] = currentValue;\r\n          });\r\n          detailed_value_list.push(detailed_value);\r\n          setTimeout(() => {\r\n            setDetailedDataTableData(detailed_value_list);\r\n          }, 0)\r\n\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'startdatetime',\r\n            text: t('Datetime'),\r\n            sort: true\r\n          })\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n        } else {\r\n          /*\r\n          * Tip:\r\n          *     json['base_period']['names'] ===  json['reporting_period']['names']\r\n          *     json['base_period']['units'] ===  json['reporting_period']['units']\r\n          * */\r\n          let detailed_column_list = [];\r\n          detailed_column_list.push({\r\n            dataField: 'basePeriodDatetime',\r\n            text: t('Base Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['base_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['base_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'a' + index,\r\n              text: t('Base Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n\r\n          detailed_column_list.push({\r\n            dataField: 'reportingPeriodDatetime',\r\n            text: t('Reporting Period') + ' - ' + t('Datetime'),\r\n            sort: true\r\n          })\r\n\r\n          json['reporting_period']['names'].forEach((currentValue, index) => {\r\n            let unit = json['reporting_period']['units'][index];\r\n            detailed_column_list.push({\r\n              dataField: 'b' + index,\r\n              text: t('Reporting Period') + ' - ' + currentValue + ' (' + unit + ')',\r\n              sort: true,\r\n              formatter: function (decimalValue) {\r\n                if (typeof decimalValue === 'number') {\r\n                  return decimalValue.toFixed(2);\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n            })\r\n          });\r\n          setDetailedDataTableColumns(detailed_column_list);\r\n\r\n          let detailed_value_list = [];\r\n          if (json['base_period']['timestamps'].length > 0 || json['reporting_period']['timestamps'].length > 0) {\r\n            const max_timestamps_length = json['base_period']['timestamps'][0].length >= json['reporting_period']['timestamps'][0].length?\r\n                json['base_period']['timestamps'][0].length : json['reporting_period']['timestamps'][0].length;\r\n            for (let index = 0; index < max_timestamps_length; index++) {\r\n              let detailed_value = {};\r\n              detailed_value['id'] = index;\r\n              detailed_value['basePeriodDatetime'] = index < json['base_period']['timestamps'][0].length? json['base_period']['timestamps'][0][index] : null;\r\n              json['base_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['a' + energyCategoryIndex] = index < json['base_period']['values_saving'][energyCategoryIndex].length? json['base_period']['values_saving'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value['reportingPeriodDatetime'] = index < json['reporting_period']['timestamps'][0].length? json['reporting_period']['timestamps'][0][index] : null;\r\n              json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\r\n                detailed_value['b' + energyCategoryIndex] = index < json['reporting_period']['values_saving'][energyCategoryIndex].length? json['reporting_period']['values_saving'][energyCategoryIndex][index] : null;\r\n              });\r\n              detailed_value_list.push(detailed_value);\r\n            }\r\n\r\n            let detailed_value = {};\r\n            detailed_value['id'] = detailed_value_list.length;\r\n            detailed_value['basePeriodDatetime'] = t('Subtotal');\r\n            json['base_period']['subtotals_saving'].forEach((currentValue, index) => {\r\n              detailed_value['a' + index] = currentValue;\r\n            });\r\n            detailed_value['reportingPeriodDatetime'] = t('Subtotal');\r\n            json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\r\n              detailed_value['b' + index] = currentValue;\r\n            });\r\n            detailed_value_list.push(detailed_value);\r\n            setTimeout( () => {\r\n              setDetailedDataTableData(detailed_value_list);\r\n            }, 0)\r\n          }\r\n        }\r\n\r\n        let child_space_value_list = [];\r\n        if (json['child_space']['child_space_names_array'].length > 0) {\r\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\r\n            let child_space_value = {};\r\n            child_space_value['id'] = spaceIndex;\r\n            child_space_value['name'] = currentSpaceName;\r\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\r\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_saving_array'][energyCategoryIndex][spaceIndex];\r\n            });\r\n            child_space_value_list.push(child_space_value);\r\n          });\r\n        };\r\n\r\n        setChildSpacesTableData(child_space_value_list);\r\n\r\n        let child_space_column_list = [];\r\n        child_space_column_list.push({\r\n          dataField: 'name',\r\n          text: t('Child Spaces'),\r\n          sort: true\r\n        });\r\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\r\n          let unit = json['child_space']['units'][index];\r\n          child_space_column_list.push({\r\n            dataField: 'a' + index,\r\n            text: currentValue + ' (' + unit + ')',\r\n            sort: true,\r\n            formatter: function (decimalValue) {\r\n              if (typeof decimalValue === 'number') {\r\n                return decimalValue.toFixed(2);\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setChildSpacesTableColumns(child_space_column_list);\r\n\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false)\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'spacesaving.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Saving')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n          <CardSummary key={cardSummaryItem['name']}\r\n            rate={cardSummaryItem['increment_rate']}\r\n            title={t('Reporting Period Saving CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\r\n            color=\"success\"\r\n            footnote={t('Per Unit Area')}\r\n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\r\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\r\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n          </CardSummary>\r\n        ))}\r\n\r\n        <CardSummary\r\n          rate={totalInTCE['increment_rate'] || ''}\r\n          title={t('Reporting Period Saving CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\r\n          color=\"warning\"\r\n          footnote={t('Per Unit Area')}\r\n          footvalue={totalInTCE['value_per_unit_area']}\r\n          footunit=\"(TCE/M²)\">\r\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n        </CardSummary>\r\n        <CardSummary\r\n          rate={totalInTCO2E['increment_rate'] || ''}\r\n          title={t('Reporting Period Decreased CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\r\n          color=\"warning\"\r\n          footnote={t('Per Unit Area')}\r\n          footvalue={totalInTCO2E['value_per_unit_area']}\r\n          footunit=\"(TCO2E/M²)\">\r\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n        </CardSummary>\r\n      </div>\r\n      <Row noGutters>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\r\n        </Col>\r\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\r\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\r\n        </Col>\r\n      </Row>\r\n\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"Reporting Period Saving CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceReportingSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTitle = {{\"name\": \"Base Period Saving CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": spaceBaseSubtotals, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingTooltipTitle = {{\"name\": \"Reporting Period Saving CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        baseTooltipTitle = {{\"name\": \"Base Period Saving CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": spaceBaseAndReportingNames, \"VALUE\": null, \"UNIT\": spaceBaseAndReportingUnits}}\r\n        reportingLabels={spaceReportingLabels}\r\n        reportingData={spaceReportingData}\r\n        baseLabels={spaceBaseLabels}\r\n        baseData={spaceBaseData}\r\n        rates={spaceReportingRates}\r\n        options={spaceReportingOptions}>\r\n      </MultiTrendChart>\r\n\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n        baseTitle=''\r\n        labels={parameterLineChartLabels}\r\n        data={parameterLineChartData}\r\n        options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n\r\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\r\n      </DetailedDataTable>\r\n      <br />\r\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\r\n      </ChildSpacesTable>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceSaving));\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { APIBaseURL } from '../../../config';\r\nimport { getCookieValue } from '../../../helpers/utils';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst dividerBorder = '1px solid rgba(255, 255, 255, 0.15)';\r\nconst listItemBorderColor = 'rgba(255, 255, 255, 0.05)';\r\n\r\n\r\nclass RealtimeData extends Component {\r\n  _isMounted = false;\r\n  refreshInterval;\r\n  refreshTimeout;\r\n  state = {\r\n    trendLog: [],\r\n    currentEnergyValue: undefined,\r\n    energyValuePointName: undefined,\r\n    pointList: [],\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    clearInterval(this.refreshInterval);\r\n    clearTimeout(this.refreshTimeout);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    const { t } = this.props;\r\n    // fetch meter realtime data at the first time\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/spaceenvironmentmonitor?sensorid=' + this.props.sensorId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        let length = json['energy_value']['values'].length;\r\n        let trendLog = length > 60 ? json['energy_value']['values'].slice(length - 60, length)\r\n            : json['energy_value']['values'];\r\n        let currentEnergyValue = undefined;\r\n        let energyValuePointName = json['energy_value']['name'];\r\n        let pointList = [];\r\n        if (trendLog.length > 0) {\r\n          currentEnergyValue = trendLog[trendLog.length - 1];\r\n        }\r\n        json['parameters']['names'].forEach((currentName, index) => {\r\n          let pointItem = {}\r\n          pointItem['name'] = currentName;\r\n          pointItem['value'] = undefined;\r\n          let currentValues = json['parameters']['values'][index];\r\n          if (currentValues.length > 0) {\r\n            pointItem['value'] = currentValues[currentValues.length - 1];\r\n          }\r\n          pointList.push(pointItem);\r\n        });\r\n        if (this._isMounted) {\r\n          this.setState({\r\n            trendLog: trendLog,\r\n            currentEnergyValue: currentEnergyValue,\r\n            energyValuePointName: energyValuePointName,\r\n            pointList: pointList,\r\n          });\r\n        }\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n    //fetch meter realtime data at regular intervals\r\n    this.refreshInterval = setInterval(() => {\r\n      let isResponseOK = false;\r\n      fetch(APIBaseURL + '/reports/spaceenvironmentmonitor?sensorid=' + this.props.sensorId, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'User-UUID': getCookieValue('user_uuid'),\r\n          Token: getCookieValue('token')\r\n        },\r\n        body: null,\r\n\r\n      }).then(response => {\r\n        if (response.ok) {\r\n          isResponseOK = true;\r\n        }\r\n        return response.json();\r\n      }).then(json => {\r\n        if (isResponseOK) {\r\n          let trendLog = json['energy_value']['values'];\r\n          let currentEnergyValue = undefined;\r\n          let energyValuePointName = json['energy_value']['name'];\r\n          let pointList = [];\r\n          if (trendLog.length > 0) {\r\n            currentEnergyValue = trendLog[trendLog.length - 1];\r\n          }\r\n          json['parameters']['names'].forEach((currentName, index) => {\r\n            let pointItem = {}\r\n            pointItem['name'] = currentName;\r\n            pointItem['value'] = undefined;\r\n            let currentValues = json['parameters']['values'][index];\r\n            if (currentValues.length > 0) {\r\n              pointItem['value'] = currentValues[currentValues.length - 1];\r\n            }\r\n            pointList.push(pointItem);\r\n          });\r\n          if (this._isMounted) {\r\n            this.setState({\r\n              trendLog: trendLog,\r\n              currentEnergyValue: currentEnergyValue,\r\n              energyValuePointName: energyValuePointName,\r\n              pointList: pointList,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(t(json.description))\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }, (60 + Math.floor(Math.random() * Math.floor(10))) * 1000); // use random interval to avoid paralels requests\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <Card className=\"mb-3 overflow-hidden\" style={{ minWidth: '12rem', maxWidth: '25%' }}>\r\n        <CardHeader className=\"bg-transparent position-relative\">\r\n          <h5>{this.props.sensorName}</h5>\r\n          <div className=\"real-time-user display-4 font-weight-normal\"\r\n           style={{display:!this.state.currentEnergyValue ? \"none\" : \"inline\"}}>{this.state.currentEnergyValue}</div>\r\n        </CardHeader>\r\n        <CardBody className=\"fs--1 position-relative\">\r\n          <p className=\"pb-2\" style={{ borderBottom: dividerBorder, display:!this.state.energyValuePointName ? \"none\" : \"inline\" }}>\r\n            {t('Trend in the last hour of Energy Value Point')} {this.state.energyValuePointName}\r\n          </p>\r\n          <ListGroup flush className=\"mt-4\">\r\n            <ListGroupItem\r\n              className=\"bg-transparent d-flex justify-content-between px-0 py-1 font-weight-semi-bold border-top-0\"\r\n              style={{ borderColor: listItemBorderColor }}\r\n            >\r\n              <p className=\"mb-0\">{t('Operating Characteristic Curve')}</p>\r\n              <p className=\"mb-0\">{t('Realtime Value')}</p>\r\n            </ListGroupItem>\r\n            {this.state.pointList.map(pointItem => (\r\n              <ListGroupItem key={uuid()}\r\n                className=\"bg-transparent d-flex justify-content-between px-0 py-1\"\r\n                style={{ borderColor: listItemBorderColor }}\r\n              >\r\n                <p className=\"mb-0\">{pointItem['name']}</p>\r\n                <p className=\"mb-0\">{pointItem['value']}</p>\r\n              </ListGroupItem>\r\n            ))}\r\n          </ListGroup>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  withTranslation()(RealtimeData);\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Spinner,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink\r\n} from 'reactstrap';\r\nimport Cascader from 'rc-cascader';\r\nimport RealtimeData from './RealtimeData';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { toast } from 'react-toastify';\r\nimport { APIBaseURL, settings } from '../../../config';\r\n\r\nconst SpaceEnvironmentMonitor = ({ setRedirect, setRedirectUrl, t }) => {\r\n  const [cursor, setCursor] = useState(0);\r\n  const [maxCursor, setMaxCursor] = useState(0);\r\n  const [selectSensorList, setSelectSensorList] = useState([]);\r\n  const len = 8;\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [sensorList, setSensorList] = useState([]);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //begin of getting space tree\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.ok) {\r\n          isResponseOK = true;\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        console.log(json);\r\n        if (isResponseOK) {\r\n          // rename keys\r\n          json = JSON.parse(\r\n            JSON.stringify([json])\r\n              .split('\"id\":')\r\n              .join('\"value\":')\r\n              .split('\"name\":')\r\n              .join('\"label\":')\r\n          );\r\n          setCascaderOptions(json);\r\n          // set the default space\r\n          setSelectedSpaceName([json[0]].map(o => o.label));\r\n          let selectedSpaceID = [json[0]].map(o => o.value);\r\n          //begin of getting sensors of the default space\r\n          let isSecondResponseOK = false;\r\n          fetch(APIBaseURL + '/spaces/' + selectedSpaceID + '/sensors', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n              'User-UUID': getCookieValue('user_uuid'),\r\n              Token: getCookieValue('token')\r\n            },\r\n            body: null\r\n          })\r\n            .then(response => {\r\n              if (response.ok) {\r\n                isSecondResponseOK = true;\r\n              }\r\n              return response.json();\r\n            })\r\n            .then(json => {\r\n              if (isSecondResponseOK) {\r\n                json = JSON.parse(JSON.stringify([json]));\r\n                console.log(json);\r\n                setSensorList(json[0]);\r\n                setSpinnerHidden(true);\r\n              } else {\r\n                toast.error(t(json.description));\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n          //end of getting sensors of the default space\r\n        } else {\r\n          toast.error(t(json.description));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    //end of getting space tree\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    let selectedSpaceID = value[value.length - 1];\r\n    setSpinnerHidden(false);\r\n    //begin of getting sensors of the selected space\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/' + selectedSpaceID + '/sensors', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          isResponseOK = true;\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        if (isResponseOK) {\r\n          json = JSON.parse(JSON.stringify([json]));\r\n          console.log(json);\r\n          setSensorList(json[0]);\r\n\r\n          setSpinnerHidden(true);\r\n        } else {\r\n          toast.error(t(json.description));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    //end of getting sensors of the selected space\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sensorLen = sensorList.length;\r\n    const maxCursor = Math.ceil(sensorLen / len);\r\n\r\n    setCursor(1);\r\n    setMaxCursor(maxCursor);\r\n\r\n    document.getElementById(\"cursor_2\").hidden=true;\r\n    document.getElementById(\"cursor_3\").hidden=true;\r\n    document.getElementById(\"cursor_4\").hidden=true;\r\n    if(maxCursor == 2){\r\n      document.getElementById(\"cursor_2\").hidden=false;\r\n    }\r\n    if(maxCursor == 3){\r\n      document.getElementById(\"cursor_2\").hidden=false;\r\n      document.getElementById(\"cursor_3\").hidden=false;\r\n    }\r\n    if(maxCursor>=4)\r\n    {\r\n      document.getElementById(\"cursor_2\").hidden=false;\r\n      document.getElementById(\"cursor_3\").hidden=false;\r\n      document.getElementById(\"cursor_4\").hidden=false;\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectSensorList(sensorList.slice(cursor * len - 8, cursor * len));\r\n  }, []);\r\n\r\n  function getCursor(location){\r\n    switch (location){\r\n      case 1:\r\n            return cursor > maxCursor-3&&maxCursor - 3 >= 0 ? maxCursor-3 : cursor;\r\n      case 2:\r\n            return cursor > maxCursor-3&&maxCursor - 3 >= 0 ? maxCursor -2 : cursor +1;\r\n      case 3:\r\n            return cursor > maxCursor-3&&maxCursor - 3 >= 0 ? maxCursor -1: cursor +2;\r\n      case 4:\r\n            return cursor > maxCursor-3&&maxCursor - 3 >= 0 ? maxCursor  : cursor+3;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem>\r\n          <BreadcrumbItem active>{t('Environment Monitor')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader\r\n                    options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\"\r\n                  >\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className='card-deck'>\r\n      {selectSensorList.map(sensor => (\r\n            <RealtimeData key={uuid()} sensorId={sensor['id']} sensorName={sensor['name']} />\r\n        ))}\r\n      </div>\r\n      <Pagination>\r\n        <PaginationItem>\r\n          <PaginationLink first href=\"#\" onClick={() => setCursor(1)} />\r\n        </PaginationItem>\r\n\r\n        <PaginationItem>\r\n          <PaginationLink previous href=\"#\" onClick={() => (cursor - 1 >= 1 ? setCursor(cursor - 1) : null)} />\r\n        </PaginationItem>\r\n        <PaginationItem>\r\n          <PaginationLink href=\"#\" onClick={() => (setCursor(getCursor(1)))}>{getCursor(1)}</PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem id=\"cursor_2\">\r\n          <PaginationLink href=\"#\" onClick={() => (setCursor(getCursor(2)))}>{getCursor(2)}</PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem id=\"cursor_3\">\r\n          <PaginationLink href=\"#\" onClick={() => (setCursor(getCursor(3)))}>{getCursor(3)}</PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem id=\"cursor_4\">\r\n          <PaginationLink href=\"#\" onClick={() => (setCursor(getCursor(4)))}>{getCursor(4)}</PaginationLink>\r\n        </PaginationItem>\r\n        <PaginationItem >\r\n          <PaginationLink next href=\"#\" onClick={() => (cursor + 1 <= maxCursor ? setCursor(cursor + 1) : null)} />\r\n        </PaginationItem>\r\n        <PaginationItem>\r\n          <PaginationLink last href=\"#\" onClick={() => setCursor(maxCursor)} />\r\n        </PaginationItem>\r\n      </Pagination>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceEnvironmentMonitor));","import React, { Fragment, useEffect, useContext, useState } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport moment from 'moment';\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport * as echarts from 'echarts/lib/echarts';\r\nimport { SankeyChart } from 'echarts/charts';\r\nimport AppContext from '../../../context/Context';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay} from 'date-fns';\r\n\r\necharts.use([SankeyChart]);\r\nconst EnergyFlowDiagram = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirectUrl, setRedirect]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [energyFlowDiagramList, setEnergyFlowDiagramList] = useState([]);\r\n  const [selectedEnergyFlowDiagram, setSelectedEnergyFlowDiagram] = useState(undefined);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().startOf('month').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { isDark } = useContext(AppContext);\r\n\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n\r\n  //Results\r\n  const [energyFlowDiagramData, setEnergyFlowDiagramData] = useState({\"nodes\": [], \"links\": []});\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/energyflowdiagrams', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify(json).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        console.log(json);\r\n        setEnergyFlowDiagramList(json);\r\n        setSelectedEnergyFlowDiagram([json[0]].map(o => o.value));\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, [ ]);\r\n\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const getOption = () => {\r\n    let colorArr = ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de',\r\n      '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc'];\r\n    let backgroundColor = '#FFFFFF';\r\n    let labelColor = 'rgba(0, 0, 0, 1)';\r\n    let labelTextBorderColor = 'rgba(255, 255, 255, 1)';\r\n\r\n    if (isDark) {\r\n      colorArr = ['#4992ff', '#7cffb2', '#fddd60', '#ff6e76', '#58d9f9',\r\n        '#05c091', '#ff8a45', '#8d48e3', '#dd79ff'];\r\n      backgroundColor = '#100C2A';\r\n      labelColor = 'rgba(255, 255, 255, 1)';\r\n      labelTextBorderColor = 'rgba(0, 0, 0, 1)';\r\n    }\r\n\r\n    let colorIndex = 0;\r\n    for(let i = 0; i < energyFlowDiagramData.nodes.length; i++) {\r\n      let item = energyFlowDiagramData.nodes[i];\r\n      item.itemStyle = {color: colorArr[colorIndex%9]};\r\n      colorIndex ++;\r\n    }\r\n\r\n    energyFlowDiagramData.links.forEach(function (item) {\r\n      if(item.value === null) {\r\n          item.value = 0;\r\n      }\r\n      let sourceColor = null;\r\n      let targetColor = null;\r\n      for(let i = 0; i < energyFlowDiagramData.nodes.length; i++) {\r\n        if (item.source === energyFlowDiagramData.nodes[i].name) {\r\n          sourceColor = energyFlowDiagramData.nodes[i].itemStyle.color;\r\n        }\r\n        if (item.target === energyFlowDiagramData.nodes[i].name) {\r\n          targetColor = energyFlowDiagramData.nodes[i].itemStyle.color;\r\n        }\r\n        if(sourceColor != null && targetColor != null) {\r\n          break;\r\n        }\r\n      }\r\n      const color = {\r\n        type: 'linear',\r\n        x: 0,\r\n        y: 0,\r\n        x2: 1,\r\n        y2: 0,\r\n        colorStops: [{\r\n            offset: 0, color: sourceColor\r\n        }, {\r\n            offset: 1, color: targetColor\r\n        }],\r\n        globalCoord: false\r\n      }\r\n      item.lineStyle = {\r\n        color: color\r\n      }\r\n    });\r\n\r\n    return {\r\n      backgroundColor: backgroundColor,\r\n      tooltip: {\r\n        trigger: 'item',\r\n        triggerOn: 'mousemove'\r\n      },\r\n      series: [\r\n        {\r\n          name: 'sankey',\r\n          type: 'sankey',\r\n          data: energyFlowDiagramData.nodes,\r\n          links: energyFlowDiagramData.links,\r\n          focusNodeAdjacency: 'allEdges',\r\n          itemStyle: {\r\n            borderWidth: 1,\r\n            borderColor: '#aaa'\r\n          },\r\n          lineStyle: {\r\n            color: 'gradient',\r\n            curveness: 0.5\r\n          },\r\n          label: {\r\n            color: labelColor,\r\n            fontFamily: 'sans-serif',\r\n            fontSize: 13,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            textBorderWidth: 1.5,\r\n            textBorderColor: labelTextBorderColor\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n      setSubmitButtonDisabled(true);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      setSubmitButtonDisabled(false);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedEnergyFlowDiagram);\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'));\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/reports/energyflowdiagram?' +\r\n        'energyflowdiagramid=' +\r\n        selectedEnergyFlowDiagram +\r\n        '&reportingperiodstartdatetime=' +\r\n        moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n        '&reportingperiodenddatetime=' +\r\n        moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'), {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      };\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json)\r\n        setEnergyFlowDiagramData(json);\r\n        console.log(energyFlowDiagramData);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Auxiliary System')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Flow Diagram')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"energyFlowDiagramSelect\">\r\n                    {t('Energy Flow Diagram')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"energyFlowDiagramSelect\" name=\"energyFlowDiagramSelect\"\r\n                    value={selectedEnergyFlowDiagram} onChange={({ target }) => setSelectedEnergyFlowDiagram(target.value)}\r\n                  >\r\n                    {energyFlowDiagramList.map((energyFlowDiagram, index) => (\r\n                      <option value={energyFlowDiagram.value} key={index}>\r\n                        {energyFlowDiagram.label}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card className=\"mb-3 fs--1\">\r\n        <CardBody className=\"rounded-soft bg-gradient\">\r\n          <ReactEchartsCore\r\n            echarts={echarts}\r\n            option={getOption()}\r\n            data={energyFlowDiagramData}\r\n            style={{ width: '100%', height: 600 }}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(EnergyFlowDiagram));\r\n","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { APIBaseURL } from '../../../config';\r\nimport { getCookieValue } from '../../../helpers/utils';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst listItemBorderColor = 'rgba(255, 255, 255, 0.05)';\r\n\r\nclass RealtimeChart extends Component {\r\n  _isMounted = false;\r\n  refreshInterval;\r\n  refreshTimeout;\r\n  state = {\r\n    pointList: [],\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    clearInterval(this.refreshInterval);\r\n    clearTimeout(this.refreshTimeout);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    const { t } = this.props;\r\n    this._isMounted = true;\r\n    // fetch realtime data at the first time\r\n    let isResponseOK = false;\r\n    if (this.props.distributionSystemID != undefined) {\r\n      fetch(\r\n        APIBaseURL +\r\n          '/reports/distributionsystem?distributionsystemid=' +\r\n          this.props.distributionSystemID, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'User-UUID': getCookieValue('user_uuid'),\r\n          Token: getCookieValue('token')\r\n        },\r\n        body: null,\r\n\r\n      }).then(response => {\r\n        if (response.ok) {\r\n          isResponseOK = true;\r\n        }\r\n        return response.json();\r\n      }).then(json => {\r\n        if (isResponseOK) {\r\n          console.log(json);\r\n          let pointList = [];\r\n            json.forEach((currentCircuit, circuitIndex) => {\r\n              json[circuitIndex]['points'].forEach((currentPoint, pointIndex) => {\r\n                let pointItem = {}\r\n                pointItem['circuit'] = currentCircuit['name'];\r\n                pointItem['point'] = currentPoint['name'];\r\n                pointItem['value'] = currentPoint['value'];\r\n                pointItem['units'] = currentPoint['units'];\r\n                pointList.push(pointItem);\r\n              });\r\n            });\r\n          if (this._isMounted) {\r\n            this.setState({\r\n              pointList: pointList,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(t(json.description))\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    };\r\n\r\n    //fetch realtime data at regular intervals\r\n    this.refreshInterval = setInterval(() => {\r\n      let isResponseOK = false;\r\n      if (typeof this.props.distributionSystemID !== 'undefined') {\r\n        fetch(\r\n          APIBaseURL +\r\n            '/reports/distributionsystem?distributionsystemid=' +\r\n            this.props.distributionSystemID, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            console.log(json);\r\n            let pointList = [];\r\n            json.forEach((currentCircuit, circuitIndex) => {\r\n              json[circuitIndex]['points'].forEach((currentPoint, pointIndex) => {\r\n                let pointItem = {}\r\n                pointItem['circuit'] = currentCircuit['name'];\r\n                pointItem['point'] = currentPoint['name'];\r\n                pointItem['value'] = currentPoint['value'];\r\n                pointItem['units'] = currentPoint['units'];\r\n                pointList.push(pointItem);\r\n              });\r\n            });\r\n\r\n            if (this._isMounted) {\r\n              this.setState({\r\n                pointList: pointList,\r\n              });\r\n            }\r\n          } else {\r\n            toast.error(t(json.description))\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n    }, (60 + Math.floor(Math.random() * Math.floor(10))) * 1000); // use random interval to avoid paralels requests\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <Card className=\"h-100 bg-gradient\">\r\n        <CardBody className=\"text-white fs--1\">\r\n          <ListGroup flush className=\"mt-4\">\r\n\r\n            <ListGroupItem\r\n              className=\"bg-transparent d-flex justify-content-between px-0 py-1 font-weight-semi-bold border-top-0\"\r\n              style={{ borderColor: listItemBorderColor }}\r\n            >\r\n              <p className=\"mb-0\">{t('Circuit')}</p>\r\n              <p className=\"mb-0\">{t('Point')}</p>\r\n              <p className=\"mb-0\">{t('Realtime Value')}</p>\r\n              <p className=\"mb-0\">{t('Unit')}</p>\r\n            </ListGroupItem>\r\n            {this.state.pointList.map(pointItem => (\r\n              <ListGroupItem key={uuid()}\r\n                className=\"bg-transparent d-flex justify-content-between px-0 py-1\"\r\n                style={{ borderColor: listItemBorderColor }}\r\n              >\r\n                <p className=\"mb-0\">{pointItem['circuit']}</p>\r\n                <p className=\"mb-0 \">{pointItem['point']}</p>\r\n                <p className=\"mb-0\">{pointItem['value']}</p>\r\n                <p className=\"mb-0\">{pointItem['units']}</p>\r\n              </ListGroupItem>\r\n            ))}\r\n          </ListGroup>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  withTranslation()(RealtimeChart);\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  });\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\nexport default useInterval;\r\n","import React,{Component, useEffect, useState} from 'react'\r\nimport * as echarts from 'echarts/lib/echarts'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/component/tooltip'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/component/markPoint'\r\nimport 'echarts/lib/component/grid'\r\nimport 'echarts/lib/component/dataZoom'\r\n\r\n\r\nexport const Charts = (props) => {\r\n    const pointid = props.pointid\r\n    const pointname = props.pointname\r\n    const namewithid = pointname + ' ( ID: ' + pointid + ' )'\r\n    const optionData=props.data\r\n    const id = 'default-id'\r\n\r\n    useEffect(() => {\r\n        if( optionData.timeArr == undefined){\r\n             optionData.timeArr=[]\r\n             optionData.valueArr=[]\r\n        }\r\n        else{\r\n             optionData.timeArr=  optionData['timeArr'].map(time => {\r\n                return time.replace(\"T\",\" \").replace(\"Z\",\"\")\r\n            })\r\n            optionData.valueArr=  optionData['valueArr']\r\n        }\r\n        console.log('optionData in charts:' + optionData);\r\n        console.log('pointname in charts:' + pointname);\r\n\r\n        const option = {\r\n            textStyle:{\r\n                color:'rgb(255,255,255,0.9)'\r\n            },\r\n            title: {\r\n                text: namewithid,\r\n                x: 'center',\r\n                textStyle:{\r\n                    color:'rgb(255,255,255,0.9)'\r\n                }\r\n            },\r\n            tooltip:{\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                top: 20,\r\n                right: 50,\r\n                data:['value'],\r\n                textStyle:{\r\n                    color:'rgb(255,255,255,0.9)'\r\n                }\r\n            },\r\n            xAxis: {\r\n                data: optionData['timeArr']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            dataZoom: [\r\n                {\r\n                    type: 'slider',\r\n                    start: 90,\r\n                    end: 100\r\n                }\r\n            ],\r\n            series : [\r\n                {\r\n                    type:'line',\r\n                    data: optionData['valueArr']\r\n                }\r\n            ]\r\n        }\r\n        const chart = echarts.init(document.getElementById(id));\r\n        chart.clear();\r\n        chart.setOption(option);\r\n    }, [])\r\n\r\n    return (\r\n        <div id={id} style={{height: '500px',marginTop: '30px'}}></div>\r\n    )\r\n}\r\nexport default Charts;","import React,{Component} from 'react'\r\nimport Charts from './charts';\r\nexport const Dialog = (props) => {\r\n    if(props.type == 'charts'){\r\n        const data = props.data;\r\n        return (\r\n            <div style={{display:props.display, width: \"100%\", height: \"100%\", position: \"fixed\", left: \"0\", right: \"0\", backgroundColor: \"#061423\", color: \"#fff\", position: \"fixed !important\", top: \"0\", bottom: \"0\", right: \"0\", left: \"0\", background: \"rgb(0,0,0,0.5)\"}}>\r\n                <div style={{ position: 'fixed', height: '600px', width: '1600px', left: '50%', top: '60%', backgroundColor: 'rgb(186, 186, 186)', transform: 'translate(-50%,-50%)'}}>\r\n                    <button onClick={props.hide} style={{position: 'absolute',right: '0',zIndex: '99999',color:'#000'}}>&times;</button>\r\n                    <div>\r\n                        <Charts data={data} pointid={props.pointid} pointname={props.pointname}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nexport default Dialog;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Row,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport RealtimeChart from './RealtimeChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { toast } from 'react-toastify';\r\nimport useInterval from '../../../hooks/useInterval';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport ScorpioMenu from 'scorpio-menu';\r\nimport Dialog from '../common/dialog/dialog';\r\n\r\nconst DistributionSystem = ({ setRedirect, setRedirectUrl, t }) => {\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirectUrl, setRedirect]);\r\n\r\n  // State\r\n  // Right Click Menu\r\n  const [display,setDisplay] = useState(\"none\");\r\n  const [position,setPosition] = useState({x: 0,y: 0,});\r\n  const [show,setShow] = useState(false);\r\n  const [pointid,setPointid] = useState(\"\");\r\n  const [pointname,setPointname] = useState(\"\");\r\n  const [type,setType] = useState(\"\");\r\n  const [arr,setArr] = useState({timeArr:[],valueArr:[]});\r\n\r\n  // Query Parameters\r\n  const [distributionSystemList, setDistributionSystemList] = useState([]);\r\n  const [selectedDistributionSystemID, setSelectedDistributionSystemID] = useState(undefined);\r\n\r\n  //Results\r\n  const [images, setImages] = useState([]);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\r\n  const [SVGSystemReportDict, setSVGSystemReportDict] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/distributionsystems', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify(json).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n\r\n        console.log(json);\r\n        setDistributionSystemList(json);\r\n        setSelectedDistributionSystemID([json[0]].map(o => o.value));\r\n\r\n        let images = {};\r\n        json.forEach((currentValue, index) => {\r\n          images[currentValue['value']] = {__html: currentValue['svg']}\r\n          setSVGSystemReportDict({ __html: currentValue['svg'] });\r\n        });\r\n        setImages(images);\r\n        setSpinnerHidden(true);\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n\r\n  const refreshSVGData =()=> {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/reports/pointrealtime', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        json.forEach((currentPoint) => {\r\n          let textElement=document.getElementById(\"PT\"+currentPoint['point_id'])\r\n          if(textElement){\r\n            let tspanList = textElement.getElementsByTagName('tspan')\r\n            if (tspanList && tspanList.length > 0) {\r\n              let tspanElement = tspanList[tspanList.length - 1]\r\n              tspanElement.textContent = parseFloat(currentPoint['value']).toFixed(2)\r\n            } else {\r\n              textElement.textContent=parseFloat(currentPoint['value']).toFixed(2)\r\n            }\r\n          }\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  useInterval(() => {\r\n    refreshSVGData();\r\n  }, 1000 * 3);\r\n\r\n\r\n\r\n  const onContextMenu = (event) => {\r\n    event.preventDefault();\r\n    let position = {\r\n        x: event.pageX,\r\n        y: event.pageY,\r\n    }\r\n    var element = document.elementFromPoint(position.x, position.y);\r\n\r\n    let pt_id=element.getAttribute('id')\r\n\r\n    if(!pt_id ||element.tagName!=\"text\"){\r\n      setPosition(position)\r\n      setShow(false)\r\n      return;\r\n    }\r\n\r\n    setPointid(pt_id.replace(\"PT\",\"\"))\r\n\r\n    setPosition(position)\r\n    setShow(true)\r\n    if(pt_id !=''){\r\n      // getChartsData()\r\n      // getPointName()\r\n    }\r\n  }\r\n\r\n  const onMenuClick = (e) => {\r\n    setShow(false)\r\n    if(e.value == 'charts'){\r\n      setDisplay('block')\r\n      setType('charts')\r\n    }\r\n  }\r\n\r\n  const onClose = (e) => {\r\n    setShow(false)\r\n  }\r\n\r\n  const hide =()=>{\r\n    setDisplay(\"none\")\r\n  }\r\n\r\n  let onDistributionSystemChange = (event) => {\r\n    setSelectedDistributionSystemID(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Auxiliary System')}</BreadcrumbItem><BreadcrumbItem active>{t('Distribution System')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form >\r\n            <Row form style={{height:\"38px\"}}>\r\n              <Col xs={6} sm={3} style={{height:\"37px\"}}>\r\n                <FormGroup>\r\n                  <CustomInput type=\"select\" id=\"distributionSystemSelect\" name=\"distributionSystemSelect\"\r\n                    value={selectedDistributionSystemID} onChange={onDistributionSystemChange}\r\n                  >\r\n                    {distributionSystemList.map((distributionSystem, index) => (\r\n                      <option value={distributionSystem.value} key={distributionSystem.value}>\r\n                        {distributionSystem.label}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Row noGutters>\r\n\r\n        <Col lg=\"4\" className=\"pr-lg-2\" key={uuid()}>\r\n          <RealtimeChart\r\n            distributionSystemID={selectedDistributionSystemID}\r\n          />\r\n        </Col>\r\n\r\n        <Col lg=\"8\" className=\"pr-lg-2\">\r\n          <div onContextMenu={onContextMenu} dangerouslySetInnerHTML={images[selectedDistributionSystemID]} />\r\n        </Col>\r\n\r\n      </Row>\r\n      <Card className=\"bg-light\">\r\n        <div onContextMenu={onContextMenu}\r\n          className=\"demo\">\r\n          <ScorpioMenu\r\n          data={[{\r\n              \"label\": \"趋势图\",\r\n              \"value\": \"charts\"\r\n              }]\r\n          }\r\n          position={{\"x\":position.x,\"y\":position.y}}\r\n          show={show}\r\n          onMenuClick={onMenuClick}\r\n          onClose={onClose} />\r\n        </div>\r\n        <div>\r\n            <Dialog display={display} hide={hide} type={type} data={arr} pointid={pointid} pointname={pointname} />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(DistributionSystem));\r\n","import React from 'react';\r\nimport { Col, Row, Spinner } from 'reactstrap';\r\n\r\nconst Loader = props => (\r\n  <Row className=\"flex-center py-5\">\r\n    <Col xs=\"auto\">\r\n      <Spinner {...props} />\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nLoader.propTypes = { ...Spinner.propTypes };\r\n\r\nLoader.defaultProps = {\r\n  type: 'grow',\r\n  size: 'lg',\r\n  color: 'primary'\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport Slider from 'react-slick/lib';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Flex from '../../common/Flex';\r\nimport classNames from 'classnames';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport AppContext, { ProductContext } from '../../../context/Context';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst MicrogridListItem = ({\r\n  id,\r\n  uuid,\r\n  files,\r\n  name,\r\n  address,\r\n  postal_code,\r\n  serial_number,\r\n  batteryState,\r\n  batterySocPointValue,\r\n  batteryPowerPointValue,\r\n  photovoltaicPowerPointValue,\r\n  loadPowerPointValue,\r\n  gridPowerPointValue,\r\n  alarms,\r\n  isOnline,\r\n  PCSRunState,\r\n  index,\r\n  t\r\n}) => {\r\n  const { isDark } = useContext(AppContext);\r\n  const {  favouriteItemsDispatch } = useContext(ProductContext);\r\n  const [cartLoading, setCartLoading] = useState(false);\r\n\r\n  const handleAddToCart = () => {\r\n    setCartLoading(true);\r\n    setTimeout(() => {\r\n      setCartLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Col xs={12} className={classNames('p-3', { 'bg-100': isDark && index % 2 !== 0 })}>\r\n      <div className=\"p-1\">\r\n        <Row>\r\n          <Col sm={5} md={4}>\r\n            <div className=\"position-relative h-sm-100\">\r\n              <Link className=\"d-block h-100\" to={`/microgrid/details?uuid=${uuid}`} target = \"_blank\">\r\n                <img\r\n                  className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded absolute-sm-centered\"\r\n                      src={files[0]['src']}\r\n                />\r\n                </Link>\r\n              {isOnline && (\r\n                <Badge color=\"success\" pill className=\"position-absolute t-0 r-0 mr-2 mt-2 fs--2 z-index-2\">\r\n                  {PCSRunState === 'Running' ? t('PCS Running') : PCSRunState === 'Initializing' ? t('PCS Initializing') : PCSRunState === 'Standby' ? t('PCS Standby') : PCSRunState === 'Shutdown' ? t('PCS Shutdown') : PCSRunState === 'Fault' ? t('PCS Fault') : t('PCS Unknown')}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col sm={7} md={8}>\r\n            <Row>\r\n              <Col lg={7}>\r\n                <h5 className=\"mt-3 mt-sm-0\">\r\n                  <Link to={`/microgrid/details?uuid=${uuid}`} target = \"_blank\">{name}</Link>\r\n                </h5>\r\n                <p className=\"fs--1 mb-2 mb-md-3\">\r\n                    {address}\r\n                </p>\r\n                <p className=\"fs--1 mb-2 mb-md-3\">\r\n                    {postal_code}\r\n                </p>\r\n                <p className=\"fs--1 mb-2 mb-md-3\">\r\n                    {serial_number}\r\n                </p>\r\n                <div className=\"d-none d-lg-block\">\r\n                    <p className=\"fs--1 mb-1\">{t('Battery Power')}:<strong>{batteryPowerPointValue} kW</strong></p>\r\n                    <p className=\"fs--1 mb-1\">{t('Photovoltaic Power')}:<strong>{photovoltaicPowerPointValue} kW</strong></p>\r\n                    <p className=\"fs--1 mb-1\">{t('Load Power')}:<strong>{loadPowerPointValue} kW</strong></p>\r\n                    <p className=\"fs--1 mb-1\">{t('Grid Power')}:<strong>{gridPowerPointValue} kW</strong></p>\r\n                  </div>\r\n              </Col>\r\n              <Col lg={5} tag={Flex} justify=\"between\" column>\r\n                <div>\r\n                  <h4 className=\"fs-1 fs-md-2 text-warning mb-0\">\r\n                    SoC: {batterySocPointValue} %\r\n                  </h4>\r\n                  <p className=\"fs--1 mb-1\">\r\n                      {t('Communication Status')}:{' '}\r\n                      <strong className={classNames({ 'text-success': isOnline, 'text-danger': !isOnline })}>\r\n                        {isOnline ? t('Communication Online') : t('Communication Offline')}\r\n                      </strong>\r\n                    </p>\r\n                    <p className=\"fs--1 mb-1\">\r\n                      {t('Battery State')}:{' '}\r\n                      <strong className={classNames({ 'text-success': batteryState === 'Charging' || batteryState === 'Discharging',\r\n                      'text-danger':  batteryState === 'Unknown' || batteryState === 'Stopped'})}>\r\n                        {batteryState === 'Charging' ? t('Battery Charging') : batteryState === 'Discharging' ? t('Battery Discharging') : batteryState === 'Stopped' ? t('Battery Stopped'): t('Battery Unknown')}\r\n                      </strong>\r\n                    </p>\r\n                    <p className=\"fs--1 mb-1\">\r\n                      {t('PCS Run State')}:{' '}\r\n                      <strong className={classNames({ 'text-success': PCSRunState === 'Running',\r\n                      'text-danger':  PCSRunState === 'Unknown' || PCSRunState === 'Initializing' || PCSRunState === 'Standby' || PCSRunState === 'Shutdown' || PCSRunState === 'Fault'})}>\r\n                        {PCSRunState === 'Running' ? t('PCS Running') : PCSRunState === 'Initializing' ? t('PCS Initializing') : PCSRunState === 'Standby' ? t('PCS Standby') : PCSRunState === 'Shutdown' ? t('PCS Shutdown') : PCSRunState === 'Fault' ? t('PCS Fault') : t('PCS Unknown')}\r\n                      </strong>\r\n                    </p>\r\n\r\n                </div>\r\n                <div className=\"mt-md-2\">\r\n                  <ButtonIcon\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    icon=\"tv\"\r\n                    iconClassName=\"ml-2 d-none d-md-inline-block\"\r\n                    className=\"w-lg-100 mt-2\"\r\n                    onClick={() => window.open(`microgrid/details?uuid=${uuid}`, '_blank')}\r\n                  >\r\n                    {t('Monitoring')}\r\n                  </ButtonIcon>\r\n                  <ButtonIcon\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    icon=\"chart-pie\"\r\n                    iconClassName=\"ml-2 d-none d-md-inline-block\"\r\n                    className=\"w-lg-100 mt-2\"\r\n                    onClick={() => window.open(`microgrid/reporting?uuid=${uuid}`, '_blank')}\r\n                  >\r\n                    {t('Reporting')}\r\n                  </ButtonIcon>\r\n                  <ButtonIcon\r\n                    color={isOnline ? 'outline-danger' : 'outline-secondary'}\r\n                    size=\"sm\"\r\n                    className={classNames('w-lg-100 mt-2 mr-2 mr-lg-0', {\r\n                      'border-300': !isOnline\r\n                    })}\r\n                    icon={[isOnline ? 'fas' : 'far', 'exclamation-triangle']}\r\n                      onClick={() => window.open('notification', '_blank')}\r\n                  >\r\n                    {t('Fault Alarms')}({alarms.length})\r\n                  </ButtonIcon>\r\n\r\n                  <ButtonIcon\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    icon=\"tools\"\r\n                    iconClassName=\"ml-2 d-none d-md-inline-block\"\r\n                    className=\"w-lg-100 mt-2\"\r\n                    onClick={handleAddToCart}\r\n                  >\r\n                    {t('Maintenance')}\r\n                  </ButtonIcon>\r\n\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nMicrogridListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  files: PropTypes.array,\r\n  address: PropTypes.string,\r\n  postal_code: PropTypes.string,\r\n  serial_number: PropTypes.string,\r\n  batteryState: PropTypes.string,\r\n  batterySocPointValue: PropTypes.number,\r\n  batteryPowerPointValue: PropTypes.number,\r\n  photovoltaicPowerPointValue: PropTypes.number,\r\n  loadPowerPointValue: PropTypes.number,\r\n  gridPowerPointValue: PropTypes.number,\r\n  alarms: PropTypes.array,\r\n  isOnline: PropTypes.bool,\r\n  PCSRunState: PropTypes.string\r\n};\r\n\r\nMicrogridListItem.defaultProps = { isOnline: false, files: [] };\r\n\r\nexport default withTranslation()(MicrogridListItem);\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppContext from '../../../context/Context';\r\nimport { Button, CardFooter } from 'reactstrap';\r\nimport Flex from '../../common/Flex';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getPaginationArray } from '../../../helpers/utils';\r\n\r\nconst MicrogridFooter = ({ meta, handler }) => {\r\n  const { isRTL } = useContext(AppContext);\r\n  const { total, pageNo, itemsPerPage, nextPageNo, prevPageNo } = meta;\r\n  const { nextPage, prevPage, currentPage } = handler;\r\n\r\n  return (\r\n    <CardFooter tag={Flex} justify=\"center\" align=\"center\" className=\"bg-light border-top\">\r\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={prevPage} disabled={!prevPageNo}>\r\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'right' : 'left'}`} />\r\n      </Button>\r\n      {getPaginationArray(total, itemsPerPage).map(page => (\r\n        <Button\r\n          color={pageNo === page ? 'falcon-primary' : 'falcon-default'}\r\n          size=\"sm\"\r\n          className=\"ml-2\"\r\n          onClick={() => currentPage(page)}\r\n          key={page}\r\n        >\r\n          {page}\r\n        </Button>\r\n      ))}\r\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={nextPage} disabled={!nextPageNo}>\r\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'left' : 'right'}`} />\r\n      </Button>\r\n    </CardFooter>\r\n  );\r\n};\r\n\r\nMicrogridFooter.propTypes = {\r\n  meta: PropTypes.object.isRequired,\r\n  handler: PropTypes.object.isRequired\r\n};\r\n\r\nexport default MicrogridFooter;\r\n","import { useState, useEffect } from 'react';\r\nimport chunk from 'lodash/chunk';\r\nimport { isIterableArray } from '../helpers/utils';\r\n\r\nconst usePagination = (items, defaultItemsPerPage = 5) => {\r\n  const [data, setData] = useState([]);\r\n  const [itemsChunk, setItemsChunk] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [lastPageNo, setLastPageNo] = useState(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\r\n  const [pageNo, setPageNo] = useState(null);\r\n  const [from, setFrom] = useState(1);\r\n  const [to, setTo] = useState(itemsPerPage);\r\n  const [prevPageNo, setPrevPageNo] = useState(true);\r\n  const [nextPageNo, setNextPageNo] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setData(isIterableArray(itemsChunk[pageNo - 1]) ? itemsChunk[pageNo - 1] : []);\r\n  }, [setData, itemsPerPage, itemsChunk, pageNo]);\r\n\r\n  useEffect(() => {\r\n    setItemsChunk(chunk(items, itemsPerPage));\r\n    setPageNo(1);\r\n    setTotal(items.length);\r\n  }, [itemsPerPage, setPageNo, items]);\r\n\r\n  useEffect(() => {\r\n    setFrom(itemsPerPage * (pageNo - 1) + 1);\r\n    setTo(itemsPerPage * (pageNo - 1) + data.length);\r\n    setPrevPageNo(pageNo > 1 ? pageNo - 1 : null);\r\n    setNextPageNo(pageNo < lastPageNo ? pageNo + 1 : null);\r\n  }, [itemsPerPage, pageNo, data, lastPageNo]);\r\n\r\n  useEffect(() => {\r\n    setLastPageNo(itemsChunk.length);\r\n  }, [itemsChunk]);\r\n\r\n  const handleNextPage = () => setPageNo(pageNo + 1);\r\n  const handlePrevPage = () => setPageNo(pageNo - 1);\r\n\r\n  return {\r\n    data,\r\n    meta: { total, pageNo, lastPageNo, itemsPerPage, from, to, nextPageNo, prevPageNo },\r\n    handler: {\r\n      nextPage: handleNextPage,\r\n      prevPage: handlePrevPage,\r\n      currentPage: setPageNo,\r\n      perPage: setItemsPerPage\r\n    }\r\n  };\r\n};\r\n\r\nexport default usePagination;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport Loader from '../../common/Loader';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport Flex from '../../common/Flex';\r\nimport classNames from 'classnames';\r\nimport MicrogridListItem from './MicrogridListItem';\r\nimport MicrogridFooter from './MicrogridFooter';\r\nimport usePagination from '../../../hooks/usePagination';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport CustomizeMapBox from '../common/CustomizeMapBox';\r\n\r\n\r\nconst MicrogridList = ({ setRedirect, setRedirectUrl, t }) => {\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  const [microgridArray, setMicrogridArray] = useState([]);\r\n  const [microgridIds, setMicrogridIds] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [geojson, setGeojson] = useState([]);\r\n  const [rootLatitude, setRootLatitude] = useState('');\r\n  const [rootLongitude, setRootLongitude] = useState('');\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/microgridlist', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        setMicrogridArray([]);\r\n        setMicrogridIds([]);\r\n        let microgridArray = [];\r\n        let microgridIds = [];\r\n        let geojsonData = [];\r\n        if (json.length > 0) {\r\n          setRootLongitude(json[0]['longitude']);\r\n          setRootLatitude(json[0]['latitude']);\r\n          json.forEach((currentValue, index) => {\r\n            let microgird = {}\r\n            microgird['id'] = json[index]['id'];\r\n            microgird['name'] = json[index]['name'];\r\n            microgird['uuid'] = json[index]['uuid'];\r\n            microgird['address'] = json[index]['address'];\r\n            microgird['postal_code'] = json[index]['postal_code'];\r\n            microgird['latitude'] = json[index]['latitude'];\r\n            microgird['longitude'] = json[index]['longitude'];\r\n            microgird['serial_number'] = json[index]['serial_number'];\r\n            microgird['files'] = [{ id: json[index]['uuid'], src: require('./Microgrid.jpeg'), }];\r\n            microgird['batteryState'] = json[index]['battery_state'];\r\n            microgird['batterySocPointValue'] = json[index]['battery_soc_point_value'];\r\n            microgird['batteryPowerPointValue'] = json[index]['battery_power_point_value'];\r\n            microgird['photovoltaicPowerPointValue'] = json[index]['photovoltaic_power_point_value'];\r\n            microgird['loadPowerPointValue'] = json[index]['load_power_point_value'];\r\n            microgird['gridPowerPointValue'] = json[index]['grid_power_point_value'];\r\n            microgird['PCSRunState'] = json[index]['pcs_run_state'];\r\n            microgird['alarms'] = ['supply temperature is high', 'return temperature is low'];\r\n            microgird['isOnline'] = json[index]['is_online'];\r\n\r\n            microgridArray.push(microgird);\r\n            microgridIds.push(microgird['id']);\r\n            geojsonData.push({\r\n              'type': 'Feature',\r\n              'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': [json[index]['longitude'], json[index]['latitude']]\r\n                },\r\n              'properties': {\r\n                'title': json[index]['name'],\r\n                'description': json[index]['description'],\r\n                'uuid': json[index]['uuid'],\r\n                'url': '/microgrid/details'\r\n                }\r\n            })\r\n          });\r\n        }\r\n        setMicrogridArray(microgridArray);\r\n        setMicrogridIds(microgridIds);\r\n        console.log('microgridArray:');\r\n        console.log(microgridArray);\r\n        console.log('microgridIds:');\r\n        console.log(microgridIds);\r\n        setIsLoading(false);\r\n        setGeojson(geojsonData);\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const sliderSettings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  // Hook\r\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(microgridIds);\r\n  const { total, itemsPerPage, from, to } = paginationMeta;\r\n  const { perPage } = paginationHandler;\r\n\r\n  const isList = true;\r\n  const isGrid = false;\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\r\n          <Row>\r\n            <Col xs={8}>\r\n            {isLoading ? (\r\n              <Loader />\r\n            ) : (\r\n                <Row noGutters={isList}>\r\n                  {isIterableArray(microgridArray) &&\r\n                    microgridArray\r\n                      .filter(microgrid => paginationData.includes(microgrid.id))\r\n                      .map((microgrid, index) => <MicrogridListItem {...microgrid} sliderSettings={sliderSettings} key={microgrid.id} index={index} />)}\r\n                </Row>\r\n              )}\r\n            </Col>\r\n            <Col>\r\n              <CustomizeMapBox Latitude={rootLatitude} Longitude={rootLongitude} Zoom={10} Geojson={geojson}></CustomizeMapBox>\r\n            </Col>\r\n            </Row>\r\n        </CardBody>\r\n        <MicrogridFooter meta={paginationMeta} handler={paginationHandler} />\r\n      </Card>\r\n      <Card className=\"mb-3\">\r\n        <CardBody>\r\n          <Row className=\"justify-content-between align-items-center\">\r\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\r\n              <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {t('Show Up to')}\r\n              </h6>\r\n              <CustomInput\r\n                id=\"itemsPerPage\"\r\n                type=\"select\"\r\n                bsSize=\"sm\"\r\n                value={itemsPerPage}\r\n                onChange={({ target }) => perPage(Number(target.value))}\r\n              >\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={total}>{t('All')}</option>\r\n              </CustomInput>\r\n              <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {t('FROM - TO of TOTAL', { 'FROM': from, 'TO': to, 'TOTAL': total })}\r\n              </h6>\r\n            </Col>\r\n\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(MicrogridList));\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Row,\r\n  Table,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport FalconCardHeader from '../../common/FalconCardHeader';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport useInterval from '../../../hooks/useInterval';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Datetime from 'react-datetime';\r\n\r\n\r\nconst MicrogridDetails = ({ setRedirect, setRedirectUrl, t }) => {\r\n  const location = useLocation();\r\n  const microgridUUID = location.search.split('=')[1];\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n\r\n  // State\r\n  const [chargeStartTime1, setChargeStartTime1] = useState(null);\r\n  const [chargeEndTime1, setChargeEndTime1] = useState(null);\r\n  const [chargeStartTime2, setChargeStartTime2] = useState(null);\r\n  const [chargeEndTime2, setChargeEndTime2] = useState(null);\r\n  const [chargeStartTime3, setChargeStartTime3] = useState(null);\r\n  const [chargeEndTime3, setChargeEndTime3] = useState(null);\r\n  const [chargeStartTime4, setChargeStartTime4] = useState(null);\r\n  const [chargeEndTime4, setChargeEndTime4] = useState(null);\r\n  const [dischargeStartTime1, setDischargeStartTime1] = useState(null);\r\n  const [dischargeEndTime1, setDischargeEndTime1] = useState(null);\r\n  const [dischargeStartTime2, setDischargeStartTime2] = useState(null);\r\n  const [dischargeEndTime2, setDischargeEndTime2] = useState(null);\r\n  const [dischargeStartTime3, setDischargeStartTime3] = useState(null);\r\n  const [dischargeEndTime3, setDischargeEndTime3] = useState(null);\r\n  const [dischargeStartTime4, setDischargeStartTime4] = useState(null);\r\n  const [dischargeEndTime4, setDischargeEndTime4] = useState(null);\r\n\r\n  const [chargeStartTime1CommandID, setChargeStartTime1CommandID] = useState(null);\r\n  const [chargeEndTime1CommandID, setChargeEndTime1CommandID] = useState(null);\r\n  const [chargeStartTime2CommandID, setChargeStartTime2CommandID] = useState(null);\r\n  const [chargeEndTime2CommandID, setChargeEndTime2CommandID] = useState(null);\r\n  const [chargeStartTime3CommandID, setChargeStartTime3CommandID] = useState(null);\r\n  const [chargeEndTime3CommandID, setChargeEndTime3CommandID] = useState(null);\r\n  const [chargeStartTime4CommandID, setChargeStartTime4CommandID] = useState(null);\r\n  const [chargeEndTime4CommandID, setChargeEndTime4CommandID] = useState(null);\r\n  const [dischargeStartTime1CommandID, setDischargeStartTime1CommandID] = useState(null);\r\n  const [dischargeEndTime1CommandID, setDischargeEndTime1CommandID] = useState(null);\r\n  const [dischargeStartTime2CommandID, setDischargeStartTime2CommandID] = useState(null);\r\n  const [dischargeEndTime2CommandID, setDischargeEndTime2CommandID] = useState(null);\r\n  const [dischargeStartTime3CommandID, setDischargeStartTime3CommandID] = useState(null);\r\n  const [dischargeEndTime3CommandID, setDischargeEndTime3CommandID] = useState(null);\r\n  const [dischargeStartTime4CommandID, setDischargeStartTime4CommandID] = useState(null);\r\n  const [dischargeEndTime4CommandID, setDischargeEndTime4CommandID] = useState(null);\r\n\r\n  //Results\r\n\r\n  const [microgridName, setMicrogridName] = useState();\r\n  const [microgridSerialNumber, setMicrogridSerialNumber] = useState();\r\n  const [microgridAddress, setMicrogridAddress] = useState();\r\n  const [microgridPostalCode, setMicrogridPostalCode] = useState();\r\n  const [microgridCapacity, setMicrogridCapacity] = useState();\r\n  const [microgridLatitude, setMicrogridLatitude] = useState();\r\n  const [microgridLongitude, setMicrogridLongitude] = useState();\r\n  const [microgridSVG, setMicrogridSVG] = useState();\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/microgriddetails?uuid=' + microgridUUID, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        setMicrogridName(json['microgrid']['name']);\r\n        setMicrogridSerialNumber(json['microgrid']['serial_number']);\r\n        setMicrogridAddress(json['microgrid']['address']);\r\n        setMicrogridPostalCode(json['microgrid']['postal_code']);\r\n        setMicrogridCapacity(json['microgrid']['capacity']);\r\n        setMicrogridLatitude(json['microgrid']['latitude']);\r\n        setMicrogridLongitude(json['microgrid']['longitude']);\r\n        setMicrogridSVG({__html: json['microgrid']['svg']});\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        setChargeStartTime1(json['schedule']['charge_start_time1'])\r\n        setChargeEndTime1(json['schedule']['charge_end_time1'])\r\n        setChargeStartTime2(json['schedule']['charge_start_time2'])\r\n        setChargeEndTime2(json['schedule']['charge_end_time2'])\r\n        setChargeStartTime3(json['schedule']['charge_start_time3'])\r\n        setChargeEndTime3(json['schedule']['charge_end_time3'])\r\n        setChargeStartTime4(json['schedule']['charge_start_time4'])\r\n        setChargeEndTime4(json['schedule']['charge_end_time4'])\r\n\r\n        setDischargeStartTime1(json['schedule']['discharge_start_time1'])\r\n        setDischargeEndTime1(json['schedule']['discharge_end_time1'])\r\n        setDischargeStartTime2(json['schedule']['discharge_start_time2'])\r\n        setDischargeEndTime2(json['schedule']['discharge_end_time2'])\r\n        setDischargeStartTime3(json['schedule']['discharge_start_time3'])\r\n        setDischargeEndTime3(json['schedule']['discharge_end_time3'])\r\n        setDischargeStartTime4(json['schedule']['discharge_start_time4'])\r\n        setDischargeEndTime4(json['schedule']['discharge_end_time4'])\r\n\r\n        setChargeStartTime1CommandID(json['schedule']['charge_start_time1_command_id'])\r\n        setChargeEndTime1CommandID(json['schedule']['charge_end_time1_command_id'])\r\n        setChargeStartTime2CommandID(json['schedule']['charge_start_time2_command_id'])\r\n        setChargeEndTime2CommandID(json['schedule']['charge_end_time2_command_id'])\r\n        setChargeStartTime3CommandID(json['schedule']['charge_start_time3_command_id'])\r\n        setChargeEndTime3CommandID(json['schedule']['charge_end_time3_command_id'])\r\n        setChargeStartTime4CommandID(json['schedule']['charge_start_time4_command_id'])\r\n        setChargeEndTime4CommandID(json['schedule']['charge_end_time4_command_id'])\r\n\r\n        setDischargeStartTime1CommandID(json['schedule']['discharge_start_time1_command_id'])\r\n        setDischargeEndTime1CommandID(json['schedule']['discharge_end_time1_command_id'])\r\n        setDischargeStartTime2CommandID(json['schedule']['discharge_start_time2_command_id'])\r\n        setDischargeEndTime2CommandID(json['schedule']['discharge_end_time2_command_id'])\r\n        setDischargeStartTime3CommandID(json['schedule']['discharge_start_time3_command_id'])\r\n        setDischargeEndTime3CommandID(json['schedule']['discharge_end_time3_command_id'])\r\n        setDischargeStartTime4CommandID(json['schedule']['discharge_start_time4_command_id'])\r\n        setDischargeEndTime4CommandID(json['schedule']['discharge_end_time4_command_id'])\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const refreshSVGData =()=> {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/reports/pointrealtime', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        json.forEach((currentPoint) => {\r\n          let textElement=document.getElementById(\"PT\"+currentPoint['point_id'])\r\n          if(textElement){\r\n            let tspanList = textElement.getElementsByTagName('tspan')\r\n            if (tspanList && tspanList.length > 0) {\r\n              let tspanElement = tspanList[tspanList.length - 1]\r\n              tspanElement.textContent = parseFloat(currentPoint['value']).toFixed(2)\r\n            } else {\r\n              textElement.textContent=parseFloat(currentPoint['value']).toFixed(2)\r\n            }\r\n          }\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  useInterval(() => {\r\n    refreshSVGData();\r\n  }, 1000 * 10);\r\n\r\n  // Callback fired when ChargeStartTime1 change\r\n  const onChargeStartTime1Change = (moment) => {\r\n    setChargeStartTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime1 close\r\n  const onChargeStartTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeStartTime1CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime1.substring(0, 2)) * 256 + parseInt(chargeStartTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime1 change\r\n  const onChargeEndTime1Change = (moment) => {\r\n    setChargeEndTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime1 close\r\n  const onChargeEndTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeEndTime1CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime1.substring(0, 2)) * 256 + parseInt(chargeEndTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime1 change\r\n  const onDischargeStartTime1Change = (moment) => {\r\n    setDischargeStartTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime1 close\r\n  const onDischargeStartTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeStartTime1CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime1.substring(0, 2)) * 256 + parseInt(dischargeStartTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime1 change\r\n  const onDischargeEndTime1Change = (moment) => {\r\n    setDischargeEndTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime1 close\r\n  const onDischargeEndTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeEndTime1CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime1.substring(0, 2)) * 256 + parseInt(dischargeEndTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  // Callback fired when ChargeStartTime2 change\r\n  const onChargeStartTime2Change = (moment) => {\r\n    setChargeStartTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime2 close\r\n  const onChargeStartTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeStartTime2CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime2.substring(0, 2)) * 256 + parseInt(chargeStartTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime2 change\r\n  const onChargeEndTime2Change = (moment) => {\r\n    setChargeEndTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime2 close\r\n  const onChargeEndTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeEndTime2CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime2.substring(0, 2)) * 256 + parseInt(chargeEndTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime2 change\r\n  const onDischargeStartTime2Change = (moment) => {\r\n    setDischargeStartTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime2 close\r\n  const onDischargeStartTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeStartTime2CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime2.substring(0, 2)) * 256 + parseInt(dischargeStartTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime2 change\r\n  const onDischargeEndTime2Change = (moment) => {\r\n    setDischargeEndTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime2 close\r\n  const onDischargeEndTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeEndTime2CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime2.substring(0, 2)) * 256 + parseInt(dischargeEndTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  // Callback fired when ChargeStartTime3 change\r\n  const onChargeStartTime3Change = (moment) => {\r\n    setChargeStartTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime3 close\r\n  const onChargeStartTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeStartTime3CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime3.substring(0, 2)) * 256 + parseInt(chargeStartTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime3 change\r\n  const onChargeEndTime3Change = (moment) => {\r\n    setChargeEndTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime3 close\r\n  const onChargeEndTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeEndTime3CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime3.substring(0, 2)) * 256 + parseInt(chargeEndTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime3 change\r\n  const onDischargeStartTime3Change = (moment) => {\r\n    setDischargeStartTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime3 close\r\n  const onDischargeStartTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeStartTime3CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime3.substring(0, 2)) * 256 + parseInt(dischargeStartTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime3 change\r\n  const onDischargeEndTime3Change = (moment) => {\r\n    setDischargeEndTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime3 close\r\n  const onDischargeEndTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeEndTime3CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime3.substring(0, 2)) * 256 + parseInt(dischargeEndTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  // Callback fired when ChargeStartTime4 change\r\n  const onChargeStartTime4Change = (moment) => {\r\n    setChargeStartTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime4 close\r\n  const onChargeStartTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeStartTime4CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime4.substring(0, 2)) * 256 + parseInt(chargeStartTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime4 change\r\n  const onChargeEndTime4Change = (moment) => {\r\n    setChargeEndTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime4 close\r\n  const onChargeEndTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + chargeEndTime4CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime4.substring(0, 2)) * 256 + parseInt(chargeEndTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime4 change\r\n  const onDischargeStartTime4Change = (moment) => {\r\n    setDischargeStartTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime4 close\r\n  const onDischargeStartTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeStartTime4CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime4.substring(0, 2)) * 256 + parseInt(dischargeStartTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime4 change\r\n  const onDischargeEndTime4Change = (moment) => {\r\n    setDischargeEndTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime4 close\r\n  const onDischargeEndTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/commands/' + dischargeEndTime4CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime4.substring(0, 2)) * 256 + parseInt(dischargeEndTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row noGutters>\r\n        <Col lg=\"8\" className=\"pr-lg-2\" key={uuid()}>\r\n          <div dangerouslySetInnerHTML={microgridSVG} />\r\n        </Col>\r\n        <Col lg=\"4\" className=\"pr-lg-2\">\r\n          <Card className=\"mb-3 fs--1\">\r\n            <FalconCardHeader title={t('General Information')} light={false} titleClass=\"text-lightSlateGray mb-0\" />\r\n            <CardBody className=\"bg-light\">\r\n              <h6 className=\"mt-4\">{t('Name')}</h6>\r\n              <div className=\"mb-1\">\r\n                {microgridName}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Serial Number')}</h6>\r\n              <div className=\"mb-1\">\r\n                {microgridSerialNumber}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Address')}</h6>\r\n              <div className=\"mb-1\">\r\n                {microgridAddress}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Postal Code')}</h6>\r\n              <div className=\"mb-1\">\r\n                {microgridPostalCode}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Capacity')} (kW)</h6>\r\n              <div className=\"mb-1\">\r\n                {microgridCapacity}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Latitude')}</h6>\r\n              <div className=\"mb-1\">\r\n                {microgridLatitude}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Longitude')}</h6>\r\n              <div className=\"mb-1\">\r\n                {microgridLongitude}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n            baseTitle=''\r\n            labels={parameterLineChartLabels}\r\n            data={parameterLineChartData}\r\n            options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n      <Card className=\"mb-3 fs--1\">\r\n        <FalconCardHeader title={t('Charging Schedule')} light={false} titleClass=\"text-lightSlateGray mb-0\" />\r\n        <CardBody className=\"bg-light\">\r\n          <Table striped className=\"border-bottom\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>{t('Charge Start Time')}</th>\r\n                <th>{t('Charge End Time')}</th>\r\n                <th>{t('Discharge Start Time')}</th>\r\n                <th>{t('Discharge End Time')}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime1} onChange={onChargeStartTime1Change} onClose={onChargeStartTime1Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime1} onChange={onChargeEndTime1Change}  onClose={onChargeEndTime1Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime1} onChange={onDischargeStartTime1Change} onClose={onDischargeStartTime1Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime1} onChange={onDischargeEndTime1Change} onClose={onDischargeEndTime1Close} /></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime2} onChange={onChargeStartTime2Change} onClose={onChargeStartTime2Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime2} onChange={onChargeEndTime2Change} onClose={onChargeEndTime2Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime2} onChange={onDischargeStartTime2Change} onClose={onDischargeStartTime2Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime2} onChange={onDischargeEndTime2Change} onClose={onDischargeEndTime2Close} /></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime3} onChange={onChargeStartTime3Change} onClose={onChargeStartTime3Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime3} onChange={onChargeEndTime3Change} onClose={onChargeEndTime3Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime3} onChange={onDischargeStartTime3Change} onClose={onDischargeStartTime3Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime3} onChange={onDischargeEndTime3Change} onClose={onDischargeEndTime3Close} /></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">4</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime4} onChange={onChargeStartTime4Change} onClose={onChargeStartTime4Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime4} onChange={onChargeEndTime4Change} onClose={onChargeEndTime4Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime4} onChange={onDischargeStartTime4Change} onClose={onDischargeStartTime4Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime4} onChange={onDischargeEndTime4Change} onClose={onDischargeEndTime4Close} /></td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(MicrogridDetails));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\n\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst MicrogridReporting = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  const location = useLocation();\r\n  const uuid = location.search.split('=')[1];\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n    if (uuid === null || !uuid ){\r\n      setSpaceCascaderHidden(false);\r\n      setMicrogridSearchHidden(false);\r\n    } else {\r\n      setSpaceCascaderHidden(true);\r\n      setMicrogridSearchHidden(true);\r\n    }\r\n  });\r\n\r\n  // State\r\n  //Query Form\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [microgridList, setMicrogridList] = useState([]);\r\n  const [filteredMicrogridList, setFilteredMicrogridList] = useState([]);\r\n  const [selectedMicrogrid, setSelectedMicrogrid] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'weeks').subtract(1, 'months').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().subtract(1, 'weeks').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n  const [spaceCascaderHidden, setSpaceCascaderHidden] = useState(false);\r\n  const [microgridSearchHidden, setMicrogridSearchHidden] = useState(false);\r\n  //Results\r\n  const [microgridName, setMicrogridName] = useState();\r\n  const [microgridSerialNumber, setMicrogridSerialNumber] = useState();\r\n  const [microgridAddress, setMicrogridAddress] = useState();\r\n  const [microgridPostalCode, setMicrogridPostalCode] = useState();\r\n  const [microgridCapacity, setMicrogridCapacity] = useState();\r\n  const [microgridLatitude, setMicrogridLatitude] = useState();\r\n  const [microgridLongitude, setMicrogridLongitude] = useState();\r\n  const [microgridSVG, setMicrogridSVG] = useState();\r\n\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n  const [microgridBaseLabels, setMicrogridBaseLabels] = useState({'a0': []});\r\n  const [microgridBaseData, setMicrogridBaseData] = useState({'a0': []});\r\n  const [microgridReportingNames, setMicrogridReportingNames] = useState({\"a0\":\"\"});\r\n  const [microgridReportingUnits, setMicrogridReportingUnits] = useState({\"a0\":\"()\"});\r\n  const [microgridReportingSubtotals, setMicrogridReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n  const [microgridReportingLabels, setMicrogridReportingLabels] = useState({\"a0\": []});\r\n  const [microgridReportingData, setMicrogridReportingData] = useState({\"a0\": []});\r\n  const [microgridReportingOptions, setMicrogridReportingOptions] = useState([]);\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    if (uuid === null || !uuid ){\r\n      fetch(\r\n        APIBaseURL +\r\n        '/spaces/tree', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'User-UUID': getCookieValue('user_uuid'),\r\n          Token: getCookieValue('token')\r\n        },\r\n        body: null,\r\n\r\n      }).then(response => {\r\n        console.log(response);\r\n        if (response.ok) {\r\n          isResponseOK = true;\r\n        }\r\n        return response.json();\r\n      }).then(json => {\r\n        console.log(json);\r\n        if (isResponseOK) {\r\n          // rename keys\r\n          json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n          setCascaderOptions(json);\r\n          setSelectedSpaceName([json[0]].map(o => o.label));\r\n          setSelectedSpaceID([json[0]].map(o => o.value));\r\n          // get Microgrids by root Space ID\r\n          let isResponseOK = false;\r\n          fetch(\r\n            APIBaseURL +\r\n            '/spaces/' +\r\n            [json[0]].map(o => o.value) +\r\n            '/microgrids', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n              'User-UUID': getCookieValue('user_uuid'),\r\n              Token: getCookieValue('token')\r\n            },\r\n            body: null,\r\n\r\n          }).then(response => {\r\n            if (response.ok) {\r\n              isResponseOK = true;\r\n            }\r\n            return response.json();\r\n          }).then(json => {\r\n            if (isResponseOK) {\r\n              json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n              console.log(json);\r\n              setMicrogridList(json[0]);\r\n              setFilteredMicrogridList(json[0]);\r\n              if (json[0].length > 0) {\r\n                setSelectedMicrogrid(json[0][0].value);\r\n                // enable submit button\r\n                setSubmitButtonDisabled(false);\r\n              } else {\r\n                setSelectedMicrogrid(undefined);\r\n                // disable submit button\r\n                setSubmitButtonDisabled(true);\r\n              }\r\n            } else {\r\n              toast.error(t(json.description))\r\n            }\r\n          }).catch(err => {\r\n            console.log(err);\r\n          });\r\n          // end of get Microgrids by root Space ID\r\n        } else {\r\n          toast.error(t(json.description));\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    } else {\r\n      let url = APIBaseURL + '/reports/microgridreporting?' +\r\n        'uuid=' + uuid +\r\n        '&periodtype=' + periodType +\r\n        '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n        '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n        '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n        '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n        '&language=' + language;\r\n      loadData(url);\r\n    }\r\n  }, []);\r\n\r\n  const loadData = (url) => {\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        if(uuid !== null && uuid) {\r\n          setFilteredMicrogridList([{'id': json['microgrid']['id'], 'label': json['microgrid']['name']}]);\r\n          setSelectedMicrogrid(json['microgrid']['id']);\r\n        }\r\n        setMicrogridName(json['microgrid']['name']);\r\n        setMicrogridSerialNumber(json['microgrid']['serial_number']);\r\n        setMicrogridAddress(json['microgrid']['address']);\r\n        setMicrogridPostalCode(json['microgrid']['postal_code']);\r\n        setMicrogridCapacity(json['microgrid']['capacity']);\r\n        setMicrogridLatitude(json['microgrid']['latitude']);\r\n        setMicrogridLongitude(json['microgrid']['longitude']);\r\n        setMicrogridSVG({__html: json['microgrid']['svg']});\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {};\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setMicrogridReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setMicrogridReportingUnits(base_and_reporting_units)\r\n\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setMicrogridReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        console.log(reporting_values);\r\n        setMicrogridReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setMicrogridReportingSubtotals(reporting_subtotals);\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setMicrogridReportingOptions(options);\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false);\r\n      } else {\r\n        toast.error(t(json.description))\r\n        setSpinnerHidden(true);\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/spaces/' +\r\n      value[value.length - 1] +\r\n      '/microgrids', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        console.log(json)\r\n        setMicrogridList(json[0]);\r\n        setFilteredMicrogridList(json[0]);\r\n        if (json[0].length > 0) {\r\n          setSelectedMicrogrid(json[0][0].value);\r\n          // enable submit button\r\n          setSubmitButtonDisabled(false);\r\n        } else {\r\n          setSelectedMicrogrid(undefined);\r\n          // disable submit button\r\n          setSubmitButtonDisabled(true);\r\n        }\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const onSearchMicrogrid = ({ target }) => {\r\n    const keyword = target.value.toLowerCase();\r\n    const filteredResult = microgridList.filter(\r\n      microgrid => microgrid.label.toLowerCase().includes(keyword)\r\n    );\r\n    setFilteredMicrogridList(keyword.length ? filteredResult : microgridList);\r\n    if (filteredResult.length > 0) {\r\n      setSelectedMicrogrid(filteredResult[0].value);\r\n      // enable submit button\r\n      setSubmitButtonDisabled(false);\r\n    } else {\r\n      setSelectedMicrogrid(undefined);\r\n      // disable submit button\r\n      setSubmitButtonDisabled(true);\r\n    };\r\n    let customInputTarget = document.getElementById('icrogridSelect');\r\n    customInputTarget.value = filteredResult[0].value;\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(selectedMicrogrid);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    let url = APIBaseURL + '/reports/microgridreporting?' +\r\n      'id=' + selectedMicrogrid +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language;\r\n    loadData(url);\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'microgridreproting.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form >\r\n              <Col xs={6} sm={3} hidden={spaceCascaderHidden}>\r\n                <FormGroup className=\"form-group\" >\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"microgridSelect\">\r\n                    {t('Microgrid')}\r\n                  </Label>\r\n\r\n                  <Form inline>\r\n                      <Input placeholder={t('Search')} onChange={onSearchMicrogrid} hidden={microgridSearchHidden} />\r\n                      <CustomInput type=\"select\" id=\"microgridSelect\" name=\"microgridSelect\" onChange={({ target }) => setSelectedMicrogrid(target.value)}\r\n                      >\r\n                        {filteredMicrogridList.map((microgrid, index) => (\r\n                          <option value={microgrid.value} key={microgrid.value}>\r\n                            {microgrid.label}\r\n                          </option>\r\n                        ))}\r\n                      </CustomInput>\r\n                  </Form>\r\n\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br/>\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n            <CardSummary key={cardSummaryItem['name']}\r\n              title={cardSummaryItem['name'] + '(' + cardSummaryItem['unit'] + ')' }\r\n              color=\"success\" >\r\n              {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n            </CardSummary>\r\n        ))}\r\n      </div>\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": microgridReportingNames, \"VALUE\": microgridReportingSubtotals, \"UNIT\": microgridReportingUnits}}\r\n        baseTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": {\"a0\":\"\"}, \"VALUE\": {\"a0\": (0).toFixed(2)}, \"UNIT\": {\"a0\":\"()\"}}}\r\n        reportingTooltipTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": {\"a0\":\"\"}, \"VALUE\": null, \"UNIT\": {\"a0\":\"()\"}}}\r\n        baseTooltipTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": {\"a0\":\"\"}, \"VALUE\": null, \"UNIT\": {\"a0\":\"()\"}}}\r\n        reportingLabels={microgridReportingLabels}\r\n        reportingData={microgridReportingData}\r\n        baseLabels={microgridReportingLabels}\r\n        baseData={microgridReportingData}\r\n        rates={{\"a0\": []}}\r\n        options={microgridReportingOptions}>\r\n      </MultiTrendChart>\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n            baseTitle=''\r\n            labels={parameterLineChartLabels}\r\n            data={parameterLineChartData}\r\n            options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(MicrogridReporting));\r\n","import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport Slider from 'react-slick/lib';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Flex from '../../common/Flex';\r\nimport classNames from 'classnames';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport AppContext, { ProductContext } from '../../../context/Context';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst EnergyStoragePowerStationListItem = ({\r\n  id,\r\n  uuid,\r\n  files,\r\n  name,\r\n  address,\r\n  postal_code,\r\n  serial_number,\r\n  batteryOperatingState,\r\n  batterySocPointValue,\r\n  batteryPowerPointValue,\r\n  photovoltaicPowerPointValue,\r\n  loadPowerPointValue,\r\n  gridPowerPointValue,\r\n  alarms,\r\n  isOnline,\r\n  PCSRunState,\r\n  index,\r\n  t\r\n}) => {\r\n  const { isDark } = useContext(AppContext);\r\n  const {  favouriteItemsDispatch } = useContext(ProductContext);\r\n  const [cartLoading, setCartLoading] = useState(false);\r\n\r\n  const handleAddToCart = () => {\r\n    setCartLoading(true);\r\n    setTimeout(() => {\r\n      setCartLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Col xs={12} className={classNames('p-3', { 'bg-100': isDark && index % 2 !== 0 })}>\r\n      <div className=\"p-1\">\r\n        <Row>\r\n          <Col sm={5} md={4}>\r\n            <div className=\"position-relative h-sm-100\">\r\n              <Link className=\"d-block h-100\" to={`/energystoragepowerstation/details?uuid=${uuid}`} target = \"_blank\">\r\n                <img\r\n                  className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded absolute-sm-centered\"\r\n                      src={files[0]['src']}\r\n                />\r\n                </Link>\r\n              {isOnline && (\r\n                <Badge color=\"success\" pill className=\"position-absolute t-0 r-0 mr-2 mt-2 fs--2 z-index-2\">\r\n                  {PCSRunState === 'Running' ? t('PCS Running') : PCSRunState === 'Initializing' ? t('PCS Initializing') : PCSRunState === 'Standby' ? t('PCS Standby') : PCSRunState === 'Shutdown' ? t('PCS Shutdown') : PCSRunState === 'Fault' ? t('PCS Fault') : t('PCS Unknown')}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col sm={7} md={8}>\r\n            <Row>\r\n              <Col lg={7}>\r\n                <h5 className=\"mt-3 mt-sm-0\">\r\n                  <Link to={`/energystoragepowerstation/details?uuid=${uuid}`} target = \"_blank\">{name}</Link>\r\n                </h5>\r\n                <p className=\"fs--1 mb-2 mb-md-3\">\r\n                    {address}\r\n                </p>\r\n                <p className=\"fs--1 mb-2 mb-md-3\">\r\n                    {postal_code}\r\n                </p>\r\n                <p className=\"fs--1 mb-2 mb-md-3\">\r\n                    {serial_number}\r\n                </p>\r\n                <div className=\"d-none d-lg-block\">\r\n                    <p className=\"fs--1 mb-1\">{t('Battery Power')}:<strong>{batteryPowerPointValue} kW</strong></p>\r\n                    <p className=\"fs--1 mb-1\">{t('Photovoltaic Power')}:<strong>{photovoltaicPowerPointValue} kW</strong></p>\r\n                    <p className=\"fs--1 mb-1\">{t('Load Power')}:<strong>{loadPowerPointValue} kW</strong></p>\r\n                    <p className=\"fs--1 mb-1\">{t('Grid Power')}:<strong>{gridPowerPointValue} kW</strong></p>\r\n                  </div>\r\n              </Col>\r\n              <Col lg={5} tag={Flex} justify=\"between\" column>\r\n                <div>\r\n                  <h4 className=\"fs-1 fs-md-2 text-warning mb-0\">\r\n                    SoC: {batterySocPointValue} %\r\n                  </h4>\r\n                  <p className=\"fs--1 mb-1\">\r\n                      {t('Communication Status')}:{' '}\r\n                      <strong className={classNames({ 'text-success': isOnline, 'text-danger': !isOnline })}>\r\n                        {isOnline ? t('Communication Online') : t('Communication Offline')}\r\n                      </strong>\r\n                    </p>\r\n                    <p className=\"fs--1 mb-1\">\r\n                      {t('Battery Operating State')}:{' '}\r\n                      <strong className={classNames({ 'text-success': batteryOperatingState === 'Normal' || batteryOperatingState === 'Standby'  || batteryOperatingState === 'ProhibitDisCharging' || batteryOperatingState === 'ProhibitCharging',\r\n                      'text-danger':  batteryOperatingState === 'Unknown' || batteryOperatingState === 'Fault' || batteryOperatingState === 'Warning'})}>\r\n                        {batteryOperatingState === 'Normal' ? t('Battery Normal') : batteryOperatingState === 'Standby' ? t('Battery Standby') : batteryOperatingState === 'ProhibitDisCharging' ? t('Battery Prohibit DisCharging') : batteryOperatingState === 'ProhibitCharging' ? t('Battery Prohibit Charging') : batteryOperatingState === 'Fault' ? t('Battery Fault') : batteryOperatingState === 'Warning' ? t('Battery Warning') : t('Battery Unknown')}\r\n                      </strong>\r\n                    </p>\r\n                    <p className=\"fs--1 mb-1\">\r\n                      {t('PCS Run State')}:{' '}\r\n                      <strong className={classNames({ 'text-success': PCSRunState === 'Running',\r\n                      'text-danger':  PCSRunState === 'Unknown' || PCSRunState === 'Initializing' || PCSRunState === 'Standby' || PCSRunState === 'Shutdown' || PCSRunState === 'Fault'})}>\r\n                        {PCSRunState === 'Running' ? t('PCS Running') : PCSRunState === 'Initializing' ? t('PCS Initializing') : PCSRunState === 'Standby' ? t('PCS Standby') : PCSRunState === 'Shutdown' ? t('PCS Shutdown') : PCSRunState === 'Fault' ? t('PCS Fault') : t('PCS Unknown')}\r\n                      </strong>\r\n                    </p>\r\n\r\n                </div>\r\n                <div className=\"mt-md-2\">\r\n                  <ButtonIcon\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    icon=\"tv\"\r\n                    iconClassName=\"ml-2 d-none d-md-inline-block\"\r\n                    className=\"w-lg-100 mt-2\"\r\n                    onClick={() => window.open(`energystoragepowerstation/details?uuid=${uuid}`, '_blank')}\r\n                  >\r\n                    {t('Monitoring')}\r\n                  </ButtonIcon>\r\n                  <ButtonIcon\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    icon=\"chart-pie\"\r\n                    iconClassName=\"ml-2 d-none d-md-inline-block\"\r\n                    className=\"w-lg-100 mt-2\"\r\n                    onClick={() => window.open(`energystoragepowerstation/reporting?uuid=${uuid}`, '_blank')}\r\n                  >\r\n                    {t('Reporting')}\r\n                  </ButtonIcon>\r\n                  <ButtonIcon\r\n                    color={isOnline ? 'outline-danger' : 'outline-secondary'}\r\n                    size=\"sm\"\r\n                    className={classNames('w-lg-100 mt-2 mr-2 mr-lg-0', {\r\n                      'border-300': !isOnline\r\n                    })}\r\n                    icon={[isOnline ? 'fas' : 'far', 'exclamation-triangle']}\r\n                      onClick={() => window.open('notification', '_blank')}\r\n                  >\r\n                    {t('Fault Alarms')}({alarms.length})\r\n                  </ButtonIcon>\r\n\r\n                  <ButtonIcon\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    icon=\"tools\"\r\n                    iconClassName=\"ml-2 d-none d-md-inline-block\"\r\n                    className=\"w-lg-100 mt-2\"\r\n                    onClick={handleAddToCart}\r\n                  >\r\n                    {t('Maintenance')}\r\n                  </ButtonIcon>\r\n\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nEnergyStoragePowerStationListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  files: PropTypes.array,\r\n  address: PropTypes.string,\r\n  postal_code: PropTypes.string,\r\n  serial_number: PropTypes.string,\r\n  batteryOperatingState: PropTypes.string,\r\n  batterySocPointValue: PropTypes.number,\r\n  batteryPowerPointValue: PropTypes.number,\r\n  photovoltaicPowerPointValue: PropTypes.number,\r\n  loadPowerPointValue: PropTypes.number,\r\n  gridPowerPointValue: PropTypes.number,\r\n  alarms: PropTypes.array,\r\n  isOnline: PropTypes.bool,\r\n  PCSRunState: PropTypes.string\r\n};\r\n\r\nEnergyStoragePowerStationListItem.defaultProps = { isOnline: false, files: [] };\r\n\r\nexport default withTranslation()(EnergyStoragePowerStationListItem);\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppContext from '../../../context/Context';\r\nimport { Button, CardFooter } from 'reactstrap';\r\nimport Flex from '../../common/Flex';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getPaginationArray } from '../../../helpers/utils';\r\n\r\nconst EnergyStoragePowerStationFooter = ({ meta, handler }) => {\r\n  const { isRTL } = useContext(AppContext);\r\n  const { total, pageNo, itemsPerPage, nextPageNo, prevPageNo } = meta;\r\n  const { nextPage, prevPage, currentPage } = handler;\r\n\r\n  return (\r\n    <CardFooter tag={Flex} justify=\"center\" align=\"center\" className=\"bg-light border-top\">\r\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={prevPage} disabled={!prevPageNo}>\r\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'right' : 'left'}`} />\r\n      </Button>\r\n      {getPaginationArray(total, itemsPerPage).map(page => (\r\n        <Button\r\n          color={pageNo === page ? 'falcon-primary' : 'falcon-default'}\r\n          size=\"sm\"\r\n          className=\"ml-2\"\r\n          onClick={() => currentPage(page)}\r\n          key={page}\r\n        >\r\n          {page}\r\n        </Button>\r\n      ))}\r\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={nextPage} disabled={!nextPageNo}>\r\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'left' : 'right'}`} />\r\n      </Button>\r\n    </CardFooter>\r\n  );\r\n};\r\n\r\nEnergyStoragePowerStationFooter.propTypes = {\r\n  meta: PropTypes.object.isRequired,\r\n  handler: PropTypes.object.isRequired\r\n};\r\n\r\nexport default EnergyStoragePowerStationFooter;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport Loader from '../../common/Loader';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport Flex from '../../common/Flex';\r\nimport classNames from 'classnames';\r\nimport EnergyStoragePowerStationListItem from './EnergyStoragePowerStationListItem';\r\nimport EnergyStoragePowerStationFooter from './EnergyStoragePowerStationFooter';\r\nimport usePagination from '../../../hooks/usePagination';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport CustomizeMapBox from '../common/CustomizeMapBox';\r\n\r\n\r\nconst EnergyStoragePowerStationList = ({ setRedirect, setRedirectUrl, t }) => {\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  const [energyStoragePowerStationArray, setEnergyStoragePowerStationArray] = useState([]);\r\n  const [energyStoragePowerStationIds, setEnergyStoragePowerStationIds] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [geojson, setGeojson] = useState([]);\r\n  const [rootLatitude, setRootLatitude] = useState('');\r\n  const [rootLongitude, setRootLongitude] = useState('');\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/reports/energystoragepowerstationlist', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        setEnergyStoragePowerStationArray([]);\r\n        setEnergyStoragePowerStationIds([]);\r\n        let energyStoragePowerStationArray = [];\r\n        let energyStoragePowerStationIds = [];\r\n        let geojsonData = [];\r\n        if (json.length > 0) {\r\n          setRootLongitude(json[0]['longitude']);\r\n          setRootLatitude(json[0]['latitude']);\r\n          json.forEach((currentValue, index) => {\r\n            let energyStoragePowerStation = {}\r\n            energyStoragePowerStation['id'] = json[index]['id'];\r\n            energyStoragePowerStation['name'] = json[index]['name'];\r\n            energyStoragePowerStation['uuid'] = json[index]['uuid'];\r\n            energyStoragePowerStation['address'] = json[index]['address'];\r\n            energyStoragePowerStation['postal_code'] = json[index]['postal_code'];\r\n            energyStoragePowerStation['latitude'] = json[index]['latitude'];\r\n            energyStoragePowerStation['longitude'] = json[index]['longitude'];\r\n            energyStoragePowerStation['serial_number'] = json[index]['serial_number'];\r\n            energyStoragePowerStation['files'] = [{ id: json[index]['uuid'], src: require('./EnergyStoragePowerStation.jpeg'), }];\r\n            energyStoragePowerStation['batteryOperatingState'] = json[index]['battery_operating_state'];\r\n            energyStoragePowerStation['batterySocPointValue'] = json[index]['battery_soc_point_value'];\r\n            energyStoragePowerStation['batteryPowerPointValue'] = json[index]['battery_power_point_value'];\r\n            energyStoragePowerStation['photovoltaicPowerPointValue'] = json[index]['photovoltaic_power_point_value'];\r\n            energyStoragePowerStation['loadPowerPointValue'] = json[index]['load_power_point_value'];\r\n            energyStoragePowerStation['gridPowerPointValue'] = json[index]['grid_power_point_value'];\r\n            energyStoragePowerStation['PCSRunState'] = json[index]['pcs_run_state'];\r\n            energyStoragePowerStation['alarms'] = ['supply temperature is high', 'return temperature is low'];\r\n            energyStoragePowerStation['isOnline'] = json[index]['is_online'];\r\n\r\n            energyStoragePowerStationArray.push(energyStoragePowerStation);\r\n            energyStoragePowerStationIds.push(energyStoragePowerStation['id']);\r\n            geojsonData.push({\r\n              'type': 'Feature',\r\n              'geometry': {\r\n                'type': 'Point',\r\n                'coordinates': [json[index]['longitude'], json[index]['latitude']]\r\n                },\r\n              'properties': {\r\n                'title': json[index]['name'],\r\n                'description': json[index]['description'],\r\n                'uuid': json[index]['uuid'],\r\n                'url': '/energystoragepowerstation/details'\r\n                }\r\n            })\r\n          });\r\n        }\r\n        setEnergyStoragePowerStationArray(energyStoragePowerStationArray);\r\n        setEnergyStoragePowerStationIds(energyStoragePowerStationIds);\r\n        console.log('energyStoragePowerStationArray:');\r\n        console.log(energyStoragePowerStationArray);\r\n        console.log('energyStoragePowerStationIds:');\r\n        console.log(energyStoragePowerStationIds);\r\n        setIsLoading(false);\r\n        setGeojson(geojsonData);\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, [t, ]);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const sliderSettings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  // Hook\r\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(energyStoragePowerStationIds);\r\n  const { total, itemsPerPage, from, to } = paginationMeta;\r\n  const { perPage } = paginationHandler;\r\n\r\n  const isList = true;\r\n  const isGrid = false;\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\r\n          <Row>\r\n            <Col xs={8}>\r\n            {isLoading ? (\r\n              <Loader />\r\n            ) : (\r\n                <Row noGutters={isList}>\r\n                  {isIterableArray(energyStoragePowerStationArray) &&\r\n                    energyStoragePowerStationArray\r\n                      .filter(energyStoragePowerStation => paginationData.includes(energyStoragePowerStation.id))\r\n                      .map((energyStoragePowerStation, index) => <EnergyStoragePowerStationListItem {...energyStoragePowerStation} sliderSettings={sliderSettings} key={energyStoragePowerStation.id} index={index} />)}\r\n                </Row>\r\n              )}\r\n            </Col>\r\n            <Col>\r\n              <CustomizeMapBox Latitude={rootLatitude} Longitude={rootLongitude} Zoom={10} Geojson={geojson}></CustomizeMapBox>\r\n            </Col>\r\n            </Row>\r\n        </CardBody>\r\n        <EnergyStoragePowerStationFooter meta={paginationMeta} handler={paginationHandler} />\r\n      </Card>\r\n      <Card className=\"mb-3\">\r\n        <CardBody>\r\n          <Row className=\"justify-content-between align-items-center\">\r\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\r\n              <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {t('Show Up to')}\r\n              </h6>\r\n              <CustomInput\r\n                id=\"itemsPerPage\"\r\n                type=\"select\"\r\n                bsSize=\"sm\"\r\n                value={itemsPerPage}\r\n                onChange={({ target }) => perPage(Number(target.value))}\r\n              >\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={total}>{t('All')}</option>\r\n              </CustomInput>\r\n              <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {t('FROM - TO of TOTAL', { 'FROM': from, 'TO': to, 'TOTAL': total })}\r\n              </h6>\r\n            </Col>\r\n\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(EnergyStoragePowerStationList));\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Row,\r\n  Table,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport FalconCardHeader from '../../common/FalconCardHeader';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport useInterval from '../../../hooks/useInterval';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Datetime from 'react-datetime';\r\n\r\n\r\nconst EnergyStoragePowerStationDetails = ({ setRedirect, setRedirectUrl, t }) => {\r\n  const location = useLocation();\r\n  const energyStoragePowerStationUUID = location.search.split('=')[1];\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n\r\n  // State\r\n  const [chargeStartTime1, setChargeStartTime1] = useState(null);\r\n  const [chargeEndTime1, setChargeEndTime1] = useState(null);\r\n  const [chargeStartTime2, setChargeStartTime2] = useState(null);\r\n  const [chargeEndTime2, setChargeEndTime2] = useState(null);\r\n  const [chargeStartTime3, setChargeStartTime3] = useState(null);\r\n  const [chargeEndTime3, setChargeEndTime3] = useState(null);\r\n  const [chargeStartTime4, setChargeStartTime4] = useState(null);\r\n  const [chargeEndTime4, setChargeEndTime4] = useState(null);\r\n  const [dischargeStartTime1, setDischargeStartTime1] = useState(null);\r\n  const [dischargeEndTime1, setDischargeEndTime1] = useState(null);\r\n  const [dischargeStartTime2, setDischargeStartTime2] = useState(null);\r\n  const [dischargeEndTime2, setDischargeEndTime2] = useState(null);\r\n  const [dischargeStartTime3, setDischargeStartTime3] = useState(null);\r\n  const [dischargeEndTime3, setDischargeEndTime3] = useState(null);\r\n  const [dischargeStartTime4, setDischargeStartTime4] = useState(null);\r\n  const [dischargeEndTime4, setDischargeEndTime4] = useState(null);\r\n\r\n  const [chargeStartTime1CommandID, setChargeStartTime1CommandID] = useState(null);\r\n  const [chargeEndTime1CommandID, setChargeEndTime1CommandID] = useState(null);\r\n  const [chargeStartTime2CommandID, setChargeStartTime2CommandID] = useState(null);\r\n  const [chargeEndTime2CommandID, setChargeEndTime2CommandID] = useState(null);\r\n  const [chargeStartTime3CommandID, setChargeStartTime3CommandID] = useState(null);\r\n  const [chargeEndTime3CommandID, setChargeEndTime3CommandID] = useState(null);\r\n  const [chargeStartTime4CommandID, setChargeStartTime4CommandID] = useState(null);\r\n  const [chargeEndTime4CommandID, setChargeEndTime4CommandID] = useState(null);\r\n  const [dischargeStartTime1CommandID, setDischargeStartTime1CommandID] = useState(null);\r\n  const [dischargeEndTime1CommandID, setDischargeEndTime1CommandID] = useState(null);\r\n  const [dischargeStartTime2CommandID, setDischargeStartTime2CommandID] = useState(null);\r\n  const [dischargeEndTime2CommandID, setDischargeEndTime2CommandID] = useState(null);\r\n  const [dischargeStartTime3CommandID, setDischargeStartTime3CommandID] = useState(null);\r\n  const [dischargeEndTime3CommandID, setDischargeEndTime3CommandID] = useState(null);\r\n  const [dischargeStartTime4CommandID, setDischargeStartTime4CommandID] = useState(null);\r\n  const [dischargeEndTime4CommandID, setDischargeEndTime4CommandID] = useState(null);\r\n\r\n  //Results\r\n\r\n  const [energyStoragePowerStationName, setEnergyStoragePowerStationName] = useState();\r\n  const [energyStoragePowerStationAddress, setEnergyStoragePowerStationAddress] = useState();\r\n  const [energyStoragePowerStationPostalCode, setEnergyStoragePowerStationPostalCode] = useState();\r\n  const [energyStoragePowerStationCapacity, setEnergyStoragePowerStationCapacity] = useState();\r\n  const [energyStoragePowerStationLatitude, setEnergyStoragePowerStationLatitude] = useState();\r\n  const [energyStoragePowerStationLongitude, setEnergyStoragePowerStationLongitude] = useState();\r\n  const [energyStoragePowerStationSVG, setEnergyStoragePowerStationSVG] = useState();\r\n\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/reports/energystoragepowerstationdetails?uuid=' +\r\n        energyStoragePowerStationUUID, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        setEnergyStoragePowerStationName(json['energy_storage_power_station']['name']);\r\n        setEnergyStoragePowerStationAddress(json['energy_storage_power_station']['address']);\r\n        setEnergyStoragePowerStationPostalCode(json['energy_storage_power_station']['postal_code']);\r\n        setEnergyStoragePowerStationCapacity(json['energy_storage_power_station']['capacity']);\r\n        setEnergyStoragePowerStationLatitude(json['energy_storage_power_station']['latitude']);\r\n        setEnergyStoragePowerStationLongitude(json['energy_storage_power_station']['longitude']);\r\n        setEnergyStoragePowerStationSVG({__html: json['energy_storage_power_station']['svg']});\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        setChargeStartTime1(json['schedule']['charge_start_time1'])\r\n        setChargeEndTime1(json['schedule']['charge_end_time1'])\r\n        setChargeStartTime2(json['schedule']['charge_start_time2'])\r\n        setChargeEndTime2(json['schedule']['charge_end_time2'])\r\n        setChargeStartTime3(json['schedule']['charge_start_time3'])\r\n        setChargeEndTime3(json['schedule']['charge_end_time3'])\r\n        setChargeStartTime4(json['schedule']['charge_start_time4'])\r\n        setChargeEndTime4(json['schedule']['charge_end_time4'])\r\n\r\n        setDischargeStartTime1(json['schedule']['discharge_start_time1'])\r\n        setDischargeEndTime1(json['schedule']['discharge_end_time1'])\r\n        setDischargeStartTime2(json['schedule']['discharge_start_time2'])\r\n        setDischargeEndTime2(json['schedule']['discharge_end_time2'])\r\n        setDischargeStartTime3(json['schedule']['discharge_start_time3'])\r\n        setDischargeEndTime3(json['schedule']['discharge_end_time3'])\r\n        setDischargeStartTime4(json['schedule']['discharge_start_time4'])\r\n        setDischargeEndTime4(json['schedule']['discharge_end_time4'])\r\n\r\n        setChargeStartTime1CommandID(json['schedule']['charge_start_time1_command_id'])\r\n        setChargeEndTime1CommandID(json['schedule']['charge_end_time1_command_id'])\r\n        setChargeStartTime2CommandID(json['schedule']['charge_start_time2_command_id'])\r\n        setChargeEndTime2CommandID(json['schedule']['charge_end_time2_command_id'])\r\n        setChargeStartTime3CommandID(json['schedule']['charge_start_time3_command_id'])\r\n        setChargeEndTime3CommandID(json['schedule']['charge_end_time3_command_id'])\r\n        setChargeStartTime4CommandID(json['schedule']['charge_start_time4_command_id'])\r\n        setChargeEndTime4CommandID(json['schedule']['charge_end_time4_command_id'])\r\n\r\n        setDischargeStartTime1CommandID(json['schedule']['discharge_start_time1_command_id'])\r\n        setDischargeEndTime1CommandID(json['schedule']['discharge_end_time1_command_id'])\r\n        setDischargeStartTime2CommandID(json['schedule']['discharge_start_time2_command_id'])\r\n        setDischargeEndTime2CommandID(json['schedule']['discharge_end_time2_command_id'])\r\n        setDischargeStartTime3CommandID(json['schedule']['discharge_start_time3_command_id'])\r\n        setDischargeEndTime3CommandID(json['schedule']['discharge_end_time3_command_id'])\r\n        setDischargeStartTime4CommandID(json['schedule']['discharge_start_time4_command_id'])\r\n        setDischargeEndTime4CommandID(json['schedule']['discharge_end_time4_command_id'])\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }, [energyStoragePowerStationUUID, ]);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const refreshSVGData =()=> {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/reports/pointrealtime', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        json.forEach((currentPoint) => {\r\n          let textElement=document.getElementById(\"PT\"+currentPoint['point_id'])\r\n          if(textElement){\r\n            let tspanList = textElement.getElementsByTagName('tspan')\r\n            if (tspanList && tspanList.length > 0) {\r\n              let tspanElement = tspanList[tspanList.length - 1]\r\n              tspanElement.textContent = parseFloat(currentPoint['value']).toFixed(2)\r\n            } else {\r\n              textElement.textContent=parseFloat(currentPoint['value']).toFixed(2)\r\n            }\r\n          }\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  useInterval(() => {\r\n    refreshSVGData();\r\n  }, 1000 * 10);\r\n\r\n  // Callback fired when ChargeStartTime1 change\r\n  const onChargeStartTime1Change = (moment) => {\r\n    setChargeStartTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime1 close\r\n  const onChargeStartTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/commands/' +\r\n        chargeStartTime1CommandID +\r\n        '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime1.substring(0, 2)) * 256 + parseInt(chargeStartTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime1 change\r\n  const onChargeEndTime1Change = (moment) => {\r\n    setChargeEndTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime1 close\r\n  const onChargeEndTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/commands/' +\r\n        chargeEndTime1CommandID +\r\n        '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime1.substring(0, 2)) * 256 + parseInt(chargeEndTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime1 change\r\n  const onDischargeStartTime1Change = (moment) => {\r\n    setDischargeStartTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime1 close\r\n  const onDischargeStartTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/commands/' +\r\n        dischargeStartTime1CommandID +\r\n        '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime1.substring(0, 2)) * 256 + parseInt(dischargeStartTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime1 change\r\n  const onDischargeEndTime1Change = (moment) => {\r\n    setDischargeEndTime1(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime1 close\r\n  const onDischargeEndTime1Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/commands/' +\r\n        dischargeEndTime1CommandID + '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime1.substring(0, 2)) * 256 + parseInt(dischargeEndTime1.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  // Callback fired when ChargeStartTime2 change\r\n  const onChargeStartTime2Change = (moment) => {\r\n    setChargeStartTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime2 close\r\n  const onChargeStartTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      chargeStartTime2CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime2.substring(0, 2)) * 256 + parseInt(chargeStartTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime2 change\r\n  const onChargeEndTime2Change = (moment) => {\r\n    setChargeEndTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime2 close\r\n  const onChargeEndTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      chargeEndTime2CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime2.substring(0, 2)) * 256 + parseInt(chargeEndTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime2 change\r\n  const onDischargeStartTime2Change = (moment) => {\r\n    setDischargeStartTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime2 close\r\n  const onDischargeStartTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      dischargeStartTime2CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime2.substring(0, 2)) * 256 + parseInt(dischargeStartTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime2 change\r\n  const onDischargeEndTime2Change = (moment) => {\r\n    setDischargeEndTime2(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime2 close\r\n  const onDischargeEndTime2Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      dischargeEndTime2CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime2.substring(0, 2)) * 256 + parseInt(dischargeEndTime2.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  // Callback fired when ChargeStartTime3 change\r\n  const onChargeStartTime3Change = (moment) => {\r\n    setChargeStartTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime3 close\r\n  const onChargeStartTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      chargeStartTime3CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime3.substring(0, 2)) * 256 + parseInt(chargeStartTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime3 change\r\n  const onChargeEndTime3Change = (moment) => {\r\n    setChargeEndTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime3 close\r\n  const onChargeEndTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      chargeEndTime3CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime3.substring(0, 2)) * 256 + parseInt(chargeEndTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime3 change\r\n  const onDischargeStartTime3Change = (moment) => {\r\n    setDischargeStartTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime3 close\r\n  const onDischargeStartTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      dischargeStartTime3CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime3.substring(0, 2)) * 256 + parseInt(dischargeStartTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime3 change\r\n  const onDischargeEndTime3Change = (moment) => {\r\n    setDischargeEndTime3(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime3 close\r\n  const onDischargeEndTime3Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      dischargeEndTime3CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime3.substring(0, 2)) * 256 + parseInt(dischargeEndTime3.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  // Callback fired when ChargeStartTime4 change\r\n  const onChargeStartTime4Change = (moment) => {\r\n    setChargeStartTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeStartTime4 close\r\n  const onChargeStartTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      chargeStartTime4CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeStartTime4.substring(0, 2)) * 256 + parseInt(chargeStartTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when ChargeEndTime4 change\r\n  const onChargeEndTime4Change = (moment) => {\r\n    setChargeEndTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when ChargeEndTime4 close\r\n  const onChargeEndTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      chargeEndTime4CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(chargeEndTime4.substring(0, 2)) * 256 + parseInt(chargeEndTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeStartTime4 change\r\n  const onDischargeStartTime4Change = (moment) => {\r\n    setDischargeStartTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeStartTime4 close\r\n  const onDischargeStartTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      dischargeStartTime4CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeStartTime4.substring(0, 2)) * 256 + parseInt(dischargeStartTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  // Callback fired when DischargeEndTime4 change\r\n  const onDischargeEndTime4Change = (moment) => {\r\n    setDischargeEndTime4(moment.format('HH:mm'));\r\n  };\r\n  // Callback fired when DischargeEndTime4 close\r\n  const onDischargeEndTime4Close = () => {\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/commands/' +\r\n      dischargeEndTime4CommandID +\r\n      '/send', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      // convert HH:mm to set value, shift HH 8 bits to left and then plus mm\r\n      body: JSON.stringify({\"data\": {\"set_value\": parseInt(dischargeEndTime4.substring(0, 2)) * 256 + parseInt(dischargeEndTime4.substring(3, ))}}),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row noGutters>\r\n        <Col lg=\"8\" className=\"pr-lg-2\" key={uuid()}>\r\n          <div dangerouslySetInnerHTML={energyStoragePowerStationSVG} />\r\n        </Col>\r\n        <Col lg=\"4\" className=\"pr-lg-2\">\r\n          <Card className=\"mb-3 fs--1\">\r\n            <FalconCardHeader title={t('General Information')} light={false} titleClass=\"text-lightSlateGray mb-0\" />\r\n            <CardBody className=\"bg-light\">\r\n              <h6 className=\"mt-4\">{t('Name')}</h6>\r\n              <div className=\"mb-1\">\r\n                {energyStoragePowerStationName}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Address')}</h6>\r\n              <div className=\"mb-1\">\r\n                {energyStoragePowerStationAddress}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Postal Code')}</h6>\r\n              <div className=\"mb-1\">\r\n                {energyStoragePowerStationPostalCode}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Capacity')} (kW)</h6>\r\n              <div className=\"mb-1\">\r\n                {energyStoragePowerStationCapacity}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Latitude')}</h6>\r\n              <div className=\"mb-1\">\r\n                {energyStoragePowerStationLatitude}\r\n              </div>\r\n              <h6 className=\"mt-4\">{t('Longitude')}</h6>\r\n              <div className=\"mb-1\">\r\n                {energyStoragePowerStationLongitude}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n            baseTitle=''\r\n            labels={parameterLineChartLabels}\r\n            data={parameterLineChartData}\r\n            options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n      <Card className=\"mb-3 fs--1\">\r\n        <FalconCardHeader title={t('Charging Schedule')} light={false} titleClass=\"text-lightSlateGray mb-0\" />\r\n        <CardBody className=\"bg-light\">\r\n          <Table striped className=\"border-bottom\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>{t('Charge Start Time')}</th>\r\n                <th>{t('Charge End Time')}</th>\r\n                <th>{t('Discharge Start Time')}</th>\r\n                <th>{t('Discharge End Time')}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime1} onChange={onChargeStartTime1Change} onClose={onChargeStartTime1Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime1} onChange={onChargeEndTime1Change}  onClose={onChargeEndTime1Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime1} onChange={onDischargeStartTime1Change} onClose={onDischargeStartTime1Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime1} onChange={onDischargeEndTime1Change} onClose={onDischargeEndTime1Close} /></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime2} onChange={onChargeStartTime2Change} onClose={onChargeStartTime2Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime2} onChange={onChargeEndTime2Change} onClose={onChargeEndTime2Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime2} onChange={onDischargeStartTime2Change} onClose={onDischargeStartTime2Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime2} onChange={onDischargeEndTime2Change} onClose={onDischargeEndTime2Close} /></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime3} onChange={onChargeStartTime3Change} onClose={onChargeStartTime3Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime3} onChange={onChargeEndTime3Change} onClose={onChargeEndTime3Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime3} onChange={onDischargeStartTime3Change} onClose={onDischargeStartTime3Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime3} onChange={onDischargeEndTime3Change} onClose={onDischargeEndTime3Close} /></td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">4</th>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeStartTime4} onChange={onChargeStartTime4Change} onClose={onChargeStartTime4Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={chargeEndTime4} onChange={onChargeEndTime4Change} onClose={onChargeEndTime4Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeStartTime4} onChange={onDischargeStartTime4Change} onClose={onDischargeStartTime4Close} /></td>\r\n                <td><Datetime dateFormat={false} timeFormat='HH:mm' value={dischargeEndTime4} onChange={onDischargeEndTime4Change} onClose={onDischargeEndTime4Close} /></td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(EnergyStoragePowerStationDetails));\r\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport CountUp from 'react-countup';\r\nimport moment from 'moment';\r\nimport loadable from '@loadable/component';\r\nimport Cascader from 'rc-cascader';\r\nimport CardSummary from '../common/CardSummary';\r\nimport MultiTrendChart from '../common/MultiTrendChart';\r\nimport MultipleLineChart from '../common/MultipleLineChart';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\r\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\r\nimport { endOfDay} from 'date-fns';\r\nimport AppContext from '../../../context/Context';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\n\r\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\r\n\r\nconst EnergyStoragePowerStationReporting = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  const location = useLocation();\r\n  const uuid = location.search.split('=')[1];\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n    if (uuid === null || !uuid ){\r\n      setSpaceCascaderHidden(false);\r\n      setEnergyStoragePowerStationSearchHidden(false);\r\n    } else {\r\n      setSpaceCascaderHidden(true);\r\n      setEnergyStoragePowerStationSearchHidden(true);\r\n    }\r\n  });\r\n\r\n  // State\r\n  //Query Form\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [energyStoragePowerStationList, setEnergyStoragePowerStationList] = useState([]);\r\n  const [filteredEnergyStoragePowerStationList, setFilteredEnergyStoragePowerStationList] = useState([]);\r\n  const [selectedEnergyStoragePowerStation, setSelectedEnergyStoragePowerStation] = useState(undefined);\r\n  const [comparisonType, setComparisonType] = useState('month-on-month');\r\n  const [periodType, setPeriodType] = useState('daily');\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n  const [basePeriodDateRange, setBasePeriodDateRange] = useState([current_moment.clone().subtract(1, 'weeks').subtract(1, 'months').toDate(), current_moment.clone().subtract(1, 'months').toDate()]);\r\n  const [basePeriodDateRangePickerDisabled, setBasePeriodDateRangePickerDisabled] = useState(true);\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([current_moment.clone().subtract(1, 'weeks').toDate(), current_moment.toDate()]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10};\r\n  const { language } = useContext(AppContext);\r\n  // buttons\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n  const [spaceCascaderHidden, setSpaceCascaderHidden] = useState(false);\r\n  const [energyStoragePowerStationSearchHidden, setEnergyStoragePowerStationSearchHidden] = useState(false);\r\n  //Results\r\n  const [energyStoragePowerStationName, setEnergyStoragePowerStationName] = useState();\r\n  const [energyStoragePowerStationSerialNumber, setEnergyStoragePowerStationSerialNumber] = useState();\r\n  const [energyStoragePowerStationAddress, setEnergyStoragePowerStationAddress] = useState();\r\n  const [energyStoragePowerStationPostalCode, setEnergyStoragePowerStationPostalCode] = useState();\r\n  const [energyStoragePowerStationCapacity, setEnergyStoragePowerStationCapacity] = useState();\r\n  const [energyStoragePowerStationLatitude, setEnergyStoragePowerStationLatitude] = useState();\r\n  const [energyStoragePowerStationLongitude, setEnergyStoragePowerStationLongitude] = useState();\r\n  const [energyStoragePowerStationSVG, setEnergyStoragePowerStationSVG] = useState();\r\n\r\n  const [cardSummaryList, setCardSummaryList] = useState([]);\r\n  const [energyStoragePowerStationBaseLabels, setEnergyStoragePowerStationBaseLabels] = useState({'a0': []});\r\n  const [energyStoragePowerStationBaseData, setEnergyStoragePowerStationBaseData] = useState({'a0': []});\r\n  const [energyStoragePowerStationReportingNames, setEnergyStoragePowerStationReportingNames] = useState({\"a0\":\"\"});\r\n  const [energyStoragePowerStationReportingUnits, setEnergyStoragePowerStationReportingUnits] = useState({\"a0\":\"()\"});\r\n  const [energyStoragePowerStationReportingSubtotals, setEnergyStoragePowerStationReportingSubtotals] = useState({\"a0\": (0).toFixed(2)});\r\n  const [energyStoragePowerStationReportingLabels, setEnergyStoragePowerStationReportingLabels] = useState({\"a0\": []});\r\n  const [energyStoragePowerStationReportingData, setEnergyStoragePowerStationReportingData] = useState({\"a0\": []});\r\n  const [energyStoragePowerStationReportingOptions, setEnergyStoragePowerStationReportingOptions] = useState([]);\r\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\r\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\r\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\r\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\r\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    if (uuid === null || !uuid ){\r\n      fetch(\r\n        APIBaseURL +\r\n        '/spaces/tree', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'User-UUID': getCookieValue('user_uuid'),\r\n          Token: getCookieValue('token')\r\n        },\r\n        body: null,\r\n\r\n      }).then(response => {\r\n        console.log(response);\r\n        if (response.ok) {\r\n          isResponseOK = true;\r\n        }\r\n        return response.json();\r\n      }).then(json => {\r\n        console.log(json);\r\n        if (isResponseOK) {\r\n          // rename keys\r\n          json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n          setCascaderOptions(json);\r\n          setSelectedSpaceName([json[0]].map(o => o.label));\r\n          setSelectedSpaceID([json[0]].map(o => o.value));\r\n          // get EnergyStoragePowerStations by root Space ID\r\n          let isResponseOK = false;\r\n          fetch(\r\n            APIBaseURL +\r\n            '/spaces/' +\r\n            [json[0]].map(o => o.value) +\r\n            '/energystoragepowerstations', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n              'User-UUID': getCookieValue('user_uuid'),\r\n              Token: getCookieValue('token')\r\n            },\r\n            body: null,\r\n\r\n          }).then(response => {\r\n            if (response.ok) {\r\n              isResponseOK = true;\r\n            }\r\n            return response.json();\r\n          }).then(json => {\r\n            if (isResponseOK) {\r\n              json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n              console.log(json);\r\n              setEnergyStoragePowerStationList(json[0]);\r\n              setFilteredEnergyStoragePowerStationList(json[0]);\r\n              if (json[0].length > 0) {\r\n                setSelectedEnergyStoragePowerStation(json[0][0].value);\r\n                // enable submit button\r\n                setSubmitButtonDisabled(false);\r\n              } else {\r\n                setSelectedEnergyStoragePowerStation(undefined);\r\n                // disable submit button\r\n                setSubmitButtonDisabled(true);\r\n              }\r\n            } else {\r\n              toast.error(t(json.description))\r\n            }\r\n          }).catch(err => {\r\n            console.log(err);\r\n          });\r\n          // end of get EnergyStoragePowerStations by root Space ID\r\n        } else {\r\n          toast.error(t(json.description));\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    } else {\r\n      let url = APIBaseURL + '/reports/energystoragepowerstationreporting?' +\r\n        'uuid=' + uuid +\r\n        '&periodtype=' + periodType +\r\n        '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n        '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n        '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n        '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n        '&language=' + language;\r\n      loadData(url);\r\n    }\r\n  }, []);\r\n\r\n  const loadData = (url) => {\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setDetailedDataTableData([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        console.log(json);\r\n        if(uuid !== null && uuid) {\r\n          setFilteredEnergyStoragePowerStationList([{'id': json['energy_storage_power_station']['id'], 'label': json['energy_storage_power_station']['name']}]);\r\n          setSelectedEnergyStoragePowerStation(json['energy_storage_power_station']['id']);\r\n        }\r\n        setEnergyStoragePowerStationName(json['energy_storage_power_station']['name']);\r\n        setEnergyStoragePowerStationSerialNumber(json['energy_storage_power_station']['serial_number']);\r\n        setEnergyStoragePowerStationAddress(json['energy_storage_power_station']['address']);\r\n        setEnergyStoragePowerStationPostalCode(json['energy_storage_power_station']['postal_code']);\r\n        setEnergyStoragePowerStationCapacity(json['energy_storage_power_station']['capacity']);\r\n        setEnergyStoragePowerStationLatitude(json['energy_storage_power_station']['latitude']);\r\n        setEnergyStoragePowerStationLongitude(json['energy_storage_power_station']['longitude']);\r\n        setEnergyStoragePowerStationSVG({__html: json['energy_storage_power_station']['svg']});\r\n        let timestamps = {}\r\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\r\n          timestamps['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartLabels(timestamps);\r\n\r\n        let values = {}\r\n        json['parameters']['values'].forEach((currentValue, index) => {\r\n          values['a' + index] = currentValue;\r\n        });\r\n        setParameterLineChartData(values);\r\n\r\n        let names = Array();\r\n        json['parameters']['names'].forEach((currentValue, index) => {\r\n\r\n          names.push({ 'value': 'a' + index, 'label': currentValue });\r\n        });\r\n        setParameterLineChartOptions(names);\r\n\r\n        let cardSummaryArray = []\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let cardSummaryItem = {};\r\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\r\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\r\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\r\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\r\n\r\n          cardSummaryArray.push(cardSummaryItem);\r\n        });\r\n        setCardSummaryList(cardSummaryArray);\r\n\r\n\r\n        let base_and_reporting_names = {}\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          base_and_reporting_names['a' + index] = currentValue;\r\n        });\r\n        setEnergyStoragePowerStationReportingNames(base_and_reporting_names)\r\n\r\n        let base_and_reporting_units = {}\r\n        json['reporting_period']['units'].forEach((currentValue, index) => {\r\n          base_and_reporting_units['a' + index] = \"(\"+currentValue+\")\";\r\n        });\r\n        setEnergyStoragePowerStationReportingUnits(base_and_reporting_units)\r\n\r\n\r\n        let reporting_timestamps = {}\r\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\r\n          reporting_timestamps['a' + index] = currentValue;\r\n        });\r\n        setEnergyStoragePowerStationReportingLabels(reporting_timestamps);\r\n\r\n        let reporting_values = {}\r\n        json['reporting_period']['values'].forEach((currentValue, index) => {\r\n          reporting_values['a' + index] = currentValue;\r\n        });\r\n        console.log(reporting_values);\r\n        setEnergyStoragePowerStationReportingData(reporting_values);\r\n\r\n        let reporting_subtotals = {}\r\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\r\n          reporting_subtotals['a' + index] = currentValue.toFixed(2);\r\n        });\r\n        setEnergyStoragePowerStationReportingSubtotals(reporting_subtotals);\r\n\r\n        let options = Array();\r\n        json['reporting_period']['names'].forEach((currentValue, index) => {\r\n          let unit = json['reporting_period']['units'][index];\r\n          options.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\r\n        });\r\n        setEnergyStoragePowerStationReportingOptions(options);\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n\r\n        // enable submit button\r\n        setSubmitButtonDisabled(false);\r\n        // hide spinner\r\n        setSpinnerHidden(true);\r\n        // show export button\r\n        setExportButtonHidden(false);\r\n      } else {\r\n        toast.error(t(json.description))\r\n        setSpinnerHidden(true);\r\n        setSubmitButtonDisabled(false);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/spaces/' +\r\n      value[value.length - 1] +\r\n      '/energystoragepowerstations', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        console.log(json)\r\n        setEnergyStoragePowerStationList(json[0]);\r\n        setFilteredEnergyStoragePowerStationList(json[0]);\r\n        if (json[0].length > 0) {\r\n          setSelectedEnergyStoragePowerStation(json[0][0].value);\r\n          // enable submit button\r\n          setSubmitButtonDisabled(false);\r\n        } else {\r\n          setSelectedEnergyStoragePowerStation(undefined);\r\n          // disable submit button\r\n          setSubmitButtonDisabled(true);\r\n        }\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const onSearchEnergyStoragePowerStation = ({ target }) => {\r\n    const keyword = target.value.toLowerCase();\r\n    const filteredResult = energyStoragePowerStationList.filter(\r\n      energyStoragePowerStation => energyStoragePowerStation.label.toLowerCase().includes(keyword)\r\n    );\r\n    setFilteredEnergyStoragePowerStationList(keyword.length ? filteredResult : energyStoragePowerStationList);\r\n    if (filteredResult.length > 0) {\r\n      setSelectedEnergyStoragePowerStation(filteredResult[0].value);\r\n      // enable submit button\r\n      setSubmitButtonDisabled(false);\r\n    } else {\r\n      setSelectedEnergyStoragePowerStation(undefined);\r\n      // disable submit button\r\n      setSubmitButtonDisabled(true);\r\n    };\r\n    let customInputTarget = document.getElementById('icrogridSelect');\r\n    customInputTarget.value = filteredResult[0].value;\r\n  };\r\n\r\n  let onComparisonTypeChange = ({ target }) => {\r\n    console.log(target.value);\r\n    setComparisonType(target.value);\r\n    if (target.value === 'year-over-year') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'years').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'years').toDate()]);\r\n    } else if (target.value === 'month-on-month') {\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'months').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'months').toDate()]);\r\n    } else if (target.value === 'free-comparison') {\r\n      setBasePeriodDateRangePickerDisabled(false);\r\n      setBasePeriodDateRange([moment(reportingPeriodDateRange[0]).subtract(1, 'days').toDate(),\r\n        moment(reportingPeriodDateRange[1]).subtract(1, 'days').toDate()]);\r\n    } else if (target.value === 'none-comparison') {\r\n      setBasePeriodDateRange([null, null]);\r\n      setBasePeriodDateRangePickerDisabled(true);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onBasePeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setBasePeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setBasePeriodDateRange([DateRange[0], DateRange[1]]);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = (DateRange) => {\r\n    if(DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') == '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      if (comparisonType === 'year-over-year') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'years').toDate(), moment(DateRange[1]).clone().subtract(1, 'years').toDate()]);\r\n      } else if (comparisonType === 'month-on-month') {\r\n        setBasePeriodDateRange([moment(DateRange[0]).clone().subtract(1, 'months').toDate(), moment(DateRange[1]).clone().subtract(1, 'months').toDate()]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onBasePeriodClean = event => {\r\n    setBasePeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    console.log(selectedEnergyStoragePowerStation);\r\n    console.log(comparisonType);\r\n    console.log(periodType);\r\n    console.log(basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : null)\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'))\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    let url = APIBaseURL + '/reports/energystoragepowerstationreporting?' +\r\n      'id=' + selectedEnergyStoragePowerStation +\r\n      '&periodtype=' + periodType +\r\n      '&baseperiodstartdatetime=' + (basePeriodDateRange[0] != null ? moment(basePeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&baseperiodenddatetime=' + (basePeriodDateRange[1] != null ? moment(basePeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') : '') +\r\n      '&reportingperiodstartdatetime=' + moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&reportingperiodenddatetime=' + moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&language=' + language;\r\n    loadData(url);\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'energyStoragePowerStationreproting.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form >\r\n              <Col xs={6} sm={3} hidden={spaceCascaderHidden}>\r\n                <FormGroup className=\"form-group\" >\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"energyStoragePowerStationSelect\">\r\n                    {t('Energy Storage Power Station')}\r\n                  </Label>\r\n\r\n                  <Form inline>\r\n                      <Input placeholder={t('Search')} onChange={onSearchEnergyStoragePowerStation} hidden={energyStoragePowerStationSearchHidden} />\r\n                      <CustomInput type=\"select\" id=\"energyStoragePowerStationSelect\" name=\"energyStoragePowerStationSelect\" onChange={({ target }) => setSelectedEnergyStoragePowerStation(target.value)}\r\n                      >\r\n                        {filteredEnergyStoragePowerStationList.map((energyStoragePowerStation, index) => (\r\n                          <option value={energyStoragePowerStation.value} key={energyStoragePowerStation.value}>\r\n                            {energyStoragePowerStation.label}\r\n                          </option>\r\n                        ))}\r\n                      </CustomInput>\r\n                  </Form>\r\n\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"comparisonType\">\r\n                    {t('Comparison Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\r\n                    defaultValue=\"month-on-month\"\r\n                    onChange={onComparisonTypeChange}\r\n                  >\r\n                    {comparisonTypeOptions.map((comparisonType, index) => (\r\n                      <option value={comparisonType.value} key={comparisonType.value} >\r\n                        {t(comparisonType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"periodType\">\r\n                    {t('Period Types')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\r\n                  >\r\n                    {periodTypeOptions.map((periodType, index) => (\r\n                      <option value={periodType.value} key={periodType.value} >\r\n                        {t(periodType.label)}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"basePeriodDateRangePicker\">{t('Base Period')}{t('(Optional)')}</Label>\r\n                  <DateRangePickerWrapper\r\n                    id='basePeriodDateRangePicker'\r\n                    disabled={basePeriodDateRangePickerDisabled}\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={basePeriodDateRange}\r\n                    onChange={onBasePeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onBasePeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">{t('Reporting Period')}</Label>\r\n                  <br/>\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br/>\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"card-deck\">\r\n        {cardSummaryList.map(cardSummaryItem => (\r\n            <CardSummary key={cardSummaryItem['name']}\r\n              title={cardSummaryItem['name'] + '(' + cardSummaryItem['unit'] + ')' }\r\n              color=\"success\" >\r\n              {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\r\n            </CardSummary>\r\n        ))}\r\n      </div>\r\n      <MultiTrendChart reportingTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": energyStoragePowerStationReportingNames, \"VALUE\": energyStoragePowerStationReportingSubtotals, \"UNIT\": energyStoragePowerStationReportingUnits}}\r\n        baseTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": {\"a0\":\"\"}, \"VALUE\": {\"a0\": (0).toFixed(2)}, \"UNIT\": {\"a0\":\"()\"}}}\r\n        reportingTooltipTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": {\"a0\":\"\"}, \"VALUE\": null, \"UNIT\": {\"a0\":\"()\"}}}\r\n        baseTooltipTitle = {{\"name\": \"CATEGORY VALUE UNIT\", \"substitute\": [\"CATEGORY\", \"VALUE\", \"UNIT\"], \"CATEGORY\": {\"a0\":\"\"}, \"VALUE\": null, \"UNIT\": {\"a0\":\"()\"}}}\r\n        reportingLabels={energyStoragePowerStationReportingLabels}\r\n        reportingData={energyStoragePowerStationReportingData}\r\n        baseLabels={energyStoragePowerStationReportingLabels}\r\n        baseData={energyStoragePowerStationReportingData}\r\n        rates={{\"a0\": []}}\r\n        options={energyStoragePowerStationReportingOptions}>\r\n      </MultiTrendChart>\r\n      <MultipleLineChart reportingTitle={t('Operating Characteristic Curve')}\r\n            baseTitle=''\r\n            labels={parameterLineChartLabels}\r\n            data={parameterLineChartData}\r\n            options={parameterLineChartOptions}>\r\n      </MultipleLineChart>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(EnergyStoragePowerStationReporting));\r\n","export const COLUMNS = [\r\n    {\r\n        Header: 'ac1系統綜合',\r\n        accessor: 'ac1_warn_sum'\r\n    },\r\n    {\r\n        Header: 'ac1系統環境',\r\n        accessor: 'ac1_warn_environ'\r\n    },\r\n    {\r\n        Header: 'ac1系統硬件',\r\n        accessor: 'ac1_warn_hardware'\r\n    },\r\n    {\r\n        Header: 'ac1系統溫度',\r\n        accessor: 'ac1_warn_temp'\r\n    }\r\n]","import React, { useMemo, useState } from 'react'\r\nimport { useTable } from 'react-table'\r\nimport WARN_DATA from './WARN_DATA.json'\r\nimport { COLUMNS } from './WARN_COLUMNS'\r\n\r\n\r\n\r\nfunction Reacttable() {\r\n    const read_warn_content = useState([635,736, 243, 1032])\r\n\r\n    // console.log(\"this is 0\")\r\n    // console.log(read_warn_content[0])\r\n\r\n    // console.log(\"this is 00\")\r\n    // console.log(read_warn_content[0][0])\r\n\r\n    // console.log(\"this is 01\")\r\n    // console.log(read_warn_content[0][1])\r\n\r\n    // console.log(\"this is 1\")\r\n    // console.log(read_warn_content[1])\r\n    // const read_warn_content = [20]\r\n\r\n    const columns = useMemo(() => COLUMNS, [COLUMNS])\r\n    const data = useMemo(() => WARN_DATA, [WARN_DATA])\r\n    // const data = useMemo(() => {\r\n    //     return WARN_DATA.map((item, index) => {\r\n    //         return{\r\n    //             ...item,\r\n    //             style: \r\n    //                 ((read_warn_content >> index) & 1) ? \r\n    //                 {backgroundColor: 'red'} : \r\n    //                 {backgroundColor: 'green'}\r\n    //         }\r\n    //     });\r\n    // },[read_warn_content])\r\n    \r\n    const tableInstance = useTable({\r\n        columns,\r\n        data\r\n    })\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = tableInstance\r\n\r\n    \r\n  \r\n    return (\r\n        <table {...getTableProps()} className=\"table-with-spacing\">\r\n            <thead>\r\n                {headerGroups.map((headerGroup, index) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n                    {headerGroup.headers.map((column, columnIndex) => (\r\n                        <th key={columnIndex} {...column.getHeaderProps()}>\r\n                        {column.render('Header')}\r\n                        </th>\r\n                    ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map((row, rowIndex) => {\r\n                    prepareRow(row);\r\n\r\n                   \r\n                    return (\r\n                        <tr {...row.getRowProps()} key={rowIndex}>\r\n                            {row.cells.map((cell, cellIndex) => {\r\n                                const isBitSet = (read_warn_content[0][cellIndex] >> rowIndex) & 1;\r\n                                const color = isBitSet ? 'red' : 'green';\r\n\r\n                                return(\r\n                                    <td key={cellIndex} style={{ color }} {...cell.getCellProps()}>\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>       \r\n    )\r\n}\r\n\r\nexport default Reacttable\r\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  InputGroup,\r\n  UncontrolledDropdown,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport Badge from 'reactstrap/es/Badge';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FalconCardHeader from '../../common/FalconCardHeader';\r\nimport Datetime from 'react-datetime';\r\nimport { getPaginationArray } from '../../../helpers/utils';\r\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport moment from 'moment';\r\nimport { APIBaseURL, settings } from '../../../config';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nimport Reacttable from '../common/Reacttable'\r\n\r\n\r\nconst Fault = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n\r\n  // Query Parameters\r\n  const [startDatetime, setStartDatetime] = useState(current_moment.clone().startOf('month'));\r\n  const [endDatetime, setEndDatetime] = useState(current_moment);\r\n  const [priority, setPriority] = useState('all');\r\n  const [status, setStatus] = useState('all');\r\n\r\n  //Results\r\n  const [faults, setFaults] = useState([]);\r\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\r\n\r\n  // buttons\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   let is_logged_in = getCookieValue('is_logged_in');\r\n  //   let user_name = getCookieValue('user_name');\r\n  //   let user_display_name = getCookieValue('user_display_name');\r\n  //   let user_uuid = getCookieValue('user_uuid');\r\n  //   let token = getCookieValue('token');\r\n\r\n  //   // let faultList = []\r\n  //   // let fault = {}\r\n\r\n  //   // fault['id'] = \"1\";\r\n  //   // fault['subject'] = \"這是主題\";\r\n  //   // fault['created_datetime'] = \"20240226\";\r\n  //   // fault['message'] = \"這是內容\";\r\n  //   // fault['status'] = \"這是狀態\";\r\n  //   // fault['url'] = \"這是url\";\r\n\r\n  //   // faultList.push(fault);\r\n  //   // setFaults(faultList);\r\n\r\n  //   if (is_logged_in === null || !is_logged_in) {\r\n  //     setRedirectUrl(`/authentication/basic/login`);\r\n  //     setRedirect(true);\r\n  //   } else {\r\n  //     //update expires time of cookies\r\n  //     createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n  //     createCookie('user_name', user_name, settings.cookieExpireTime);\r\n  //     createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n  //     createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n  //     createCookie('token', token, settings.cookieExpireTime);\r\n  //   }\r\n  // }, );\r\n  // State\r\n  let table = createRef();\r\n\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const handleNextPage = ({ page, onPageChange }) => () => {\r\n    onPageChange(page + 1);\r\n  };\r\n\r\n  const handlePrevPage = ({ page, onPageChange }) => () => {\r\n    onPageChange(page - 1);\r\n  };\r\n\r\n  const onSelect = () => {\r\n    setImmediate(() => {\r\n      setIsSelected(!!table.current.selectionContext.selected.length);\r\n    });\r\n  };\r\n\r\n  let onStartDatetimeChange = (newDateTime) => {\r\n    setStartDatetime(newDateTime);\r\n  }\r\n\r\n  let onEndDatetimeChange = (newDateTime) => {\r\n    setEndDatetime(newDateTime);\r\n  }\r\n\r\n  var getStartDatetime = function (currentDate) {\r\n    return currentDate.isBefore(moment(endDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\r\n  }\r\n\r\n  var getEndDatetime = function (currentDate) {\r\n    return currentDate.isAfter(moment(startDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\r\n  }\r\n\r\n  const subjectFormatter = (dataField, { url }) => (\r\n    <Fragment>\r\n      <span>{dataField}</span>\r\n    </Fragment>\r\n  );\r\n\r\n  const messageFormatter = (dataField,) => (\r\n    <Fragment>\r\n      {dataField}\r\n    </Fragment>\r\n  );\r\n\r\n  const statusFormatter = status => {\r\n    let color = '';\r\n    let icon = '';\r\n    let text = '';\r\n    switch (status) {\r\n      case 'acknowledged':\r\n        color = 'success';\r\n        icon = 'envelope-open';\r\n        text = t('Notification Acknowledged');\r\n        break;\r\n      case 'read':\r\n        color = 'success';\r\n        icon = 'envelope-open';\r\n        text = t('Notification Read');\r\n        break;\r\n      default:\r\n        color = 'primary';\r\n        icon = 'envelope';\r\n        text = t('Notification Unread');\r\n    }\r\n\r\n    return (\r\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\r\n        {text}\r\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const actionFormatter = (dataField, { id }) => (\r\n    // Control your row with this id\r\n    <UncontrolledDropdown>\r\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\r\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\r\n      </DropdownToggle>\r\n      <DropdownMenu right className=\"border py-2\">\r\n        <DropdownItem onClick={() => handleRead(id)}>{t('Notification Mark As Read')}</DropdownItem>\r\n        <DropdownItem onClick={() => handleAcknowledged(id)}>{t('Notification Mark As Acknowledged')}</DropdownItem>\r\n        <DropdownItem divider />\r\n        <DropdownItem onClick={() => handledelete(id)} className=\"text-danger\">{t('Notification Delete')}</DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n\r\n  // const columns = [\r\n  //   {\r\n  //     dataField: 'subject',\r\n  //     text: t('Notification Subject'),\r\n  //     classes: 'py-2 align-middle',\r\n  //     formatter: subjectFormatter,\r\n  //     sort: true\r\n  //   },\r\n  //   {\r\n  //     dataField: 'created_datetime',\r\n  //     text: t('Notification Created Datetime'),\r\n  //     classes: 'py-2 align-middle',\r\n  //     sort: true\r\n  //   },\r\n  //   {\r\n  //     dataField: 'message',\r\n  //     text: t('Notification Message'),\r\n  //     classes: 'py-2 align-middle',\r\n  //     formatter: messageFormatter,\r\n  //     sort: true\r\n  //   },\r\n  //   {\r\n  //     dataField: 'status',\r\n  //     text: t('Notification Status'),\r\n  //     classes: 'py-2 align-middle',\r\n  //     formatter: statusFormatter,\r\n  //     sort: true\r\n  //   },\r\n  //   {\r\n  //     dataField: '',\r\n  //     text: '',\r\n  //     classes: 'py-2 align-middle',\r\n  //     formatter: actionFormatter,\r\n  //     align: 'right'\r\n  //   }\r\n  // ];\r\n  const columns = [\r\n    {\r\n      dataField: 'AC1_warning',\r\n      text: t('Notification AC1_warning'),\r\n      classes: 'py-2 align-middle',\r\n      formatter: subjectFormatter,\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: 'created_datetime',\r\n      text: t('Notification Created Datetime'),\r\n      classes: 'py-2 align-middle',\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: 'message',\r\n      text: t('Notification Message'),\r\n      classes: 'py-2 align-middle',\r\n      formatter: messageFormatter,\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: 'status',\r\n      text: t('Notification Status'),\r\n      classes: 'py-2 align-middle',\r\n      formatter: statusFormatter,\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      classes: 'py-2 align-middle',\r\n      formatter: actionFormatter,\r\n      align: 'right'\r\n    }\r\n  ];\r\n\r\n  const options = {\r\n    custom: true,\r\n    sizePerPage: 10,\r\n    totalSize: faults.length\r\n  };\r\n\r\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\r\n    <div className=\"custom-control custom-checkbox\">\r\n      <input\r\n        className=\"custom-control-input\"\r\n        {...rest}\r\n        onChange={() => { }}\r\n        ref={input => {\r\n          if (input) input.indeterminate = indeterminate;\r\n        }}\r\n      />\r\n      <label className=\"custom-control-label\" />\r\n    </div>\r\n  );\r\n\r\n  const selectRow = onSelect => ({\r\n    mode: 'checkbox',\r\n    classes: 'py-2 align-middle',\r\n    clickToSelect: false,\r\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\r\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\r\n    onSelect: onSelect,\r\n    onSelectAll: onSelect\r\n  });\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n// Handler   get\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(startDatetime.format('YYYY-MM-DDTHH:mm:ss'));\r\n    console.log(endDatetime.format('YYYY-MM-DDTHH:mm:ss'));\r\n    console.log(priority)\r\n    console.log(status)\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setFaults([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/webmessages?' +\r\n      'startdatetime=' +\r\n      startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&enddatetime=' +\r\n      endDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&priority=' +\r\n      priority +\r\n      '&status=' +\r\n      status, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      // enable submit button\r\n      setSubmitButtonDisabled(false);\r\n      // hide spinner\r\n      setSpinnerHidden(true);\r\n      // show export button\r\n      setExportButtonHidden(false)\r\n\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n\r\n        let faultList = []\r\n\r\n        if (json.length > 0) {\r\n          json.forEach((currentValue, index) => {\r\n            let fault = {}\r\n            fault['id'] = currentValue['id'];\r\n            fault['subject'] = currentValue['subject'];\r\n            fault['created_datetime'] = moment(parseInt(currentValue['created_datetime']))\r\n                .format(\"YYYY-MM-DD HH:mm:ss\");\r\n            fault['message'] = currentValue['message'];\r\n            fault['status'] = currentValue['status'];\r\n            fault['url'] = currentValue['url'];\r\n\r\n            fault['id'] = \"1\";\r\n            fault['subject'] = \"這是主題\";\r\n            fault['created_datetime'] = \"20240226\";\r\n            fault['message'] = \"這是內容\";\r\n            fault['status'] = \"這是狀態\";\r\n            fault['url'] = \"這是url\";\r\n\r\n            faultList.push(fault);\r\n          });\r\n        }\r\n\r\n        setFaults(faultList);\r\n        setExcelBytesBase64(json['excel_bytes_base64']);\r\n        setSpinnerHidden(true);\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  //put 我覺得跟 post 差不多\r\n  const handleRead = (id, ) => {\r\n    console.log('Mark As Read: ', id)\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/webmessages/' +\r\n      id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: JSON.stringify({\r\n        \"data\": {\r\n          \"status\": 'read'\r\n        }\r\n      }),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        return null;\r\n      } else {\r\n        return response.json();\r\n      }\r\n    }).then(json => {\r\n      console.log(isResponseOK);\r\n      if (isResponseOK) {\r\n        let isResponseOK = false;\r\n        fetch(\r\n          APIBaseURL +\r\n          '/webmessages?' +\r\n          'startdatetime=' +\r\n          startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&enddatetime=' +\r\n          endDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&priority=' +\r\n          priority +\r\n          '&status=' +\r\n          status, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            console.log(json);\r\n\r\n            let faultList = []\r\n\r\n            if (json.length > 0) {\r\n              json.forEach((currentValue, index) => {\r\n                let fault = {}\r\n                fault['id'] = json[index]['id'];\r\n                fault['subject'] = json[index]['subject'];\r\n                fault['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                    .format(\"YYYY-MM-DD HH:mm:ss\");\r\n                fault['message'] = json[index]['message'];\r\n                fault['status'] = json[index]['status'];\r\n                fault['url'] = json[index]['url'];\r\n\r\n                faultList.push(fault);\r\n              });\r\n            }\r\n\r\n            setFaults(faultList);\r\n            setSpinnerHidden(true);\r\n          }\r\n        });\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleAcknowledged = (id, ) => {\r\n    console.log('Mark As Acknowledged: ', id)\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/webmessages/' +\r\n      id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: JSON.stringify({\r\n        \"data\": {\r\n          \"status\": 'acknowledged',\r\n          \"reply\": 'OK'\r\n        }\r\n      }),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        return null;\r\n      } else {\r\n        return response.json();\r\n      }\r\n    }).then(json => {\r\n      console.log(isResponseOK);\r\n      if (isResponseOK) {\r\n        let isResponseOK = false;\r\n        fetch(\r\n          APIBaseURL +\r\n          '/webmessages?' +\r\n          'startdatetime=' +\r\n          startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&enddatetime=' +\r\n          endDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&priority=' +\r\n          priority +\r\n          '&status=' +\r\n          status,  {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            console.log(json);\r\n\r\n            let faultList = []\r\n\r\n            if (json.length > 0) {\r\n              json.forEach((currentValue, index) => {\r\n                let fault = {}\r\n                fault['id'] = json[index]['id'];\r\n                fault['subject'] = json[index]['subject'];\r\n                fault['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                    .format(\"YYYY-MM-DD HH:mm:ss\");\r\n                fault['message'] = json[index]['message'];\r\n                fault['status'] = json[index]['status'];\r\n                fault['url'] = json[index]['url'];\r\n\r\n                faultList.push(fault);\r\n              });\r\n            }\r\n\r\n            setFaults(faultList);\r\n            setSpinnerHidden(true);\r\n          }\r\n        });\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handledelete = (id, ) => {\r\n    console.log('Delete: ', id)\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n      '/webmessages/' +\r\n      id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        return null;\r\n      } else {\r\n        return response.json();\r\n      }\r\n    }).then(json => {\r\n      console.log(isResponseOK);\r\n      if (isResponseOK) {\r\n        let isResponseOK = false;\r\n        fetch(\r\n          APIBaseURL +\r\n          '/webmessages?' +\r\n          'startdatetime=' +\r\n          startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&enddatetime=' +\r\n          endDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n          '&priority=' +\r\n          priority +\r\n          '&status=' +\r\n          status,  {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            console.log(json);\r\n\r\n            let faultList = []\r\n\r\n            if (json.length > 0) {\r\n              json.forEach((currentValue, index) => {\r\n                let fault = {}\r\n                fault['id'] = json[index]['id'];\r\n                fault['subject'] = json[index]['subject'];\r\n                fault['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                    .format(\"YYYY-MM-DD HH:mm:ss\");\r\n                fault['message'] = json[index]['message'];\r\n                fault['status'] = json[index]['status'];\r\n                fault['url'] = json[index]['url'];\r\n\r\n                faultList.push(fault);\r\n              });\r\n            }\r\n\r\n            setFaults(faultList);\r\n            setSpinnerHidden(true);\r\n          }\r\n        });\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleExport = e => {\r\n    e.preventDefault();\r\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    const fileName = 'fddfault.xlsx'\r\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\r\n    fetch(fileUrl)\r\n        .then(response => response.blob())\r\n        .then(blob => {\r\n            var link = window.document.createElement('a');\r\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n            link.download = fileName;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        });\r\n  };\r\n\r\n  const handle_test = () => {\r\n    // axios.get(\"http://localhost:3088/get_myems_warn\").then((response) => {\r\n    //   //setScheduleList(response.data);\r\n    //   setFaults(response.data);\r\n    // });\r\n    axios.get(\"http://localhost:3089/get_myems_warn\").then((response) => {\r\n      //setScheduleList(response.data);\r\n      setFaults(response.data);\r\n    });\r\n  }\r\n\r\n  // 以下跟告警有關\r\n  //-----------------------------------------------------------------------------------------\r\n  const [warning_data, set_warning_data] = useState([3]);\r\n  const [listacenvironerror, setlistacenvironerror] = useState([]);\r\n\r\n  const get_ac1_warning = () => {\r\n    axios.get(\"http://localhost:3088/getWarninig\").then((response) => {\r\n      set_warning_data(response.data);\r\n      setFaults(response.data);\r\n    });\r\n  }\r\n\r\n  const confirm = () => {\r\n    if(window.confirm('請問，確定要執行此動作?')){\r\n        // get_data();\r\n        get_ac1_warning();\r\n    }\r\n}\r\n\r\n  //初始給定一值  16 bits 告警\r\n  useEffect(() => {\r\n    get_ac1_warning();\r\n    const List_ac_environ_error = [\r\n      '鎖相告警',\r\n      '直流側硬件起故障',\r\n      '交流側硬件起故障',\r\n      '直流軟件起故障',\r\n      '電網諧振故障',\r\n      '輸入阻抗故障',\r\n      '輸入阻抗告警',\r\n      'CANB通信異常告警',\r\n      '系統存在地址衝突故障',\r\n      '系統主機存在地址衝突故障',\r\n      '模塊地址異常故障',\r\n      'DC電壓採集故障告警',\r\n      'AC電壓採集異常告警',\r\n      'DC側主計電器告警',\r\n      '過載告警'\r\n    ]\r\n\r\n    setlistacenvironerror(List_ac_environ_error);\r\n\r\n  },[]);\r\n\r\n\r\n\r\n  // 處理告警內容\r\n  const handlewarningcontent = (readwarningcontent) => {\r\n    const binarystring = readwarningcontent.toString(2).padStart(listacenvironerror.length, '0')\r\n    \r\n    const warningcolors = listacenvironerror.map((error, index) => {\r\n      const color = (binarystring.charAt(index) === '1') ? 'red' : 'green';\r\n      return `${error}: ${color}`;\r\n    });\r\n    \r\n\r\n    console.log('warning colors:', warningcolors);\r\n    // const color = (binarystring.charAt(index) === '1')\r\n  }\r\n\r\n\r\n  const handleWarningColor = (bit) => {\r\n    return bit === '1' ? 'red' : 'green';\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        {/* <Breadcrumb>\r\n          <BreadcrumbItem active>{t('Fault Alarm')}</BreadcrumbItem>\r\n        </Breadcrumb> */}\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col sm={1}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"priority\">\r\n                    {t('Notification Priority')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"bulk-select\"\r\n                    value={priority}\r\n                    onChange={({ target }) => {setPriority(target.value);}}>\r\n                    <option value=\"all\" key=\"all\" >{t('View all')}</option>\r\n                    <option value=\"LOW\" key=\"low\" >{t('Notification Low')}</option>\r\n                    <option value=\"MEDIUM\" key=\"medium\" >{t('Notification Medium')}</option>\r\n                    <option value=\"HIGH\" key=\"high\" >{t('Notification High')}</option>\r\n                    <option value=\"CRITICAL\" key=\"critical\" >{t('Notification Critical')}</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"status\">\r\n                    {t('Notification Status')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"bulk-select\"\r\n                    value={status}\r\n                    onChange={({ target }) => {setStatus(target.value);}}>\r\n                    <option value=\"all\" key=\"all\" >{t('View all')}</option>\r\n                    <option value=\"read\" key=\"read\" >{t('Notification Read')}</option>\r\n                    <option value=\"new\" key=\"unread\" >{t('notification_NEW')}</option>\r\n                    <option value=\"acknowledged\" key=\"acknowledged\" >{t('Notification Acknowledged')}</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"startDatetime\">\r\n                    {t('Reporting Period Begins')}\r\n                  </Label>\r\n                  <Datetime id='startDatetime'\r\n                    value={startDatetime}\r\n                    onChange={onStartDatetimeChange}\r\n                    isValidDate={getStartDatetime}\r\n                    closeOnSelect={true} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"endDatetime\">\r\n                    {t('Reporting Period Ends')}\r\n                  </Label>\r\n                  <Datetime id='endDatetime'\r\n                    value={endDatetime}\r\n                    onChange={onEndDatetimeChange}\r\n                    isValidDate={getEndDatetime}\r\n                    closeOnSelect={true} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                  {/* disabled={submitButtonDisabled} */}\r\n                    <Button color=\"success\"  onClick={handleSubmit}>{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                  {/* <ButtonGroup id=\"submit\">\r\n                    <Button color=\"info\" disabled={submitButtonDisabled} onClick={handle_test} >{t('test')}</Button>\r\n                  </ButtonGroup> */}\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"info\" onClick={handle_test} >{t('test')}</Button>\r\n                  </ButtonGroup>\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"warning\"  onClick={confirm} >{('讀取')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handleExport} >\r\n                    {t('Export')}\r\n                  </ButtonIcon>\r\n              </Col>\r\n              {/* <Col xs=\"auto\">\r\n                  <br />\r\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\"\r\n                  hidden={exportButtonHidden}\r\n                  onClick={handle_test} >\r\n                    {t('test')}\r\n                  </ButtonIcon>\r\n              </Col> */}\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {/* 看起來告警的部分，是下面的這一塊來帶出資料 */}\r\n      <Card className=\"mb-3\">\r\n        <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n        {/* <FalconCardHeader title={t('Fault Alarms')} light={false} titleClass=\"text-lightSlateGray mb-0\">\r\n          {isSelected ? (\r\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\r\n              <CustomInput type=\"select\" id=\"bulk-select\">\r\n                <option>{t('Bulk actions')}</option>\r\n                <option value=\"MarkAsRead\">{t('Notification Mark As Read')}</option>\r\n                <option value=\"MarkAsAcknowledged\">{t('Notification Mark As Acknowledged')}</option>\r\n                <option value=\"Delete\">{t('Notification Delete')}</option>\r\n              </CustomInput>\r\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\r\n              {t('Notification Apply')}\r\n                </Button>\r\n            </InputGroup>\r\n          ) : (\r\n              <Fragment>\r\n\r\n              </Fragment>\r\n            )}\r\n        </FalconCardHeader> */}\r\n        <CardBody className=\"p-0\">\r\n          <PaginationProvider pagination={paginationFactory(options)}>\r\n            {({ paginationProps, paginationTableProps }) => {\r\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\r\n\r\n              return (\r\n                <Fragment>\r\n                  <div className=\"table-responsive\">\r\n                    <BootstrapTable\r\n                      ref={table}\r\n                      bootstrap4\r\n                      keyField=\"id\"\r\n                      data={faults}\r\n                      columns={columns}\r\n                      selectRow={selectRow(onSelect)}\r\n                      bordered={false}\r\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\r\n                      rowClasses=\"btn-reveal-trigger\"\r\n                      headerClasses=\"bg-200 text-900\"\r\n                      {...paginationTableProps}\r\n                    />\r\n\r\n\r\n                    <Reacttable/>\r\n                    {/* 還在嘗試顯示告警 */}\r\n                    {/* <ul>\r\n                      {listacenvironerror.map((error, index) => (\r\n                        <li key={index} style={{ backgroundColor: handleWarningColor((warning_data >> index) & 1) }}>\r\n                            {error}\r\n                        </li>\r\n                      ))}\r\n                    </ul> */}\r\n                    {/* <BootstrapTable\r\n                      ref={table}\r\n                      bootstrap4\r\n                      keyField=\"id\"\r\n                      data={faults}\r\n                      columns={columns}\r\n                      selectRow={selectRow(onSelect)}\r\n                      bordered={false}\r\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\r\n                      rowClasses=\"btn-reveal-trigger\"\r\n                      headerClasses=\"bg-200 text-900\"\r\n                      {...paginationTableProps}\r\n                    /> */}\r\n                  </div>\r\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\r\n                    <Col xs=\"auto\">\r\n                      <Button\r\n                        color=\"falcon-default\"\r\n                        size=\"sm\"\r\n                        onClick={handlePrevPage(paginationProps)}\r\n                        disabled={paginationProps.page === 1}\r\n                      >\r\n                        <FontAwesomeIcon icon=\"chevron-left\" />\r\n                      </Button>\r\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\r\n                        <Button\r\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\r\n                          size=\"sm\"\r\n                          className=\"ml-2\"\r\n                          onClick={() => paginationProps.onPageChange(pageNo)}\r\n                          key={pageNo}\r\n                        >\r\n                          {pageNo}\r\n                        </Button>\r\n                      ))}\r\n                      <Button\r\n                        color=\"falcon-default\"\r\n                        size=\"sm\"\r\n                        className=\"ml-2\"\r\n                        onClick={handleNextPage(paginationProps)}\r\n                        disabled={lastIndex >= paginationProps.totalSize}\r\n                      >\r\n                        <FontAwesomeIcon icon=\"chevron-right\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Fragment>\r\n              );\r\n            }}\r\n          </PaginationProvider>\r\n        </CardBody>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(Fault));\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useFakeFetch = (resolvedData, waitingTime = 500) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    setTimeout(() => {\r\n      if (isMounted) {\r\n        setData(resolvedData);\r\n        setLoading(false);\r\n      }\r\n    }, waitingTime);\r\n\r\n    return () => (isMounted = false);\r\n  }, [resolvedData, waitingTime]);\r\n\r\n  return { loading, setLoading, data, setData };\r\n};\r\n\r\nexport default useFakeFetch;\r\n","import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge, Col, Row } from 'reactstrap';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport Slider from 'react-slick/lib';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Flex from '../../common/Flex';\r\nimport classNames from 'classnames';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport AppContext, { ProductContext } from '../../../context/Context';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nconst EquipmentList = ({\r\n  id,\r\n  files,\r\n  title,\r\n  category,\r\n  features,\r\n  parameter1,\r\n  parameter2,\r\n  parameter3,\r\n  parameter4,\r\n  parameter5,\r\n  parameter6,\r\n  parameter7,\r\n  alarms,\r\n  isOnline,\r\n  isRunning,\r\n  sliderSettings,\r\n  index,\r\n  t\r\n}) => {\r\n  const { isDark } = useContext(AppContext);\r\n  const {  favouriteItemsDispatch } = useContext(ProductContext);\r\n  const [cartLoading, setCartLoading] = useState(false);\r\n\r\n  const handleAddToCart = () => {\r\n    setCartLoading(true);\r\n    setTimeout(() => {\r\n      setCartLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Col xs={12} className={classNames('p-3', { 'bg-100': isDark && index % 2 !== 0 })}>\r\n      <div className=\"p-1\">\r\n        <Row>\r\n          <Col sm={5} md={4}>\r\n            <div className=\"position-relative h-sm-100\">\r\n              <iframe\r\n                className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded absolute-sm-centered\"\r\n                src=\"http://192.168.2.53:18080/#/play/wasm/ws%3A%2F%2F192.168.2.53%3A6080%2Fapp1%2F34020000001320000011.live.flv?autoplay=1\">\r\n              </iframe>\r\n              {isRunning && (\r\n                <Badge color=\"success\" pill className=\"position-absolute t-0 r-0 mr-2 mt-2 fs--2 z-index-2\">\r\n                  运行\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col sm={7} md={8}>\r\n            <Row>\r\n              <Col lg={8}>\r\n                <h5 className=\"mt-3 mt-sm-0\">\r\n                  {title}\r\n                </h5>\r\n                <p className=\"fs--1 mb-2 mb-md-3\">\r\n                  <a className=\"text-500\" href=\"#!\">\r\n                    {category}\r\n                  </a>\r\n                </p>\r\n                {isIterableArray(features) && (\r\n                  <ul className=\"list-unstyled d-none d-lg-block\">\r\n                    {features.map((feature, index) => (\r\n                      <li key={index}>\r\n                        <FontAwesomeIcon icon=\"circle\" transform=\"shrink-12\" />\r\n                        <span>{feature}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </Col>\r\n              <Col lg={4} tag={Flex} justify=\"between\" column>\r\n                <div>\r\n                  <h4 className=\"fs-1 fs-md-2 text-warning mb-0\">\r\n                    {t('Instantaneous Efficiency VALUE UNIT', {'VALUE': parameter1, 'UNIT': '(kWh/kWh)'} )}\r\n                  </h4>\r\n                  <div className=\"d-none d-lg-block\">\r\n                    <p className=\"fs--1 mb-1\">工作項目:<strong>{parameter2} 動作</strong></p>\r\n                    <p className=\"fs--1 mb-1\">起始時間(時):<strong>{parameter3} hour</strong></p>\r\n                    <p className=\"fs--1 mb-1\">起始時間(分):<strong>{parameter4} minute</strong></p>\r\n                    <p className=\"fs--1 mb-1\">結束時間(時):<strong>{parameter5} hour</strong></p>\r\n                    <p className=\"fs--1 mb-1\">結束時間(分):<strong>{parameter6} minute</strong></p>\r\n                    <p className=\"fs--1 mb-1\">功率:<strong>{parameter7} kW</strong></p>\r\n                    <p className=\"fs--1 mb-1\">\r\n                      {t('Communication Status')}:{' '}\r\n                      <strong className={classNames({ 'text-success': isOnline, 'text-danger': !isOnline })}>\r\n                        {isOnline ? t('Communication Online') : t('Communication Offline')}\r\n                      </strong>\r\n                    </p>\r\n                    <p className=\"fs--1 mb-1\">\r\n                      {t('Equipment Status')}:{' '}\r\n                      <strong className={classNames({ 'text-success': isRunning, 'text-danger': !isRunning })}>\r\n                        {isRunning ? t('Equipment Running') : t('Equipment Stopped')}\r\n                      </strong>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-md-2\">\r\n                  <ButtonIcon\r\n                    // color={isRunning ? 'outline-danger' : 'outline-secondary'}\r\n                    color={isRunning ? 'outline-info' : 'outline-secondary'}\r\n                    size=\"sm\"\r\n                    className={classNames('w-lg-100 mt-2 mr-2 mr-lg-0', {\r\n                      'border-300': !isRunning\r\n                    })}\r\n                    icon={[isRunning ? 'fas' : 'far', 'exclamation-triangle']}\r\n                    onClick={() =>\r\n                      isRunning\r\n                        ? favouriteItemsDispatch({ type: 'REMOVE', id })\r\n                        : favouriteItemsDispatch({ type: 'ADD', payload: { id } })\r\n                    }\r\n                  >\r\n                    {t('Fault Alarms')}({alarms.length})\r\n                  </ButtonIcon>\r\n                  {cartLoading ? (\r\n                    <ButtonIcon\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      icon=\"circle-notch\"\r\n                      iconClassName=\"fa-spin ml-2 d-none d-md-inline-block\"\r\n                      className=\"w-lg-100 mt-2\"\r\n                      style={{ cursor: 'progress' }}\r\n                      disabled\r\n                    >\r\n                      Processing\r\n                    </ButtonIcon>\r\n                  ) : (\r\n                      <ButtonIcon\r\n                        // color=\"primary\"\r\n                        color=\"warning\"\r\n                        size=\"sm\"\r\n                        icon=\"users\"\r\n                        iconClassName=\"ml-2 d-none d-md-inline-block\"\r\n                        className=\"w-lg-100 mt-2\"\r\n                        onClick={handleAddToCart}\r\n                      >\r\n                        {t('Run Commands')}\r\n                      </ButtonIcon>\r\n                    )}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nEquipmentList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  sliderSettings: PropTypes.object.isRequired,\r\n  files: PropTypes.array,\r\n  parameter1: PropTypes.number,\r\n  parameter2: PropTypes.number,\r\n  parameter3: PropTypes.number,\r\n  parameter4: PropTypes.number,\r\n  parameter5: PropTypes.number,\r\n  parameter6: PropTypes.number,\r\n  parameter7: PropTypes.number,\r\n  cumulativePerformance: PropTypes.number,\r\n  alarms: PropTypes.array,\r\n  isOnline: PropTypes.bool,\r\n  isRunning: PropTypes.bool,\r\n  features: PropTypes.array\r\n};\r\n\r\nEquipmentList.defaultProps = { isRunning: false, isOnline: false, files: [] };\r\n\r\nexport default withTranslation()(EquipmentList);\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppContext from '../../../context/Context';\r\nimport { Button, CardFooter } from 'reactstrap';\r\nimport Flex from '../../common/Flex';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getPaginationArray } from '../../../helpers/utils';\r\n\r\nconst EquipmentFooter = ({ meta, handler }) => {\r\n  const { isRTL } = useContext(AppContext);\r\n  const { total, pageNo, itemsPerPage, nextPageNo, prevPageNo } = meta;\r\n  const { nextPage, prevPage, currentPage } = handler;\r\n\r\n  return (\r\n    <CardFooter tag={Flex} justify=\"center\" align=\"center\" className=\"bg-light border-top\">\r\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={prevPage} disabled={!prevPageNo}>\r\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'right' : 'left'}`} />\r\n      </Button>\r\n      {getPaginationArray(total, itemsPerPage).map(page => (\r\n        <Button\r\n          color={pageNo === page ? 'falcon-primary' : 'falcon-default'}\r\n          size=\"sm\"\r\n          className=\"ml-2\"\r\n          onClick={() => currentPage(page)}\r\n          key={page}\r\n        >\r\n          {page}\r\n        </Button>\r\n      ))}\r\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={nextPage} disabled={!nextPageNo}>\r\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'left' : 'right'}`} />\r\n      </Button>\r\n    </CardFooter>\r\n  );\r\n};\r\n\r\nEquipmentFooter.propTypes = {\r\n  meta: PropTypes.object.isRequired,\r\n  handler: PropTypes.object.isRequired\r\n};\r\n\r\nexport default EquipmentFooter;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nimport product1 from './img/1.png';\r\nimport product2 from './img/2.png';\r\nimport product4 from './img/4.png';\r\nimport product3 from './img/3.png';\r\nimport product8 from './img/8.png';\r\nimport product6 from './img/6.png';\r\nimport product7 from './img/7.png';\r\nimport product5 from './img/5.png';\r\nimport product9 from './img/9.png';\r\n\r\nconst equipmentList = [\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product2',\r\n        src: product2\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-01',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product1',\r\n        src: product1\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-02',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product4',\r\n        src: product4\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-03',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product3',\r\n        src: product3\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-04',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product8',\r\n        src: product8\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-05',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product6',\r\n        src: product6\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-06',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product7',\r\n        src: product7\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-07',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product5',\r\n        src: product5\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-08',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  },\r\n  {\r\n    id: uuid(),\r\n    files: [\r\n      {\r\n        id: uuid(),\r\n        path: ' product9',\r\n        src: product9\r\n      }\r\n    ],\r\n    title: '高压制冷机CH-ZL-09',\r\n    category: '空调水系统/冷水机组',\r\n    features: [\r\n      'Brand: York',\r\n      'Manufactured: 2011',\r\n      'Ton:  800 Ton',\r\n      'Model#:  YKK8K3H9-CUG',\r\n      'Serial#:  SNXM-143960',\r\n      'Type:  Water-Cooled',\r\n      'Compressor Type:  Centrifugal',\r\n      'Power:  460 Volts / 60 Hz / 3 Ph',\r\n      'Refrigerant:  R-134a'\r\n    ],\r\n    parameter1: 5.6,\r\n    parameter2: 6.7,\r\n    parameter3: 26.2,\r\n    parameter4: 0.86,\r\n    parameter5: 24.0,\r\n    parameter6: 5.0,\r\n    parameter7: 25.1,\r\n    alarms: ['supply temperature is high', 'return temperature is low'],\r\n    isOnline: true,\r\n    isRunning: true\r\n  }\r\n];\r\n\r\nexport default equipmentList;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport Loader from '../../common/Loader';\r\nimport useFakeFetch from '../../../hooks/useFakeFetch';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport Flex from '../../common/Flex';\r\nimport Cascader from 'rc-cascader';\r\nimport classNames from 'classnames';\r\nimport EquipmentList from './EquipmentList';\r\nimport EquipmentFooter from './EquipmentFooter';\r\nimport usePagination from '../../../hooks/usePagination';\r\nimport equipments from './equipments';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { APIBaseURL, settings } from '../../../config';\r\n\r\n\r\nconst SpaceEquipments = ({ setRedirect, setRedirectUrl, t }) => {\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n  const [equipmentIds, setEquipmentIds] = useState([]);\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n\r\n  // button\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const sliderSettings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedSpaceID(value[value.length - 1]);\r\n  };\r\n\r\n  // Hook\r\n  const { loading } = useFakeFetch(equipments);\r\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(equipmentIds, 4);\r\n  const { total, itemsPerPage, from, to } = paginationMeta;\r\n  const { perPage } = paginationHandler;\r\n\r\n  const isList = true;\r\n  const isGrid = false;\r\n\r\n  useEffect(() => {\r\n    setEquipmentIds(equipments.map(equipment => equipment.id));\r\n  }, []);\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(selectedSpaceID);\r\n    // // disable submit button\r\n    // setSubmitButtonDisabled(true);\r\n    // // show spinner\r\n    // setSpinnerHidden(false);\r\n\r\n    // // enable submit button\r\n    // setSubmitButtonDisabled(false);\r\n    // // hide spinner\r\n    // setSpinnerHidden(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{t('Monitoring')}</BreadcrumbItem><BreadcrumbItem active>{t('Space Equipments')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n\r\n      <Card>\r\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n              <Row noGutters={isList}>\r\n                {isIterableArray(equipments) &&\r\n                  equipments\r\n                    .filter(equipment => paginationData.includes(equipment.id))\r\n                    .map((equipment, index) => <EquipmentList {...equipment} sliderSettings={sliderSettings} key={equipment.id} index={index} />)}\r\n              </Row>\r\n            )}\r\n        </CardBody>\r\n        <EquipmentFooter meta={paginationMeta} handler={paginationHandler} />\r\n      </Card>\r\n      <Card className=\"mb-3\">\r\n        <CardBody>\r\n          <Row className=\"justify-content-between align-items-center\">\r\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\r\n              <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {t('Show Up to')}\r\n              </h6>\r\n              <CustomInput\r\n                id=\"itemsPerPage\"\r\n                type=\"select\"\r\n                bsSize=\"sm\"\r\n                value={itemsPerPage}\r\n                onChange={({ target }) => perPage(Number(target.value))}\r\n              >\r\n                <option value={2}>2</option>\r\n                <option value={4}>4</option>\r\n                <option value={6}>6</option>\r\n                <option value={total}>{t('All')}</option>\r\n              </CustomInput>\r\n              <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {t('FROM - TO of TOTAL Equipments', { 'FROM': from, 'TO': to, 'TOTAL': total })}\r\n              </h6>\r\n            </Col>\r\n\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(SpaceEquipments));\r\n","const option_minute = []\r\n\r\nfor(let i = 0; i <60; i++){\r\n    const minutelabel = i + '分';\r\n    const minuteOption = {\r\n        value: minutelabel,\r\n        label: minutelabel,\r\n    }\r\n\r\n    option_minute.push(minuteOption);\r\n}\r\n\r\nconst option_time = []\r\n\r\n\r\nfor(let i = 0; i < 24; i++){\r\n    const timelabel = i + '時';\r\n    const timeOption = {\r\n        value: timelabel,\r\n        label: timelabel,\r\n        children: option_minute\r\n    }\r\n\r\n    option_time.push(timeOption);\r\n}\r\n\r\n\r\nexport default option_time;","// 沒用到\r\nexport const User = {\r\n    id: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    state: '',\r\n};\r\n \r\nexport const fakeData = [\r\n    // {\r\n    //   id: '',\r\n    //   strategy: '',\r\n    //   month: '',\r\n    //   starttime: '',\r\n    //   endtime: '',\r\n    //   power: '',\r\n    // },\r\n  ];\r\n//   export const fakeData = [\r\n//     {\r\n//       id: '9s41rp',\r\n//       strategy: 'Kelvin',\r\n//       month: 'Langosh',\r\n//       starttime: 'Jerod14@hotmail.com',\r\n//       endtime: 'Ohio',\r\n//       power: '1',\r\n//     },\r\n//     {\r\n//       id: '08m6rx',\r\n//       strategy: 'Molly',\r\n//       month: 'Purdy',\r\n//       starttime: 'Hugh.Dach79@hotmail.com',\r\n//       endtime: 'Rhode Island',\r\n//       power: '1',\r\n//     },\r\n//     {\r\n//       id: '5ymtrc',\r\n//       strategy: 'Henry',\r\n//       month: 'Lynch',\r\n//       starttime: 'Camden.Macejkovic@yahoo.com',\r\n//       endtime: 'California',\r\n//       power: '1',\r\n//     },\r\n//     {\r\n//       id: 'ek5b97',\r\n//       strategy: 'Glenda',\r\n//       month: 'Douglas',\r\n//       starttime: 'Eric0@yahoo.com',\r\n//       endtime: 'Montana',\r\n//       power: '1',\r\n//     },\r\n//     {\r\n//       id: 'xxtydd',\r\n//       strategy: 'Leone',\r\n//       month: 'Williamson',\r\n//       starttime: 'Ericka_Mueller52@yahoo.com',\r\n//       endtime: 'Colorado',\r\n//       power: '1',\r\n//     },\r\n//     {\r\n//       id: 'wzxj9m',\r\n//       strategy: 'Mckenna',\r\n//       month: 'Friesen',\r\n//       starttime: 'Veda_Feeney@yahoo.com',\r\n//       endtime: 'New York',\r\n//       power: '1',\r\n//     },\r\n//     {\r\n//       id: '21dwtz',\r\n//       strategy: 'Wyman',\r\n//       month: 'Jast',\r\n//       starttime: 'Melvin.Pacocha@yahoo.com',\r\n//       endtime: 'Montana',\r\n//       power: '1',\r\n//     },\r\n//     {\r\n//       id: 'o8oe4k',\r\n//       strategy: 'Janick',\r\n//       month: 'Willms',\r\n//       starttime: 'Delfina12@gmail.com',\r\n//       endtime: 'Nebraska',\r\n//       power: '1',\r\n//     },\r\n//   ];\r\n \r\n  export const usStates = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Carolina',\r\n    'North Dakota',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming',\r\n    'Puerto Rico',\r\n  ];\r\n\r\n\r\n\r\n  export const options_strategy = [\r\n    {\r\n        value: '充電',\r\n        label: '充電',\r\n    },\r\n    {\r\n        value: '放電',\r\n        label: '放電',\r\n    },\r\n    {\r\n      value: '待機',\r\n      label: '待機',\r\n    },\r\n  ];\r\n//----------------------------------------------------\r\nexport const options_month = [\r\n    {\r\n      value: '1',\r\n      label: '1',\r\n    },\r\n    {\r\n      value: '2',\r\n      label: '2',\r\n    },\r\n    {\r\n      value: '3',\r\n      label: '3',\r\n    },\r\n    {\r\n      value: '4',\r\n      label: '4',\r\n    },\r\n    {\r\n      value: '5',\r\n      label: '5',\r\n    },\r\n    {\r\n      value: '6',\r\n      label: '6',\r\n    },\r\n    {\r\n      value: '7',\r\n      label: '7',\r\n    },\r\n    {\r\n      value: '8',\r\n      label: '8',\r\n    },\r\n    {\r\n      value: '9',\r\n      label: '9',\r\n    },\r\n    {\r\n      value: '10',\r\n      label: '10',\r\n    },\r\n    {\r\n      value: '11',\r\n      label: '11',\r\n    },\r\n    {\r\n      value: '12',\r\n      label: '12',\r\n    },\r\n  ];\r\n\r\n//----------------------------------------------------\r\nexport const option_minute = []\r\n\r\nfor(let i = 0; i <60; i++){\r\n    const minutelabel = i + '分';\r\n    const minuteOption = {\r\n        value: minutelabel,\r\n        label: minutelabel,\r\n    }\r\n\r\n    option_minute.push(minuteOption);\r\n}\r\n\r\nexport const option_time = []\r\n\r\n\r\nfor(let i = 0; i < 24; i++){\r\n    const timelabel = i + '時';\r\n    const timeOption = {\r\n        value: timelabel,\r\n        label: timelabel,\r\n        //children: option_minute\r\n    }\r\n\r\n    option_time.push(timeOption);\r\n}\r\n\r\n\r\n\r\n","import React ,{ useMemo, useState } from 'react';\r\nimport {\r\n  MRT_EditActionButtons,\r\n  MaterialReactTable,\r\n  // createRow,\r\n  useMaterialReactTable,\r\n} from 'material-react-table';\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Tooltip,\r\n\r\n\r\n  ThemeProvider,\r\n  createTheme,\r\n  useTheme,\r\n  Select,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport {\r\n  QueryClient,\r\n  QueryClientProvider,\r\n  useMutation,\r\n  useQuery,\r\n  useQueryClient,\r\n} from '@tanstack/react-query';\r\nimport { fakeData, usStates } from './makeData.js';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\n// import Cascader from 'rc-cascader';\r\n// import { Cascader , Input } from 'antd';\r\nimport { Cascader } from 'antd';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    Input\r\n} from 'reactstrap';\r\n// import {\r\n//     Breadcrumb,\r\n//     BreadcrumbItem,\r\n//     ButtonGroup,\r\n//     Card,\r\n//     CardBody,\r\n//     Col,\r\n//     CustomInput,\r\n//     Row,\r\n//     Form,\r\n//     FormGroup,\r\n//     DropdownItem,\r\n//     DropdownMenu,\r\n//     DropdownToggle,\r\n//     UncontrolledDropdown,\r\n//     Label,\r\n//     Spinner,\r\n// } from 'reactstrap'\r\n\r\nimport './Materialtable.css';\r\n\r\nimport option_time from './option_time'\r\n\r\n\r\nconst Example = () => {\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n\r\n  const [selectedStrategy, setSelectedStrategy] = useState('');\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [selectedStartTime, setSelectedStartTime] = useState('');\r\n  const [selectedEndTime, setSelectedEndTime] = useState('');\r\n  const [selectedPower, setSelectedPower] = useState('');\r\n\r\n\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'id',\r\n        header: 'Id',\r\n        enableEditing: false,\r\n        size: 80,\r\n      },\r\n      {\r\n        accessorKey: 'strategy',\r\n        header: 'Strategy',\r\n        muiEditTextFieldProps: {\r\n          required: true,\r\n          error: !!validationErrors?.strategy,\r\n          helperText: validationErrors?.strategy,\r\n          onFocus: () =>\r\n            setValidationErrors({\r\n              ...validationErrors,\r\n              strategy: undefined,\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'month',\r\n        header: 'Month',\r\n        muiEditTextFieldProps: {\r\n          required: true,\r\n          error: !!validationErrors?.month,\r\n          helperText: validationErrors?.month,\r\n          onFocus: () =>\r\n            setValidationErrors({\r\n              ...validationErrors,\r\n              month: undefined,\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'starttime',\r\n        header: 'Start Time',\r\n        muiEditTextFieldProps: {\r\n          required: true,\r\n          error: !!validationErrors?.starttime,\r\n          helperText: validationErrors?.starttime,\r\n          onFocus: () =>\r\n            setValidationErrors({\r\n              ...validationErrors,\r\n              starttime: undefined,\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'endtime',\r\n        header: 'End Time',\r\n        muiEditTextFieldProps: {\r\n          required: true,\r\n          error: !!validationErrors?.endtime,\r\n          helperText: validationErrors?.endtime,\r\n          onFocus: () =>\r\n            setValidationErrors({\r\n              ...validationErrors,\r\n              endtime: undefined,\r\n            }),\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'power',\r\n        header: 'Power',\r\n        muiEditTextFieldProps: {\r\n          required: true,\r\n          error: !!validationErrors?.power,\r\n          helperText: validationErrors?.power,\r\n          onFocus: () =>\r\n            setValidationErrors({\r\n              ...validationErrors,\r\n              power: undefined,\r\n            }),\r\n        },\r\n      },\r\n    ],\r\n    [validationErrors],\r\n  );\r\n\r\n\r\n  const globalTheme = useTheme();\r\n  const tableTheme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode: globalTheme.palette.mode, //let's use the same dark/light mode as the global theme\r\n          primary: globalTheme.palette.secondary, //swap in the secondary color as the primary for the table\r\n          info: {\r\n            main: 'rgb(255,122,0)', //add in a custom color for the toolbar alert background stuff\r\n          },\r\n          background: {\r\n            default:\r\n              globalTheme.palette.mode === 'dark'\r\n                ? 'rgb(144,202,249)' //random light yellow color for the background in light mode\r\n                //'rgb(254,255,244)' //random light yellow color for the background in light mode\r\n                : '#000', //pure black table in dark mode for fun\r\n          },\r\n        },\r\n        typography: {\r\n          button: {\r\n            textTransform: 'none', //customize typography styles for all buttons in table by default\r\n            fontSize: '1.2rem',\r\n          },\r\n        },\r\n        components: {\r\n          MuiTooltip: {\r\n            styleOverrides: {\r\n              tooltip: {\r\n                fontSize: '1.1rem', //override to make tooltip font size larger\r\n              },\r\n            },\r\n          },\r\n          MuiSwitch: {\r\n            styleOverrides: {\r\n              thumb: {\r\n                color: 'black', //change the color of the switch thumb in the columns show/hide menu to pink\r\n              },\r\n            },\r\n          },\r\n        },\r\n      }),\r\n    [globalTheme],\r\n  );\r\n\r\n\r\n\r\n\r\n  //call CREATE hook\r\n  const { mutateAsync: createUser, isPending: isCreatingUser } =\r\n    useCreateUser();\r\n  //call READ hook\r\n  const {\r\n    data: fetchedUsers = [],\r\n    isError: isLoadingUsersError,\r\n    isFetching: isFetchingUsers,\r\n    isLoading: isLoadingUsers,\r\n  } = useGetUsers();\r\n  //call UPDATE hook\r\n  const { mutateAsync: updateUser, isPending: isUpdatingUser } =\r\n    useUpdateUser();\r\n  //call DELETE hook\r\n  const { mutateAsync: deleteUser, isPending: isDeletingUser } =\r\n    useDeleteUser();\r\n\r\n\r\n  //CREATE action\r\n  const handleCreateUser = async ({ values, table }) => {\r\n    // const newValidationErrors = validateUser(values);\r\n    // if (Object.values(newValidationErrors).some((error) => error)) {\r\n    //   setValidationErrors(newValidationErrors);\r\n    //   return;\r\n    // }\r\n    // setValidationErrors({});\r\n    // await createUser(values);\r\n    // table.setCreatingRow(null); //exit creating mode\r\n\r\n    const newValidationErrors = validateUser({\r\n        strategy: selectedStrategy,\r\n        month: selectedMonth,\r\n        starttime: selectedStartTime,\r\n        endtime: selectedEndTime,\r\n        power: selectedPower,\r\n      });\r\n      if (Object.values(newValidationErrors).some((error) => error)) {\r\n        setValidationErrors(newValidationErrors);\r\n        return;\r\n      }\r\n      setValidationErrors({});\r\n      await createUser({\r\n        strategy: selectedStrategy,\r\n        month: selectedMonth,\r\n        starttime: selectedStartTime,\r\n        endtime: selectedEndTime,\r\n        power: selectedPower,\r\n      });\r\n  };\r\n\r\n\r\n  //UPDATE action\r\n  const handleSaveUser = async ({ values, table }) => {\r\n    const newValidationErrors = validateUser(values);\r\n    if (Object.values(newValidationErrors).some((error) => error)) {\r\n      setValidationErrors(newValidationErrors);\r\n      return;\r\n    }\r\n    setValidationErrors({});\r\n    await updateUser(values);\r\n    table.setEditingRow(null); //exit editing mode\r\n  };\r\n\r\n\r\n  const handleSaveRow = ({ row, values }) => {\r\n    // tableData[row.index] = values;\r\n    // setTableData([...tableData]);\r\n  };\r\n\r\n  //------------------------------------------------------------------------\r\n\r\n\r\n\r\n  //------------------------------------------------------------------------\r\n  \r\n  \r\n  //DELETE action\r\n  const openDeleteConfirmModal = (row) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      deleteUser(row.original.id);\r\n    }\r\n  };\r\n\r\n\r\n  const table = useMaterialReactTable({\r\n    columns,\r\n    data: fetchedUsers,\r\n    createDisplayMode: 'modal', //default ('row', and 'custom' are also available)\r\n    editDisplayMode: 'modal', //default ('row', 'cell', 'table', and 'custom' are also available)\r\n    enableEditing: true,\r\n    getRowId: (row) => row.id,\r\n\r\n    //新增的部分~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-\r\n\r\n    muiTableHeadCellProps: {\r\n        sx:(theme) => ({\r\n            // color: theme.palette.text.secondary,\r\n            color: 'lightsalmon',\r\n        }),\r\n    },\r\n\r\n    muiTableBodyCellProps: ({ column }) => ({\r\n        sx: {\r\n            color: 'steelblue',\r\n            backgroundColor: 'darkgrey'\r\n        }\r\n    }),\r\n\r\n\r\n    //新增的部分~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-\r\n    \r\n    muiToolbarAlertBannerProps: isLoadingUsersError\r\n      ? {\r\n          color: 'error',\r\n          children: 'Error loading data',\r\n        }\r\n      : undefined,\r\n    muiTableContainerProps: {\r\n      sx: {\r\n        minHeight: '500px',\r\n        // 新增的  如下\r\n        // backgroundColor: 'lightblue', // 設置背景色\r\n        //backgroundColor: 'steelblue', // 設置背景色\r\n      },\r\n    },\r\n    onCreatingRowCancel: () => setValidationErrors({}),\r\n    onCreatingRowSave: handleCreateUser,\r\n    onEditingRowCancel: () => setValidationErrors({}),\r\n    onEditingRowSave: handleSaveUser,\r\n    //optionally customize modal content\r\n    renderCreateRowDialogContent: ({ table, row, internalEditComponents }) => (\r\n      <>\r\n        <DialogTitle variant=\"h3\">Create New User</DialogTitle>\r\n        <DialogContent\r\n          sx={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}\r\n        >\r\n          {internalEditComponents} \r\n          {/* or render custom edit components here */}\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {/* <MRT_EditActionButtons variant=\"text\" table={table} row={row} /> */}\r\n        </DialogActions>\r\n      </>\r\n    ),\r\n    //optionally customize modal content\r\n    renderEditRowDialogContent: ({ table, row, internalEditComponents }) => (\r\n      <>\r\n        <DialogTitle variant=\"h3\">Edit User</DialogTitle>\r\n        <DialogContent\r\n          sx={{ display: 'flex', flexDirection: 'column', gap: '1.5rem', zIndex: '1500' }}\r\n        >\r\n          {/* {internalEditComponents}  */}\r\n          {/* or render custom edit components here */}\r\n\r\n          \r\n          <Row>\r\n              <Cascader\r\n              sx={{zIndex: '2000'}}\r\n              options={options}\r\n              onChange={(value) => setSelectedStrategy(value)}\r\n              placeholder=\"Select Strategy\"\r\n              value={selectedStrategy}\r\n              />\r\n          </Row>    \r\n          <Row>\r\n              <Cascader\r\n              options={options_month}\r\n              onChange={(value) => setSelectedMonth(value)}\r\n              placeholder=\"Select Month\"\r\n              value={selectedMonth}\r\n              />\r\n          </Row>\r\n          <Row>\r\n              <Cascader\r\n              options={option_time}\r\n              onChange={(value) => setSelectedStartTime(value)}\r\n              placeholder=\"Select Start Time\"\r\n              value={selectedStartTime}\r\n              />\r\n          </Row>\r\n          <Row>\r\n              <Cascader\r\n              options={option_time}\r\n              onChange={(value) => setSelectedEndTime(value)}\r\n              placeholder=\"Select End Time\"\r\n              value={selectedEndTime}\r\n              />\r\n          </Row>\r\n          <Row>\r\n              <Input\r\n              value={selectedPower}\r\n              onChange={(e) => setSelectedPower(e.target.value)}\r\n              placeholder=\"Enter Power\"\r\n              />\r\n          </Row>\r\n          \r\n          \r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <MRT_EditActionButtons variant=\"text\" table={table} row={row} />\r\n        </DialogActions>\r\n      </>\r\n    ),\r\n    renderRowActions: ({ row, table }) => (\r\n      <Box sx={{ display: 'flex', gap: '1rem' }}>\r\n        <Tooltip \r\n          title=\"Edit\"\r\n            editDisplayMode=\"row\"\r\n            enableEditing\r\n            enableRowActions\r\n            muiEditTextFieldProps={{ variant: 'outlined' }}\r\n            onEditingRowSave={handleSaveRow}\r\n        >\r\n          {/* <IconButton onClick={() => table.setEditingRow(row)}> */}\r\n            <EditIcon />\r\n          {/* </IconButton> */}\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton color=\"error\" onClick={() => openDeleteConfirmModal(row)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    ),\r\n    renderTopToolbarCustomActions: ({ table }) => (\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          table.setCreatingRow(true); //simplest way to open the create row modal with no default values\r\n          //or you can pass in a row object to set default values with the `createRow` helper function\r\n          // table.setCreatingRow(\r\n          //   createRow(table, {\r\n          //     //optionally pass in default values for the new row, useful for nested data or other complex scenarios\r\n          //   }),\r\n          // );\r\n        }}\r\n      >\r\n        Create New User\r\n      </Button>\r\n    ),\r\n    state: {\r\n      isLoading: isLoadingUsers,\r\n      isSaving: isCreatingUser || isUpdatingUser || isDeletingUser,\r\n      showAlertBanner: isLoadingUsersError,\r\n      showProgressBars: isFetchingUsers,\r\n    },\r\n  });\r\n\r\n  const options = [\r\n    {\r\n      value: '充電',\r\n      label: '充電',\r\n    },\r\n    {\r\n      value: '放電',\r\n      label: '放電',\r\n    },\r\n    {\r\n        value: '待機',\r\n        label: '待機',\r\n    }\r\n    // Add more strategy options as needed\r\n  ];\r\n\r\n  const options_month = [\r\n    {\r\n      value: 'January',\r\n      label: 'January',\r\n    },\r\n    {\r\n      value: 'February',\r\n      label: 'February',\r\n    },\r\n    {\r\n        value: 'March',\r\n        label: 'March',\r\n      },\r\n      {\r\n        value: 'April',\r\n        label: 'April',\r\n      },\r\n      {\r\n        value: 'May',\r\n        label: 'May',\r\n      },\r\n    // Add more month options as needed\r\n  ];\r\n\r\n  // const option_time = [\r\n  //   {\r\n  //     value: '00:00',\r\n  //     label: '00:00',\r\n  //   },\r\n  //   {\r\n  //     value: '01:00',\r\n  //     label: '01:00',\r\n  //   },\r\n  //   {\r\n  //     value: '02:00',\r\n  //     label: '02:00',\r\n  //   },\r\n  //   {\r\n  //     value: '03:00',\r\n  //     label: '03:00',\r\n  //   },\r\n  //   // Add more time options as needed\r\n  // ];\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n        <Card className=\"bg-light mb-3\">\r\n            <CardBody className=\"p-3\">\r\n                <Row>\r\n                    <Col xs={3} sm={2}>\r\n                        <Cascader\r\n                        options={options}\r\n                        onChange={(value) => setSelectedStrategy(value)}\r\n                        placeholder=\"Select Strategy\"\r\n                        value={selectedStrategy}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={3} sm={2}>\r\n                        <Cascader\r\n                        options={options_month}\r\n                        onChange={(value) => setSelectedMonth(value)}\r\n                        placeholder=\"Select Month\"\r\n                        value={selectedMonth}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={3} sm={2}>\r\n                        <Cascader\r\n                        options={option_time}\r\n                        onChange={(value) => setSelectedStartTime(value)}\r\n                        placeholder=\"Select Start Time\"\r\n                        value={selectedStartTime}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={3} sm={2}>\r\n                        <Cascader\r\n                        options={option_time}\r\n                        onChange={(value) => setSelectedEndTime(value)}\r\n                        placeholder=\"Select End Time\"\r\n                        value={selectedEndTime}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={3} sm={2}>\r\n                        <Input\r\n                        value={selectedPower}\r\n                        onChange={(e) => setSelectedPower(e.target.value)}\r\n                        placeholder=\"Enter Power\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n        <Box sx={{ marginBottom: '1rem' }}>\r\n            <Button onClick={handleCreateUser} variant=\"contained\" color=\"primary\">\r\n                Create New User\r\n            </Button>\r\n        </Box>\r\n\r\n        {/* <div className=\"material-table-container\"> */}\r\n        <ThemeProvider theme={tableTheme}>\r\n            <MaterialReactTable \r\n                    columns={[\r\n                              { accessorKey: 'strategy', header: 'strategy' },\r\n                              { accessorKey: 'month', header: 'month' },\r\n                              { accessorKey: 'starttime', header: 'starttime' },\r\n                              {\r\n                                accessorKey: 'endtime',\r\n                                editSelectOptions: usStates,\r\n                                editVariant: 'select',\r\n                                header: 'endtime',\r\n                              },\r\n                              { accessorKey: 'power', header: 'power' },\r\n                            ]}\r\n                    table={table} \r\n                    className=\"materialtable_overlay\"\r\n                    editDisplayMode=\"row\"\r\n                    enableEditing\r\n                    enableRowActions\r\n                    muiEditTextFieldProps={{ variant: 'outlined' }}\r\n                    onEditingRowSave={handleSaveRow}\r\n                    \r\n            />\r\n        </ThemeProvider>\r\n            \r\n        {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n//CREATE hook (post new user to api)\r\nfunction useCreateUser() {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: async (user) => {\r\n      //send api update request here\r\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\r\n      return Promise.resolve();\r\n    },\r\n    //client side optimistic update\r\n    onMutate: (newUserInfo) => {\r\n      queryClient.setQueryData(['users'], (prevUsers) => [\r\n        ...prevUsers,\r\n        {\r\n          ...newUserInfo,\r\n          id: (Math.random() + 1).toString(36).substring(7),\r\n        },\r\n      ]);\r\n    },\r\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\r\n  });\r\n}\r\n\r\n\r\n//READ hook (get users from api)\r\nfunction useGetUsers() {\r\n  return useQuery({\r\n    queryKey: ['users'],\r\n    queryFn: async () => {\r\n      //send api request here\r\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\r\n      return Promise.resolve(fakeData);\r\n    },\r\n    refetchOnWindowFocus: false,\r\n  });\r\n}\r\n\r\n\r\n//UPDATE hook (put user in api)\r\nfunction useUpdateUser() {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: async (user) => {\r\n      //send api update request here\r\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\r\n      return Promise.resolve();\r\n    },\r\n    //client side optimistic update\r\n    onMutate: (newUserInfo) => {\r\n      queryClient.setQueryData(['users'], (prevUsers) =>\r\n        prevUsers?.map((prevUser) =>\r\n          prevUser.id === newUserInfo.id ? newUserInfo : prevUser,\r\n        ),\r\n      );\r\n    },\r\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\r\n  });\r\n}\r\n\r\n\r\n//DELETE hook (delete user in api)\r\nfunction useDeleteUser() {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: async (userId) => {\r\n      //send api update request here\r\n      await new Promise((resolve) => setTimeout(resolve, 1000)); //fake api call\r\n      return Promise.resolve();\r\n    },\r\n    //client side optimistic update\r\n    onMutate: (userId) => {\r\n      queryClient.setQueryData(['users'], (prevUsers) =>\r\n        prevUsers?.filter((user) => user.id !== userId),\r\n      );\r\n    },\r\n    // onSettled: () => queryClient.invalidateQueries({ queryKey: ['users'] }), //refetch users after mutation, disabled for demo\r\n  });\r\n}\r\n\r\n\r\nconst queryClient = new QueryClient();\r\n\r\n\r\nconst Materialtable = () => (\r\n  //Put this with your other react-query providers near root of your app\r\n  <QueryClientProvider client={queryClient}>\r\n    <Example />\r\n  </QueryClientProvider>\r\n);\r\n\r\n\r\nexport default Materialtable;\r\n// const ExampleWithProviders = () => (\r\n//   //Put this with your other react-query providers near root of your app\r\n//   <QueryClientProvider client={queryClient}>\r\n//     <Example />\r\n//   </QueryClientProvider>\r\n// );\r\n\r\n\r\n// export default ExampleWithProviders;\r\n\r\n\r\nconst validateRequired = (value) => !!value.length;\r\nconst validateEmail = (email) =>\r\n  !!email.length &&\r\n  email\r\n    .toLowerCase()\r\n    .match(\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    );\r\n\r\n\r\nfunction validateUser(user) {\r\n  return {\r\n    strategy: !validateRequired(user.strategy)\r\n      ? 'First Name is Required'\r\n      : '',\r\n    month: !validateRequired(user.month) ? 'Last Name is Required' : '',\r\n    // star: !validateEmail(user.email) ? 'Incorrect Email Format' : '',\r\n  };\r\n}\r\n","import React, { useMemo, useState } from 'react';\r\nimport {\r\n  MaterialReactTable,\r\n  useMaterialReactTable,\r\n} from 'material-react-table';\r\nimport { Box, Button, IconButton, Tooltip } from '@mui/material';\r\nimport {\r\n    Row,\r\n    Col,\r\n} from 'reactstrap'\r\nimport {\r\n  QueryClient,\r\n  QueryClientProvider,\r\n  useMutation,\r\n  useQuery,\r\n  useQueryClient,\r\n} from '@tanstack/react-query';\r\nimport { fakeData, usStates, options_strategy, options_month, option_time, option_minute } from './makeData';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst Example = () => {\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n    //   {\r\n    //     accessorKey: 'id',\r\n    //     header: 'Id',\r\n    //     enableEditing: false,\r\n    //     size: 80,\r\n    //   },\r\n      {\r\n        accessorKey: 'strategy',\r\n        header: 'strategy',\r\n        editSelectOptions: options_strategy,\r\n        muiEditTextFieldProps: {\r\n          select: true,\r\n          error: !!validationErrors?.strategy,\r\n          helperText: validationErrors?.strategy,\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'month',\r\n        header: 'month',\r\n        editSelectOptions: options_month,\r\n        muiEditTextFieldProps: {\r\n          select: true,\r\n          error: !!validationErrors?.month,\r\n          helperText: validationErrors?.month,\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'starttime',\r\n        header: 'starttime',\r\n        editVariant: 'select',\r\n        editSelectOptions: option_time,\r\n        muiEditTextFieldProps: {\r\n          select: true,\r\n          error: !!validationErrors?.starttime,\r\n          helperText: validationErrors?.starttime,\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'startminute',\r\n        header: 'startminute',\r\n        editVariant: 'select',\r\n        editSelectOptions: option_minute,\r\n        muiEditTextFieldProps: {\r\n          select: true,\r\n          error: !!validationErrors?.startminute,\r\n          helperText: validationErrors?.startminute,\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'endtime',\r\n        header: 'endtime',\r\n        editVariant: 'select',\r\n        editSelectOptions: option_time,\r\n        muiEditTextFieldProps: {\r\n          select: true,\r\n          error: !!validationErrors?.endtime,\r\n          helperText: validationErrors?.endtime,\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'endminute',\r\n        header: 'endminute',\r\n        editVariant: 'select',\r\n        editSelectOptions: option_minute,\r\n        muiEditTextFieldProps: {\r\n          select: true,\r\n          error: !!validationErrors?.endminute,\r\n          helperText: validationErrors?.endminute,\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'power',\r\n        header: 'power',\r\n        muiEditTextFieldProps: {\r\n          type: 'email',\r\n          required: true,\r\n          error: !!validationErrors?.power,\r\n          helperText: validationErrors?.power,\r\n          onFocus: () =>\r\n            setValidationErrors({\r\n              ...validationErrors,\r\n              power: undefined,\r\n            }),\r\n        },\r\n      }\r\n    ],\r\n    [validationErrors]\r\n  );\r\n\r\n  const { mutateAsync: createUser, isPending: isCreatingUser } = useCreateUser();\r\n  const { data: fetchedUsers = [], isError: isLoadingUsersError, isFetching: isFetchingUsers, isLoading: isLoadingUsers } = useGetUsers();\r\n  const { mutateAsync: updateUser, isPending: isUpdatingUser } = useUpdateUser();\r\n  const { mutateAsync: deleteUser, isPending: isDeletingUser } = useDeleteUser();\r\n\r\n  const handleCreateUser = async ({ values, table }) => {\r\n    const newValidationErrors = validateUser(values);\r\n    if (Object.values(newValidationErrors).some((error) => error)) {\r\n      setValidationErrors(newValidationErrors);\r\n      return;\r\n    }\r\n    setValidationErrors({});\r\n    await createUser(values);\r\n    table.setCreatingRow(null);\r\n  };\r\n\r\n  const handleSaveUser = async ({ values, table }) => {\r\n    const newValidationErrors = validateUser(values);\r\n    if (Object.values(newValidationErrors).some((error) => error)) {\r\n      setValidationErrors(newValidationErrors);\r\n      return;\r\n    }\r\n    setValidationErrors({});\r\n    await updateUser(values);\r\n    table.setEditingRow(null);\r\n  };\r\n\r\n  const openDeleteConfirmModal = (row) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      deleteUser(row.original.id);\r\n    }\r\n  };\r\n\r\n   //新增的部分~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-\r\n   //主要用於 確定要完整新增資料  0326新增\r\n   const confirmm = () => {\r\n        if(window.confirm('請問，確定要執行送出?')){\r\n        confirm_submit();\r\n        }\r\n    }\r\n\r\n    const delet = () => {\r\n        axios.delete(\"http://localhost:3088/del_getData\");\r\n    }\r\n    const confirm_queryClient = useQueryClient();\r\n    const confirm_submit = async () => {\r\n        \r\n        // confirm_queryClient.getQueryData(['users'], (allschedule) => {\r\n           \r\n        // })\r\n        //console.log(confirm_data);\r\n        delet();\r\n        const confirm_data = confirm_queryClient.getQueryData(['users']);\r\n        //axios.delete(\"http://localhost:3088/del_getData\");\r\n        console.log(\"this is confirm data\")\r\n        console.log(confirm_data)\r\n\r\n        if(confirm_data){\r\n            try{\r\n\r\n                //axios.delete(\"http://localhost:3088/del_getData\");\r\n\r\n                // confirm_data.map((val) => {\r\n                confirm_data.map((val, key) => {\r\n                    // fetchedUsers.forEach((val) => {\r\n                    // 解析選定的開始時間字符串，假設它的格式是 \"12時30分\"    \r\n                    //if( val.starttime && val.startminute && val.endtime && val.endminute) {\r\n                                        \r\n                        const  hourStr = val.starttime.split('時')\r\n                        console.log(\"this is hourstr\")\r\n                        console.log(hourStr)\r\n                        const  startTimeHour = parseInt(hourStr, 10);\r\n                        const  minuteStr = val.startminute.split('分')\r\n                        const  startTimeMinute = parseInt(minuteStr, 10);\r\n        \r\n                        const end_hourStr = val.endtime.split('時')\r\n                        const endTimeHour = parseInt(end_hourStr, 10);\r\n                        const end_minuteStr = val.endminute.split('分')\r\n                        const endTimeMinute = parseInt(end_minuteStr, 10);\r\n        \r\n                        axios.post(\"http://localhost:3088/write_addData\", {\r\n                            startTimeHour,\r\n                            startTimeMinute,\r\n                            endTimeHour,\r\n                            endTimeMinute\r\n                        }).then(() => {\r\n                            // 請求成功處理\r\n                        }).catch((error) => {\r\n                            // 請求失敗處理\r\n                            console.error(\"Error:\", error);\r\n                        });\r\n                    //}\r\n                });\r\n            }\r\n            catch(error){\r\n                console.error(\"error:\", error);\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n   //新增的部分~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-\r\n\r\n  const table = useMaterialReactTable({\r\n    columns,\r\n    data: fetchedUsers,\r\n    createDisplayMode: 'row',\r\n    editDisplayMode: 'row',\r\n    enableEditing: true,\r\n    getRowId: (row) => row.id,\r\n    positionActionsColumn: 'last',\r\n\r\n    //新增的部分~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-\r\n\r\n    muiTableHeadCellProps: {\r\n        sx:(theme) => ({\r\n            // color: theme.palette.text.secondary,\r\n            color: 'snow',\r\n            // backgroundColor: 'darkcyan'\r\n            backgroundColor: 'darkslategray'\r\n        }),\r\n    },\r\n\r\n    muiTableBodyCellProps: ({ column }) => ({\r\n        sx: {\r\n            color: 'darkblue',\r\n            // backgroundColor: 'cadetblue'\r\n            backgroundColor: 'honeydew'\r\n        }\r\n    }),\r\n\r\n    //新增的部分~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-\r\n\r\n    muiToolbarAlertBannerProps: isLoadingUsersError\r\n      ? {\r\n          color: 'error',\r\n          children: 'Error loading data',\r\n        }\r\n      : undefined,\r\n    muiTableContainerProps: {\r\n      sx: {\r\n        minHeight: '500px',\r\n        // backgroundColor: 'black'\r\n      },\r\n    },\r\n    onCreatingRowCancel: () => setValidationErrors({}),\r\n    onCreatingRowSave: handleCreateUser,\r\n    onEditingRowCancel: () => setValidationErrors({}),\r\n    onEditingRowSave: handleSaveUser,\r\n    renderRowActions: ({ row, table }) => (\r\n      <Box sx={{ display: 'flex', gap: '1rem' }}>\r\n        <Tooltip title=\"Edit\">\r\n          <IconButton onClick={() => table.setEditingRow(row)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton color=\"error\" onClick={() => openDeleteConfirmModal(row)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    ),\r\n    renderTopToolbarCustomActions: ({ table }) => (\r\n      <div>\r\n        <Row>\r\n            {/* <Col xs={6} sm={3}> */}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                    table.setCreatingRow(true);\r\n                    }}\r\n                >\r\n                    新增排程\r\n                </Button>\r\n            {/* </Col>\r\n            <Col xs={6} sm={3}> */}\r\n                <Button\r\n                    color=\"success\"\r\n                    variant=\"contained\"\r\n                    onClick={confirmm}\r\n                >\r\n                    送出\r\n                </Button>\r\n            {/* </Col> */}\r\n        </Row>\r\n      </div>\r\n    ),\r\n    state: {\r\n      isLoading: isLoadingUsers,\r\n      isSaving: isCreatingUser || isUpdatingUser || isDeletingUser,\r\n      showAlertBanner: isLoadingUsersError,\r\n      showProgressBars: isFetchingUsers,\r\n    },\r\n  });\r\n\r\n  return <MaterialReactTable table={table} />;\r\n};\r\n\r\nfunction useCreateUser() {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: async (user) => {\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      return Promise.resolve();\r\n    },\r\n    onMutate: (newUserInfo) => {\r\n      queryClient.setQueryData(['users'],\r\n      (prevUsers) => [\r\n        ...prevUsers,\r\n        {\r\n          ...newUserInfo,\r\n          id: (Math.random() + 1).toString(36).substring(7),\r\n        },\r\n      ]\r\n    );\r\n  },\r\n});\r\n}\r\n\r\nfunction useGetUsers() {\r\nreturn useQuery({\r\n  queryKey: ['users'],\r\n  queryFn: async () => {\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    return Promise.resolve(fakeData);\r\n  },\r\n  refetchOnWindowFocus: false,\r\n});\r\n}\r\n\r\nfunction useUpdateUser() {\r\nconst queryClient = useQueryClient();\r\nreturn useMutation({\r\n  mutationFn: async (user) => {\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    return Promise.resolve();\r\n  },\r\n  onMutate: (newUserInfo) => {\r\n    queryClient.setQueryData(['users'], (prevUsers) =>\r\n      prevUsers?.map((prevUser) =>\r\n        prevUser.id === newUserInfo.id ? newUserInfo : prevUser\r\n      )\r\n    );\r\n  },\r\n});\r\n}\r\n\r\nfunction useDeleteUser() {\r\nconst queryClient = useQueryClient();\r\nreturn useMutation({\r\n  mutationFn: async (userId) => {\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    return Promise.resolve();\r\n  },\r\n  onMutate: (userId) => {\r\n    queryClient.setQueryData(['users'], (prevUsers) =>\r\n      prevUsers?.filter((user) => user.id !== userId)\r\n    );\r\n  },\r\n});\r\n}\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst New_material_crud = () => (\r\n<QueryClientProvider client={queryClient}>\r\n  <Example />\r\n</QueryClientProvider>\r\n);\r\n\r\nexport default New_material_crud;\r\n\r\nconst validateRequired = (value) => !!value.length;\r\nconst validateEmail = (email) =>\r\n!!email.length &&\r\nemail\r\n  .toLowerCase()\r\n  .match(\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  );\r\n\r\nfunction validateUser(user) {\r\nreturn {\r\n  // firstName: !validateRequired(user.firstName)\r\n  //   ? 'First Name is Required'\r\n  //   : '',\r\n  // lastName: !validateRequired(user.lastName) ? 'Last Name is Required' : '',\r\n  // email: !validateEmail(user.email) ? 'Incorrect Email Format' : '',\r\n};\r\n}\r\n","import React, { Fragment, useState, useEffect, createRef } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Label,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Loader from '../../common/Loader';\r\nimport useFakeFetch from '../../../hooks/useFakeFetch';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport Flex from '../../common/Flex';\r\nimport Cascader from 'rc-cascader';\r\nimport classNames from 'classnames';\r\nimport EquipmentList from './EquipmentList';\r\nimport EquipmentFooter from './EquipmentFooter';\r\nimport usePagination from '../../../hooks/usePagination';\r\nimport equipments from './equipments';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { APIBaseURL, settings } from '../../../config';\r\n\r\nimport './combineEquipment.css';\r\nimport axios from 'axios';\r\n// import Cascader_test from './Cascader_test';\r\nimport option_time from './option_time'\r\nimport ShowTable from './ShowTable';\r\nimport Boot_table from './Boot_table';\r\n\r\n// import { Scrollbars } from \"react-custom-scrollbars\"\r\nimport { Scrollbar } from 'react-scrollbars-custom'\r\nimport Swal from 'sweetalert2';\r\n\r\n// import '@sweetalert2/theme-borderless'\r\nimport '@sweetalert2/theme-wordpress-admin'\r\nimport Materialtable from './Materialtable';\r\nimport New_material_crud from './New_material_crud'\r\n\r\n\r\nconst CombinedEquipments = ({ setRedirect, setRedirectUrl, t }) => {\r\n  // useEffect(() => {\r\n  //   let is_logged_in = getCookieValue('is_logged_in');\r\n  //   let user_name = getCookieValue('user_name');\r\n  //   let user_display_name = getCookieValue('user_display_name');\r\n  //   let user_uuid = getCookieValue('user_uuid');\r\n  //   let token = getCookieValue('token');\r\n  //   if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n  //     setRedirectUrl(`/authentication/basic/login`);\r\n  //     setRedirect(true);\r\n  //   } else {\r\n  //     //update expires time of cookies\r\n  //     createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n  //     createCookie('user_name', user_name, settings.cookieExpireTime);\r\n  //     createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n  //     createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n  //     createCookie('token', token, settings.cookieExpireTime);\r\n  //   }\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   let timer = setInterval(() => {\r\n  //     let is_logged_in = getCookieValue('is_logged_in');\r\n  //     if (is_logged_in === null || !is_logged_in) {\r\n  //       setRedirectUrl(`/authentication/basic/login`);\r\n  //       setRedirect(true);\r\n  //     }\r\n  //   }, 1000);\r\n  //   return () => clearInterval(timer);\r\n  // }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\r\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\r\n\r\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\r\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\r\n  const [equipmentIds, setEquipmentIds] = useState([]);\r\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\r\n\r\n  // button\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/tree', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      console.log(response);\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      console.log(json);\r\n      if (isResponseOK) {\r\n        // rename keys\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        setCascaderOptions(json);\r\n        setSelectedSpaceName([json[0]].map(o => o.label));\r\n        setSelectedSpaceID([json[0]].map(o => o.value));\r\n        // get Combined Equipments by root Space ID\r\n        let isResponseOK = false;\r\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n            console.log(json);\r\n            setCombinedEquipmentList(json[0]);\r\n            if (json[0].length > 0) {\r\n              setSelectedCombinedEquipment(json[0][0].value);\r\n              // enable submit button\r\n              setSubmitButtonDisabled(false);\r\n            } else {\r\n              setSelectedCombinedEquipment(undefined);\r\n              // disable submit button\r\n              setSubmitButtonDisabled(true);\r\n            }\r\n          } else {\r\n            toast.error(t(json.description))\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n        // end of get Combined Equipments by root Space ID\r\n      } else {\r\n        toast.error(t(json.description));\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const sliderSettings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  const [selectedStrategName, setSelectedStrategName] = useState(\"\");\r\n  // const [selectedStrategName, setSelectedStrategName] = useState(undefined);\r\n  // const [selectedStrategyID, setSelectedStrategyID] = useState(undefined);\r\n  const [selectedStrategyID, setSelectedStrategyID] = useState(\"\");\r\n\r\n  let onSpaceStrategyChange = (value, selectedOptions) => {\r\n    setSelectedStrategName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedStrategyID(value[value.length - 1]);\r\n\r\n    onSpaceCascaderChange(value, selectedOptions)\r\n  }\r\n\r\n  //--------------------\r\n  const [selectedMonthName, setSelectedMonthName] = useState(\"\");\r\n  // const [selectedMonthName, setSelectedMonthName] = useState(undefined);\r\n  // const [selectedMonthID, setSelectedMonthID] = useState(undefined);\r\n  const [selectedMonthID, setSelectedMonthID] = useState(\"\");\r\n\r\n  let onSpaceMonthChange = (value, selectedOptions) => {\r\n    setSelectedMonthName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedMonthID(value[value.length - 1]);\r\n\r\n    onSpaceCascaderChange(value, selectedOptions)\r\n  }\r\n  //--------------------\r\n  const [selectedStartTimeName, setSelectedStartTimeName] = useState(\"\");\r\n  // const [selectedStartTimeName, setSelectedStartTimeName] = useState(undefined);\r\n  // const [selectedStartTimeID, setSelectedStartTimeID] = useState(undefined);\r\n  const [selectedStartTimeID, setSelectedStartTimeID] = useState(\"\");\r\n\r\n  let onSpaceStartTimeChange = (value, selectedOptions) => {\r\n    setSelectedStartTimeName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedStartTimeID(value[value.length - 1]);\r\n\r\n    onSpaceCascaderChange(value, selectedOptions)\r\n  }\r\n  //--------------------\r\n  const [selectedEndTimeName, setSelectedEndTimeName] = useState(\"\");\r\n  // const [selectedEndTimeName, setSelectedEndTimeName] = useState(undefined);\r\n  // const [selectedEndTimeID, setSelectedEndTimeID] = useState(undefined);\r\n  const [selectedEndTimeID, setSelectedEndTimeID] = useState(\"\");\r\n\r\n\r\n  let onSpaceEndTimeChange = (value, selectedOptions) => {\r\n    setSelectedEndTimeName(selectedOptions.map(o => o.label).join('/'));\r\n    setSelectedEndTimeID(value[value.length - 1]);\r\n\r\n    onSpaceCascaderChange(value, selectedOptions)\r\n  }\r\n  //--------------------\r\n  const [selectedPowerName, setSelectedPowerName] = useState(\"\");\r\n  // const [selectedPowerName, setSelectedPowerName] = useState(undefined);\r\n  // const [selectedPowerID, setSelectedPowerID] = useState(undefined);\r\n  const [selectedPowerID, setSelectedPowerID] = useState(\"\");\r\n\r\n  //--------------------\r\n  let onSpaceCascaderChange = (value, selectedOptions) => {\r\n    // setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\r\n    // setSelectedSpaceID(value[value.length - 1]);\r\n\r\n    // set_differ_name(value, selectedOptions)\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\r\n        console.log(json)\r\n        setCombinedEquipmentList(json[0]);\r\n        if (json[0].length > 0) {\r\n          setSelectedCombinedEquipment(json[0][0].value);\r\n          // enable submit button\r\n          setSubmitButtonDisabled(false);\r\n        } else {\r\n          setSelectedCombinedEquipment(undefined);\r\n          // disable submit button\r\n          setSubmitButtonDisabled(true);\r\n        }\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  // Hook\r\n  const { loading } = useFakeFetch(equipments);\r\n\r\n  const [toDoList, setToDoList] = useState([]);\r\n\r\n  const [updateId, setUpdateId] = useState(0);\r\n  \r\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(toDoList, 4);\r\n  // const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(equipmentIds, 4);\r\n  const { onChangePage } = paginationHandler;\r\n  const {  page, total, itemsPerPage, from, to } = paginationMeta;\r\n  const { perPage } = paginationHandler;\r\n\r\n  const isList = true;\r\n  const isGrid = false;\r\n\r\n  // useEffect(() => {\r\n  //   setEquipmentIds(equipments.map(equipment => equipment.id));\r\n  // }, []);\r\n\r\n  // Handler\r\n  // const handleSubmit = e => {\r\n  //   e.preventDefault();\r\n  //   console.log('handleSubmit');\r\n  //   console.log(selectedSpaceID);\r\n  //   console.log(selectedCombinedEquipment);\r\n  //   // // disable submit button\r\n  //   // setSubmitButtonDisabled(true);\r\n  //   // // show spinner\r\n  //   // setSpinnerHidden(false);\r\n\r\n  //   // // enable submit button\r\n  //   // setSubmitButtonDisabled(false);\r\n  //   // // hide spinner\r\n  //   // setSpinnerHidden(true);\r\n\r\n  // };\r\n\r\n\r\n  // const [selectedStrategyName, setSelectedStrategyName] = useState(undefined);\r\n  // const [selectedMonthName, setSelectedMonthName] = useState(undefined);\r\n  // const [selectedStarthourName, setSelectedStarthourName] = useState(undefined);\r\n  // const [selectedStartminuteName, setSelectedStartminuteName] = useState(undefined);\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(\"http://localhost:3088/get_myems_strategy\").then((response) => {\r\n  //     setSelectedStrategyName(response.data);\r\n  // });\r\n\r\n  // },[selectedStrategyName])\r\n\r\n  // useEffect((value, selectedStrategyName) => {\r\n  //   setSelectedSpaceName(selectedStrategyName.map(o => o.content)).join('/');\r\n  // });\r\n\r\n  const options = [\r\n    {\r\n        value: '充電',\r\n        label: '充電',\r\n    },\r\n    {\r\n        value: '放電',\r\n        label: '放電',\r\n    },\r\n    {\r\n      value: '待機',\r\n      label: '待機',\r\n    },\r\n  ];\r\n  \r\n  const options_month = [\r\n    {\r\n      value: '1',\r\n      label: '1',\r\n    },\r\n    {\r\n      value: '2',\r\n      label: '2',\r\n    },\r\n    {\r\n      value: '3',\r\n      label: '3',\r\n    },\r\n    {\r\n      value: '4',\r\n      label: '4',\r\n    },\r\n    {\r\n      value: '5',\r\n      label: '5',\r\n    },\r\n    {\r\n      value: '6',\r\n      label: '6',\r\n    },\r\n    {\r\n      value: '7',\r\n      label: '7',\r\n    },\r\n    {\r\n      value: '8',\r\n      label: '8',\r\n    },\r\n    {\r\n      value: '9',\r\n      label: '9',\r\n    },\r\n    {\r\n      value: '10',\r\n      label: '10',\r\n    },\r\n    {\r\n      value: '11',\r\n      label: '11',\r\n    },\r\n    {\r\n      value: '12',\r\n      label: '12',\r\n    },\r\n  ];\r\n\r\n \r\n\r\n  // const onChange = (value) => {\r\n  //   console.log(value);\r\n  // };\r\n\r\n  //實作真實 帶入資料\r\n  \r\n  // 當按下加入按鈕_0304測試動態帶入新資料\r\n  const handleSubmit_2 = (e) => {\r\n\r\n    // 只有當 確定有值新增才執行\r\n\r\n    Swal.fire({\r\n      title: \"注意!!\",\r\n      text: \"您已確定新增!\",\r\n      icon: \"success\"\r\n    });\r\n\r\n    e.preventDefault();\r\n    if(updateId){\r\n      const updateToDo = toDoList.find((i) => i.id === updateId);\r\n      const updatedToDoList = toDoList.map((t) => \r\n        t.id === updateToDo.id ?  \r\n          {id: t.id, \r\n            selectedStrategName, \r\n            selectedMonthName, \r\n            selectedStartTimeName, \r\n            selectedEndTimeName, \r\n            selectedPowerName}\r\n        :t\r\n      );\r\n\r\n      setToDoList(updatedToDoList);\r\n      setUpdateId(0);\r\n      \r\n      setSelectedStrategName(selectedStrategName);\r\n      setSelectedMonthName(selectedMonthName);\r\n      setSelectedStartTimeName(selectedStartTimeName);\r\n      setSelectedEndTimeName(selectedEndTimeName);\r\n      setSelectedPowerName(\"\");\r\n\r\n      return;\r\n    }\r\n\r\n    if(selectedStartTimeName !== \" \"){\r\n      setToDoList([\r\n        ...toDoList,\r\n        {\r\n            // id: `${selectedStartTimeName}`,\r\n            id: toDoList.length+1,\r\n            selectedStrategName,\r\n            selectedMonthName,\r\n            selectedStartTimeName,\r\n            selectedEndTimeName,\r\n            selectedPowerName\r\n        }\r\n    ]);\r\n \r\n      setSelectedStrategName(\"\");\r\n      setSelectedMonthName(\"\");\r\n      setSelectedStartTimeName(\"\");\r\n      setSelectedEndTimeName(\"\");\r\n      setSelectedPowerName(\"\");\r\n\r\n      \r\n      allpage(page, perPage, toDoList, total, paginationHandler);\r\n\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  const allpage = (page, perPage, toDoList, total, paginationHandler) => {\r\n    const startIndex = (page - 1) * perPage;\r\n    const endIndex = startIndex + perPage;\r\n  \r\n    // 從 toDoList 中截取相應的資料\r\n    const paginatedData = toDoList.slice(startIndex, endIndex);    \r\n\r\n    // 更新 paginationData\r\n    paginationHandler.onChangePage(page, paginatedData, total);\r\n  }\r\n\r\n  const handleUpdate = (id) => {\r\n    const updateToDo = toDoList.find((i) => i.id === id);\r\n    \r\n    setUpdateId(id);\r\n    setSelectedStrategName(updateToDo.selectedStrategName);\r\n    setSelectedMonthName(updateToDo.selectedMonthName);\r\n    setSelectedStartTimeName(updateToDo.selectedStartTimeName);        \r\n    setSelectedEndTimeName(updateToDo.selectedEndTimeName);\r\n    setSelectedPowerName(updateToDo.selectedPowerName);\r\n  };\r\n\r\n\r\n  const reverse = () => {\r\n    setToDoList([...toDoList.reverse()]);\r\n  }\r\n\r\n  const confirm_submit = () => {\r\n    toDoList.forEach((val) => {\r\n      // 解析選定的開始時間字符串，假設它的格式是 \"12時30分\"\r\n      \r\n\r\n      if( val.selectedStartTimeName && val.selectedEndTimeName) {\r\n        const [hourStr, minuteStr] = val.selectedStartTimeName.split('時');\r\n        const  startTimeHour = parseInt(hourStr, 10); // 小時部分\r\n        const startTimeMinute = parseInt(val.selectedStartTimeName.split('/')[1].split('分')[0], 10); // 分鐘部分\r\n\r\n        const [end_hourStr, end_minuteStr] = val.selectedEndTimeName.split('時');\r\n        const endTimeHour = parseInt(end_hourStr, 10); // 小時部分\r\n        const endTimeMinute = parseInt(val.selectedEndTimeName.split('/')[1].split('分')[0], 10); // 分鐘部分\r\n\r\n\r\n        axios.post(\"http://localhost:3088/write_addData\", {\r\n        startTimeHour,\r\n        startTimeMinute,\r\n        endTimeHour,\r\n        endTimeMinute\r\n      }).then(() => {\r\n        // 請求成功處理\r\n      }).catch((error) => {\r\n        // 請求失敗處理\r\n        console.error(\"Error:\", error);\r\n      });\r\n      }\r\n\r\n      // 發送 POST 請求到後端\r\n      \r\n    });\r\n    // toDoList.map((val, key) => {\r\n    //   axios.post(\"http://localhost:3088/write_addData\", {\r\n    //     startTimeHour: val.startTimeHour,\r\n    //     startTimeMinute: val.startTimeMinute,\r\n    //     endTimeHour: val.endTimeHour,\r\n    //     endTimeMinute: val.endTimeMinute\r\n    //   }).then(() => {\r\n       \r\n    //   });\r\n    // })\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const deleteToDo = toDoList.filter((to) => to.id !== id);\r\n    // 最後狀態需要更新回傳，將刪除傳遞給array\r\n    // ...為擴展運算符號\r\n\r\n    setToDoList([...deleteToDo]);\r\n  };\r\n\r\n  \r\n\r\n\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  let table = createRef();\r\n\r\n  // const onSelect = () => {\r\n  //   setImmediate(() => {\r\n  //     setIsSelected(!!table.current.selectionContext.selected.length);\r\n  //   });\r\n  // };\r\n\r\n  const actionFormatter = (dataField, { id }) => (\r\n    // Control your row with this id\r\n    <UncontrolledDropdown>\r\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\r\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\r\n      </DropdownToggle>\r\n      <DropdownMenu right className=\"border py-2\">\r\n        <DropdownItem onClick={() => handleUpdate(id)} className=\"text-info\">{('更新')}</DropdownItem>\r\n        <DropdownItem onClick={() => handleDelete(id)} className=\"text-danger\">{('刪除')}</DropdownItem>\r\n        \r\n        <DropdownItem divider />\r\n        \r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n        dataField: 'selectedStrategName',\r\n        text: '策略',\r\n        classes: 'py-2 align-middle'\r\n    }, \r\n    {\r\n        dataField: 'selectedMonthName',\r\n        text: '月',\r\n        classes: 'py-2 align-middle'\r\n    }, \r\n    {\r\n        dataField: 'selectedStartTimeName',\r\n        text: '開始',\r\n        classes: 'py-2 align-middle'\r\n    },\r\n    {\r\n        dataField: 'selectedEndTimeName',\r\n        text: '結束',\r\n        classes: 'py-2 align-middle'\r\n    },\r\n    {\r\n        dataField: 'selectedPowerName',\r\n        text: '功率',\r\n        classes: 'py-2 align-middle'\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      classes: 'py-2 align-middle',\r\n      formatter:actionFormatter\r\n    }\r\n  ];\r\n\r\n\r\n  const confirm = () => {\r\n    if(window.confirm('請問，確定要執行送出?')){\r\n      confirm_submit();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Breadcrumb>\r\n          {/* <BreadcrumbItem>{t('Monitoring')}</BreadcrumbItem><BreadcrumbItem active>{t('Combined Equipments')}</BreadcrumbItem> */}\r\n          <BreadcrumbItem>{('PCS')}</BreadcrumbItem><BreadcrumbItem active>{('排程')}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n       {/* 提交 空間 組合設備 */}\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form>\r\n          {/* <Form onSubmit={handleSubmit}> */}\r\n            <Row form>\r\n\r\n\r\n              {/* <Col xs={6} sm={3}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {t('Space')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col> */}\r\n              \r\n              {/* <Cascader_test\r\n                options={options}\r\n                onChange\r\n              ></Cascader_test> */}\r\n              <Col xs={3} sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {('策略')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={options}\r\n                    onChange={onSpaceStrategyChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedStrategName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={3} sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {('月')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={options_month}\r\n                    onChange={onSpaceMonthChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedMonthName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs={3} sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {('開始')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={option_time}\r\n                    onChange={onSpaceStartTimeChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedStartTimeName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              {/* <Col xs={3} sm={1}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                  {('開始(分)')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col> */}\r\n              <Col xs={3} sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                    {('結束')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={option_time}\r\n                    onChange={onSpaceEndTimeChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedEndTimeName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col>\r\n              {/* <Col xs={3} sm={1}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                  {('結束(分)')}\r\n                  </Label>\r\n                  <br />\r\n                  <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader>\r\n                </FormGroup>\r\n              </Col> */}\r\n              <Col xs={3} sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"space\">\r\n                  {('功率')}\r\n                  </Label>\r\n                  <br />\r\n                  <Input\r\n                    className=''\r\n                    type='text'\r\n                    value={selectedPowerName}\r\n                    onChange={(e) => setSelectedPowerName(e.target.value)}\r\n                  />\r\n\r\n                  {/* <Cascader options={cascaderOptions}\r\n                    onChange={onSpaceCascaderChange}\r\n                    changeOnSelect\r\n                    expandTrigger=\"hover\">\r\n                    <Input value={selectedSpaceName || ''} readOnly />\r\n                  </Cascader> */}\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              {/* 這個應該是  組合設備 的選項欄位 */}\r\n              {/* <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\r\n                    {t('Combined Equipment')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\r\n                  >\r\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\r\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\r\n                        {combinedEquipment.label}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col> */}\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    {/* <Button color=\"info\" disabled={submitButtonDisabled} onClick={handleSubmit_2}>{('新增')}</Button> */}\r\n                    <Button color=\"info\"  onClick={handleSubmit_2}>{('新增')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              {/* <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col> */}\r\n              {/* <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"danger\" disabled={submitButtonDisabled} >{('刪除')}</Button>\r\n                    <Button color=\"danger\" onClick={handleDelete()} >{('刪除')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col> */}\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"secondary\"  onClick={reverse}>{('反置')}</Button>\r\n                    {/* <Button color=\"secondary\"  onClick={reverse}>{('送出')}</Button> */}\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"secondary\"  onClick={confirm}>{('送出')}</Button>\r\n                    {/* <Button color=\"secondary\"  onClick={reverse}>{('送出')}</Button> */}\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      {/* 測試bootstrap card */}\r\n      {/* <Boot_table/> */}\r\n      {/* <Scrollbar style={{ width: \"1500px\", height: \"550px\"}}> */}\r\n      {/* </Scrollbar> */}\r\n\r\n      {/* 0305下午 測試換頁無法根據點選所改變 */}\r\n      {/* <BootstrapTable \r\n        keyField='id' \r\n        data={ toDoList } \r\n        columns={ columns } \r\n        classes='mb-3'\r\n        // classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap custom-margin\"\r\n        rowClasses=\"btn-reveal-trigger\"\r\n        headerClasses=\"bg-200 text-900\"\r\n        /> */}\r\n        \r\n        <BootstrapTable \r\n          keyField='id' \r\n          // data={ toDoList }\r\n          data={ paginationData } \r\n          columns={ columns } \r\n          \r\n          classes='mb-2 table-striped'\r\n          // classes='mb-4 table-dashboard table-striped'\r\n          // classes=\"table-dashboard table-striped table-sm fs--1  mb-3 table-dashboard-th-nowrap\"\r\n          \r\n          // classes=\"table-dashboard table-striped table-sm fs--1  mb-0 table-dashboard-th-nowrap\"\r\n          // classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap custom-margin\"\r\n          rowClasses=\"btn-reveal-trigger\"\r\n          headerClasses=\"bg-200 text-900\"\r\n        />\r\n\r\n\r\n      {/* 如何在這一頁  帶出排程資料 */}\r\n      <Card className=\"mb-5\">\r\n        {/* <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n              \r\n              <div>\r\n                <Row>\r\n                  <Col xs={12}  className={classNames('p-3')}>\r\n                    <div className=\"p-1 container-rectangle\">\r\n                        <p className='container-rectangle-in'>\r\n                              這是運行\r\n                        </p>\r\n                        <p>\r\n                              todo\r\n                        </p>\r\n                        <p>\r\n                              month\r\n                        </p>\r\n                        <p>\r\n                              starthour\r\n                        </p>\r\n                        <p>\r\n                              startminute\r\n                        </p>\r\n                        <p>\r\n                              endhour\r\n                        </p>\r\n                        <p>\r\n                              endminute\r\n                        </p>\r\n                        <p>\r\n                              power\r\n                        </p>\r\n                    </div>\r\n                   \r\n                  </Col>\r\n                </Row>\r\n                <Row noGutters={isList}>\r\n                  {isIterableArray(equipments) &&\r\n                    equipments\r\n                      .filter(equipment => paginationData.includes(equipment.id))\r\n                      .map((equipment, index) => <EquipmentList {...equipment} sliderSettings={sliderSettings} key={equipment.id} index={index} />)}\r\n                </Row>\r\n              </div>\r\n\r\n            )}\r\n        </CardBody> */}\r\n          \r\n        {/* 換頁 */}\r\n        <EquipmentFooter meta={paginationMeta} handler={paginationHandler} />\r\n      </Card>\r\n\r\n      {/* 每頁顯示 數量 */}\r\n      <Card className=\"mb-2\">\r\n        <CardBody>\r\n          <Row className=\"justify-content-between align-items-center\">\r\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\r\n              <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {('顯示數量')}\r\n              </h6>\r\n              <CustomInput\r\n                id=\"itemsPerPage\"\r\n                type=\"select\"\r\n                bsSize=\"sm\"\r\n                value={itemsPerPage}\r\n                onChange={({ target }) => perPage(Number(target.value))}\r\n              >\r\n                <option value={2}>2</option>\r\n                <option value={4}>4</option>\r\n                <option value={6}>6</option>\r\n                <option value={total}>{t('All')}</option>\r\n              </CustomInput>\r\n              {/* <h6 className=\"mb-0 text-nowrap ml-2\">\r\n                {t('FROM - TO of TOTAL Equipments', { 'FROM': from, 'TO': to, 'TOTAL': total })}\r\n              </h6> */}\r\n            </Col>\r\n\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {/* <Row> */}\r\n        {/* <Col xs=\"auto\"> */}\r\n          <New_material_crud/>\r\n        {/* </Col>\r\n        <Col xs=\"auto\"> */}\r\n          {/* <Materialtable/> */}\r\n        {/* </Col>\r\n      </Row> */}\r\n      \r\n      {/* <ShowTable/> */}\r\n      {/* <ShowTable>\r\n\r\n      </ShowTable> */}\r\n      \r\n      {/* 0304先把假資料 消去  */}\r\n      {/* <Boot_table/> */}\r\n      \r\n      {/* {\r\n        toDoList.map((t) => (\r\n            <span className='toDoText' key={t.id}>\r\n              <span className='space-col'>{t.selectedStrategName}</span>\r\n              <span className='space-col'>{t.selectedMonthName}</span>\r\n              <span className='space-col'>{t.selectedStartTimeName}</span>\r\n              <span className='space-col'>{t.selectedEndTimeName}</span>\r\n              <span className='space-col'>{t.selectedPowerName}</span>\r\n            </span>\r\n        ))\r\n      } */}\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(CombinedEquipments));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Calendar = ({ month, day }) => (\r\n  <div className=\"calendar\">\r\n    <span className=\"calendar-month\">{month}</span>\r\n    <span className=\"calendar-day\">{day}</span>\r\n  </div>\r\n);\r\n\r\nCalendar.propTypes = {\r\n  month: PropTypes.string.isRequired,\r\n  day: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Media } from 'reactstrap';\r\nimport Calendar from '../../common/Calendar';\r\n\r\nconst ReportBadge = ({ text, ...rest }) => <Badge {...rest}>{text}</Badge>;\r\n\r\nReportBadge.propTypes = {\r\n  ...Badge.propTypes,\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nconst handleExport = (fileName, fileBytesBase64) => e => {\r\n  e.preventDefault();\r\n  const mimeType = 'application/*';\r\n  var fileUrl = 'data:' + mimeType + ';base64,' + fileBytesBase64;\r\n  fetch(fileUrl)\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      var link = window.document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n      link.download = fileName;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    });\r\n};\r\n\r\nconst Summary = ({ calendar, title, badge, divider, to, children, file_bytes_base64 }) => (\r\n  <Media>\r\n    <Calendar {...calendar} />\r\n    <Media body className=\"position-relative pl-3\">\r\n      <h6 className=\"fs-0 mb-0\">\r\n        <Link to={to} onClick={handleExport(title, file_bytes_base64)}>\r\n          {title}\r\n        </Link>\r\n        {badge && <ReportBadge {...badge} className=\"ml-1\" />}\r\n      </h6>\r\n      {children}\r\n\r\n      {divider && <hr className=\"border-dashed border-bottom-0\" />}\r\n    </Media>\r\n  </Media>\r\n);\r\n\r\nSummary.propTypes = {\r\n  calendar: PropTypes.shape(Calendar.propTypes).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  divider: PropTypes.bool,\r\n  to: PropTypes.string.isRequired,\r\n  badge: PropTypes.shape(ReportBadge.propTypes),\r\n  children: PropTypes.node,\r\n  file_bytes_base64: PropTypes.string.isRequired\r\n};\r\n\r\nSummary.defaultProps = { divider: true };\r\n\r\nexport default Summary;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Alert, Row, Col, Card, CardBody, Button, ButtonGroup, Form, FormGroup, Label, Spinner } from 'reactstrap';\r\nimport Summary from './Summary';\r\nimport FalconCardHeader from '../../common/FalconCardHeader';\r\nimport moment from 'moment';\r\nimport createMarkup from '../../../helpers/createMarkup';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { APIBaseURL, settings } from '../../../config';\r\nimport DateRangePickerWrapper from '../common/DateRangePickerWrapper';\r\nimport { endOfDay } from 'date-fns';\r\n\r\nconst AdvacnedReporting = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token) || checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      let is_logged_in = getCookieValue('is_logged_in');\r\n      if (is_logged_in === null || !is_logged_in) {\r\n        setRedirectUrl(`/authentication/basic/login`);\r\n        setRedirect(true);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [setRedirect, setRedirectUrl]);\r\n\r\n  // State\r\n  // Query Parameters\r\n  const [reportingPeriodDateRange, setReportingPeriodDateRange] = useState([\r\n    current_moment\r\n      .clone()\r\n      .startOf('month')\r\n      .toDate(),\r\n    current_moment.toDate()\r\n  ]);\r\n  const dateRangePickerLocale = {\r\n    sunday: t('sunday'),\r\n    monday: t('monday'),\r\n    tuesday: t('tuesday'),\r\n    wednesday: t('wednesday'),\r\n    thursday: t('thursday'),\r\n    friday: t('friday'),\r\n    saturday: t('saturday'),\r\n    ok: t('ok'),\r\n    today: t('today'),\r\n    yesterday: t('yesterday'),\r\n    hours: t('hours'),\r\n    minutes: t('minutes'),\r\n    seconds: t('seconds'),\r\n    last7Days: t('last7Days'),\r\n    formattedMonthPattern: 'yyyy-MM-dd'\r\n  };\r\n  const dateRangePickerStyle = { display: 'block', zIndex: 10 };\r\n\r\n  // button\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\r\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\r\n\r\n  //Results\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  // Callback fired when value changed\r\n  let onReportingPeriodChange = DateRange => {\r\n    if (DateRange == null) {\r\n      setReportingPeriodDateRange([null, null]);\r\n      setSubmitButtonDisabled(true);\r\n    } else {\r\n      if (moment(DateRange[1]).format('HH:mm:ss') === '00:00:00') {\r\n        // if the user did not change time value, set the default time to the end of day\r\n        DateRange[1] = endOfDay(DateRange[1]);\r\n      }\r\n      setReportingPeriodDateRange([DateRange[0], DateRange[1]]);\r\n      setSubmitButtonDisabled(false);\r\n    }\r\n  };\r\n\r\n  // Callback fired when value clean\r\n  let onReportingPeriodClean = event => {\r\n    setReportingPeriodDateRange([null, null]);\r\n  };\r\n\r\n  // Handler\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss'));\r\n    console.log(moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n\r\n    let isResponseOK = false;\r\n    fetch(\r\n      APIBaseURL +\r\n        '/reports/advancedreports?' +\r\n        'reportingperiodstartdatetime=' +\r\n        moment(reportingPeriodDateRange[0]).format('YYYY-MM-DDTHH:mm:ss') +\r\n        '&reportingperiodenddatetime=' +\r\n        moment(reportingPeriodDateRange[1]).format('YYYY-MM-DDTHH:mm:ss'),\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'User-UUID': getCookieValue('user_uuid'),\r\n          Token: getCookieValue('token')\r\n        },\r\n        body: null\r\n      }\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          isResponseOK = true;\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        if (isResponseOK) {\r\n          console.log(json);\r\n          let reportList = [];\r\n\r\n          if (json.length > 0) {\r\n            json.forEach((currentValue, index) => {\r\n              let report = {};\r\n              report['id'] = json[index]['id'];\r\n              report['calendar'] = {\r\n                month: json[index]['create_datetime_local'].substring(5, 7),\r\n                day: json[index]['create_datetime_local'].substring(8, 10)\r\n              };\r\n              report['title'] = json[index]['file_name'] + '.' + json[index]['file_type'];\r\n              report['additional'] =\r\n                t('Created Datetime') +\r\n                ': ' +\r\n                json[index]['create_datetime_local'] +\r\n                '<br/>' +\r\n                t('File Size') +\r\n                ': ' +\r\n                (json[index]['file_size_bytes'] / (1024 * 1024)).toFixed(2) +\r\n                ' MB';\r\n              report['to'] = '#';\r\n              report['file_bytes_base64'] = json[index]['file_bytes_base64'];\r\n              reportList.push(report);\r\n            });\r\n          }\r\n\r\n          setReports(reportList);\r\n\r\n          // enable submit button\r\n          setSubmitButtonDisabled(false);\r\n          // hide spinner\r\n          setSpinnerHidden(true);\r\n        } else {\r\n          toast.error(t(json.description));\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col xs=\"auto\">\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"reportingPeriodDateRangePicker\">\r\n                    {t('Reporting Period')}\r\n                  </Label>\r\n                  <br />\r\n                  <DateRangePickerWrapper\r\n                    id=\"reportingPeriodDateRangePicker\"\r\n                    format=\"yyyy-MM-dd HH:mm:ss\"\r\n                    value={reportingPeriodDateRange}\r\n                    onChange={onReportingPeriodChange}\r\n                    size=\"md\"\r\n                    style={dateRangePickerStyle}\r\n                    onClean={onReportingPeriodClean}\r\n                    locale={dateRangePickerLocale}\r\n                    placeholder={t('Select Date Range')}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled}>\r\n                      {t('Submit')}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <FalconCardHeader title={t('Advanced Reporting')} titleClass=\"text-lightSlateGray mb-0\" />\r\n        <CardBody className=\"fs--1\">\r\n          {isIterableArray(reports) ? (\r\n            <Row>\r\n              {reports.map(({ additional, ...rest }, index) => (\r\n                <Col md={6} className=\"h-100\" key={index}>\r\n                  <Summary divider={reports.length !== index + 1} {...rest}>\r\n                    <p className=\"text-1000 mb-0\" dangerouslySetInnerHTML={createMarkup(additional)} />\r\n                  </Summary>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          ) : (\r\n            <Alert color=\"info\" className=\"mb-0\">\r\n              {t('No data found')}\r\n            </Alert>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(AdvacnedReporting));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Media } from 'reactstrap';\r\nimport Calendar from '../../common/Calendar';\r\n\r\nconst ReportBadge = ({ text, ...rest }) => <Badge {...rest}>{text}</Badge>;\r\n\r\nReportBadge.propTypes = {\r\n  ...Badge.propTypes,\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nconst handleExport = (fileName, fileBytesBase64) => e => {\r\n  e.preventDefault();\r\n  const mimeType = 'application/*';\r\n  var fileUrl = 'data:' + mimeType + ';base64,' + fileBytesBase64;\r\n  fetch(fileUrl)\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      var link = window.document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob, { type: mimeType });\r\n      link.download = fileName;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    });\r\n};\r\n\r\nconst Summary = ({ calendar, title, badge, divider, to, children, file_bytes_base64 }) => (\r\n  <Media>\r\n    <Calendar {...calendar} />\r\n    <Media body className=\"position-relative pl-3\">\r\n      <h6 className=\"fs-0 mb-0\">\r\n        <Link to={to} onClick={handleExport(title, file_bytes_base64)}>\r\n          {title}\r\n        </Link>\r\n        {badge && <ReportBadge {...badge} className=\"ml-1\" />}\r\n      </h6>\r\n      {children}\r\n\r\n      {divider && <hr className=\"border-dashed border-bottom-0\" />}\r\n    </Media>\r\n  </Media>\r\n);\r\n\r\nSummary.propTypes = {\r\n  calendar: PropTypes.shape(Calendar.propTypes).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  divider: PropTypes.bool,\r\n  to: PropTypes.string.isRequired,\r\n  badge: PropTypes.shape(ReportBadge.propTypes),\r\n  children: PropTypes.node,\r\n  file_bytes_base64: PropTypes.string.isRequired\r\n};\r\n\r\nSummary.defaultProps = { divider: true };\r\n\r\nexport default Summary;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Alert, Card, CardBody, Col, Row, Spinner } from 'reactstrap';\r\nimport Summary from './Summary';\r\nimport FalconCardHeader from '../../common/FalconCardHeader';\r\nimport createMarkup from '../../../helpers/createMarkup';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { APIBaseURL, settings } from '../../../config';\r\n\r\nconst KnowledgeBase = ({ setRedirect, setRedirectUrl, t }) => {\r\n  const [fetchSuccess, setFetchSuccess] = useState(false);\r\n\r\n  //Results\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (is_logged_in === null || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n\r\n      let isResponseOK = false;\r\n      if (!fetchSuccess) {\r\n        fetch(APIBaseURL + '/knowledgefiles', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null\r\n        })\r\n          .then(response => {\r\n            if (response.ok) {\r\n              isResponseOK = true;\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(json => {\r\n            if (isResponseOK) {\r\n              console.log(json);\r\n              setFetchSuccess(true);\r\n              let reportList = [];\r\n              if (json.length > 0) {\r\n                json.forEach((currentValue, index) => {\r\n                  let report = {};\r\n                  report['id'] = json[index]['id'];\r\n                  report['calendar'] = {\r\n                    month: json[index]['upload_datetime'].substring(5, 7),\r\n                    day: json[index]['upload_datetime'].substring(8, 10)\r\n                  };\r\n                  report['title'] = json[index]['file_name'];\r\n                  report['additional'] =\r\n                    t('Created Datetime') +\r\n                    ': ' +\r\n                    json[index]['upload_datetime'] +\r\n                    '<br/>' +\r\n                    t('File Size') +\r\n                    ': ' +\r\n                    (json[index]['file_size_bytes'] / (1024 * 1024)).toFixed(2) +\r\n                    ' MB';\r\n                  report['to'] = '#';\r\n                  report['file_bytes_base64'] = json[index]['file_bytes_base64'];\r\n                  reportList.push(report);\r\n                });\r\n              }\r\n              setReports(reportList);\r\n              setSpinnerHidden(true);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card>\r\n      <FalconCardHeader title={t('Knowledge Base')} titleClass=\"text-lightSlateGray mb-0\" />\r\n      <CardBody className=\"fs--1\">\r\n        <Spinner color=\"primary\" hidden={spinnerHidden} />\r\n        {isIterableArray(reports) ? (\r\n          <Row>\r\n            {reports.map(({ additional, ...rest }, index) => (\r\n              <Col md={6} className=\"h-100\" key={index}>\r\n                <Summary divider={reports.length !== index + 1} {...rest}>\r\n                  <p className=\"text-1000 mb-0\" dangerouslySetInnerHTML={createMarkup(additional)} />\r\n                </Summary>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <Alert color=\"info\" className=\"mb-0\">\r\n            {t('No data found')}\r\n          </Alert>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(KnowledgeBase));\r\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  InputGroup,\r\n  UncontrolledDropdown,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport ButtonIcon from '../../common/ButtonIcon';\r\nimport { Link } from 'react-router-dom';\r\nimport Badge from 'reactstrap/es/Badge';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FalconCardHeader from '../../common/FalconCardHeader';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { getPaginationArray } from '../../../helpers/utils';\r\nimport { getCookieValue, createCookie, checkEmpty } from '../../../helpers/utils';\r\nimport Datetime from 'react-datetime';\r\nimport withRedirect from '../../../hoc/withRedirect';\r\nimport { withTranslation } from 'react-i18next';\r\nimport moment from 'moment';\r\nimport { APIBaseURL, settings } from '../../../config';\r\n\r\n\r\n\r\n\r\nconst Notification = ({ setRedirect, setRedirectUrl, t }) => {\r\n  let current_moment = moment();\r\n  const [startDatetime, setStartDatetime] = useState(current_moment.clone().subtract(6, 'months'));\r\n  const [endDatetime, setEndDatetime] = useState(current_moment);\r\n  const [status, setStatus] = useState('all');\r\n  const [priority, setPriority] = useState('all');\r\n\r\n  const [fetchSuccess, setFetchSuccess] = useState(false);\r\n  //Results\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\r\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\r\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let is_logged_in = getCookieValue('is_logged_in');\r\n    let user_name = getCookieValue('user_name');\r\n    let user_display_name = getCookieValue('user_display_name');\r\n    let user_uuid = getCookieValue('user_uuid');\r\n    let token = getCookieValue('token');\r\n    if (checkEmpty(is_logged_in) || checkEmpty(token)|| checkEmpty(user_uuid) || !is_logged_in) {\r\n      setRedirectUrl(`/authentication/basic/login`);\r\n      setRedirect(true);\r\n    } else {\r\n      //update expires time of cookies\r\n      createCookie('is_logged_in', true, settings.cookieExpireTime);\r\n      createCookie('user_name', user_name, settings.cookieExpireTime);\r\n      createCookie('user_display_name', user_display_name, settings.cookieExpireTime);\r\n      createCookie('user_uuid', user_uuid, settings.cookieExpireTime);\r\n      createCookie('token', token, settings.cookieExpireTime);\r\n\r\n      let isResponseOK = false;\r\n      if (!fetchSuccess) {\r\n        fetch(APIBaseURL + '/webmessages?' +\r\n            'startdatetime=' + startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n            '&enddatetime=' + endDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n            '&priority=' + priority +\r\n            '&status=' + status,  {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            setFetchSuccess(true);\r\n\r\n            let notificationList = []\r\n\r\n            if (json.length > 0) {\r\n              json.forEach((currentValue, index) => {\r\n                let notification = {}\r\n                notification['id'] = json[index]['id'];\r\n                notification['subject'] = json[index]['subject'];\r\n                notification['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                    .format(\"YYYY-MM-DD HH:mm:ss\");\r\n                notification['message'] = json[index]['message'];\r\n                notification['status'] = json[index]['status'];\r\n                notification['url'] = json[index]['url'];\r\n\r\n                notificationList.push(notification);\r\n              });\r\n            }\r\n\r\n            setNotifications(notificationList);\r\n            setSpinnerHidden(true);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, );\r\n  // State\r\n  let table = createRef();\r\n\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('handleSubmit');\r\n    console.log(startDatetime.format('YYYY-MM-DDTHH:mm:ss'));\r\n    console.log(endDatetime.format('YYYY-MM-DDTHH:mm:ss'));\r\n    console.log(priority)\r\n    console.log(status)\r\n\r\n    // disable submit button\r\n    setSubmitButtonDisabled(true);\r\n    // show spinner\r\n    setSpinnerHidden(false);\r\n    // hide export button\r\n    setExportButtonHidden(true)\r\n\r\n    // Reinitialize tables\r\n    setNotifications([]);\r\n\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/webmessages?' +\r\n      'startdatetime=' + startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&enddatetime=' + endDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&priority=' + priority +\r\n      '&status=' + status, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      // enable submit button\r\n      setSubmitButtonDisabled(false);\r\n      // hide spinner\r\n      setSpinnerHidden(true);\r\n      // show export button\r\n      setExportButtonHidden(false)\r\n\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        setFetchSuccess(true);\r\n        console.log(json)\r\n        let notificationList = []\r\n\r\n        if (json.length > 0) {\r\n          json.forEach((currentValue, index) => {\r\n            let notification = {}\r\n            notification['id'] = currentValue['id'];\r\n            notification['subject'] = currentValue['subject'];\r\n            notification['created_datetime'] = moment(parseInt(currentValue['created_datetime']))\r\n                .format(\"YYYY-MM-DD HH:mm:ss\");\r\n            notification['message'] = currentValue['message'];\r\n            notification['status'] = currentValue['status'];\r\n            notification['url'] = currentValue['url'];\r\n\r\n            notificationList.push(notification);\r\n          });\r\n        }\r\n\r\n        setNotifications(notificationList);\r\n        setSpinnerHidden(true);\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleNextPage = ({ page, onPageChange }) => () => {\r\n    onPageChange(page + 1);\r\n  };\r\n\r\n  const handlePrevPage = ({ page, onPageChange }) => () => {\r\n    onPageChange(page - 1);\r\n  };\r\n\r\n  const onSelect = () => {\r\n    setImmediate(() => {\r\n      setIsSelected(!!table.current.selectionContext.selected.length);\r\n    });\r\n  };\r\n\r\n  let onStartDatetimeChange = (newDateTime) => {\r\n    setStartDatetime(newDateTime);\r\n  }\r\n\r\n  let onEndDatetimeChange = (newDateTime) => {\r\n    setEndDatetime(newDateTime);\r\n  }\r\n\r\n  var getStartDatetime = function (currentDate) {\r\n    return currentDate.isBefore(moment(endDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\r\n  }\r\n\r\n  var getEndDatetime = function (currentDate) {\r\n    return currentDate.isAfter(moment(startDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\r\n  }\r\n\r\n  const subjectFormatter = (dataField, { url }) => (\r\n    <Fragment>\r\n      <span>{dataField}</span>\r\n    </Fragment>\r\n  );\r\n\r\n  const messageFormatter = (dataField,) => (\r\n    <Fragment>\r\n      {dataField}\r\n    </Fragment>\r\n  );\r\n\r\n  const statusFormatter = status => {\r\n    let color = '';\r\n    let icon = '';\r\n    let text = '';\r\n    switch (status) {\r\n      case 'acknowledged':\r\n        color = 'success';\r\n        icon = 'envelope-open';\r\n        text = t('Notification Acknowledged');\r\n        break;\r\n      case 'read':\r\n        color = 'success';\r\n        icon = 'envelope-open';\r\n        text = t('Notification Read');\r\n        break;\r\n      default:\r\n        color = 'primary';\r\n        icon = 'envelope';\r\n        text = t('Notification Unread');\r\n    }\r\n\r\n    return (\r\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\r\n        {text}\r\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const actionFormatter = (dataField, { id }) => (\r\n    // Control your row with this id\r\n    <UncontrolledDropdown>\r\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\r\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\r\n      </DropdownToggle>\r\n      <DropdownMenu right className=\"border py-2\">\r\n        <DropdownItem onClick={() => handleRead(id)}>{t('Notification Mark As Read')}</DropdownItem>\r\n        <DropdownItem onClick={() => handleAcknowledged(id)}>{t('Notification Mark As Acknowledged')}</DropdownItem>\r\n        <DropdownItem divider />\r\n        <DropdownItem onClick={() => handledelete(id)} className=\"text-danger\">{t('Notification Delete')}</DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n\r\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'subject',\r\n      text: t('Notification Subject'),\r\n      classes: 'py-2 align-middle',\r\n      formatter: subjectFormatter,\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: 'created_datetime',\r\n      text: t('Notification Created Datetime'),\r\n      classes: 'py-2 align-middle',\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: 'message',\r\n      text: t('Notification Message'),\r\n      classes: 'py-2 align-middle',\r\n      formatter: messageFormatter,\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: 'status',\r\n      text: t('Notification Status'),\r\n      classes: 'py-2 align-middle',\r\n      formatter: statusFormatter,\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      classes: 'py-2 align-middle',\r\n      formatter: actionFormatter,\r\n      align: 'right'\r\n    }\r\n  ];\r\n\r\n  const options = {\r\n    custom: true,\r\n    sizePerPage: 10,\r\n    totalSize: notifications.length\r\n  };\r\n\r\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\r\n    <div className=\"custom-control custom-checkbox\">\r\n      <input\r\n        className=\"custom-control-input\"\r\n        {...rest}\r\n        onChange={() => { }}\r\n        ref={input => {\r\n          if (input) input.indeterminate = indeterminate;\r\n        }}\r\n      />\r\n      <label className=\"custom-control-label\" />\r\n    </div>\r\n  );\r\n\r\n  const selectRow = onSelect => ({\r\n    mode: 'checkbox',\r\n    classes: 'py-2 align-middle',\r\n    clickToSelect: false,\r\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\r\n    selectionRenderer: ({ mode, ...rest }) => {\r\n      const {rowKey, ...newRest} = rest;\r\n      return <SelectRowInput type={mode} {...newRest} />\r\n    },\r\n    onSelect: onSelect,\r\n    onSelectAll: onSelect\r\n  });\r\n\r\n  const handleRead = (id, ) => {\r\n    console.log('Mark As Read: ', id)\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/webmessages/' + id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: JSON.stringify({\r\n        \"data\": {\r\n          \"status\": 'read'\r\n        }\r\n      }),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        return null;\r\n      } else {\r\n        return response.json();\r\n      }\r\n    }).then(json => {\r\n      console.log(isResponseOK);\r\n      if (isResponseOK) {\r\n        let isResponseOK = false;\r\n        fetch(APIBaseURL + '/webmessages?' +\r\n            'startdatetime=' + startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n            '&enddatetime=' + endDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            console.log(json);\r\n            setFetchSuccess(true);\r\n\r\n            let notificationList = []\r\n\r\n            if (json.length > 0) {\r\n              json.forEach((currentValue, index) => {\r\n                let notification = {}\r\n                notification['id'] = json[index]['id'];\r\n                notification['subject'] = json[index]['subject'];\r\n                notification['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                    .format(\"YYYY-MM-DD HH:mm:ss\");\r\n                notification['message'] = json[index]['message'];\r\n                notification['status'] = json[index]['status'];\r\n                notification['url'] = json[index]['url'];\r\n\r\n                notificationList.push(notification);\r\n              });\r\n            }\r\n\r\n            setNotifications(notificationList);\r\n            setSpinnerHidden(true);\r\n          }\r\n        });\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleAcknowledged = (id, ) => {\r\n    console.log('Mark As Acknowledged: ', id)\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/webmessages/' + id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: JSON.stringify({\r\n        \"data\": {\r\n          \"status\": 'acknowledged',\r\n          \"reply\": 'OK'\r\n        }\r\n      }),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        return null;\r\n      } else {\r\n        return response.json();\r\n      }\r\n    }).then(json => {\r\n      console.log(isResponseOK);\r\n      if (isResponseOK) {\r\n        let isResponseOK = false;\r\n        fetch(APIBaseURL + '/webmessages?' +\r\n            'startdatetime=' + startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n            '&enddatetime=' + endDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            console.log(json);\r\n            setFetchSuccess(true);\r\n\r\n            let notificationList = []\r\n\r\n            if (json.length > 0) {\r\n              json.forEach((currentValue, index) => {\r\n                let notification = {}\r\n                notification['id'] = json[index]['id'];\r\n                notification['subject'] = json[index]['subject'];\r\n                notification['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                    .format(\"YYYY-MM-DD HH:mm:ss\");\r\n                notification['message'] = json[index]['message'];\r\n                notification['status'] = json[index]['status'];\r\n                notification['url'] = json[index]['url'];\r\n\r\n                notificationList.push(notification);\r\n              });\r\n            }\r\n\r\n            setNotifications(notificationList);\r\n            setSpinnerHidden(true);\r\n          }\r\n        });\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const handledelete = (id, ) => {\r\n    console.log('Delete: ', id)\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/webmessages/' + id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n        return null;\r\n      } else {\r\n        return response.json();\r\n      }\r\n    }).then(json => {\r\n      console.log(isResponseOK);\r\n      if (isResponseOK) {\r\n        let isResponseOK = false;\r\n        fetch(APIBaseURL + '/webmessages?' +\r\n            'startdatetime=' + startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n            '&enddatetime=' + endDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            'User-UUID': getCookieValue('user_uuid'),\r\n            Token: getCookieValue('token')\r\n          },\r\n          body: null,\r\n\r\n        }).then(response => {\r\n          if (response.ok) {\r\n            isResponseOK = true;\r\n          }\r\n          return response.json();\r\n        }).then(json => {\r\n          if (isResponseOK) {\r\n            console.log(json);\r\n            setFetchSuccess(true);\r\n\r\n            let notificationList = []\r\n\r\n            if (json.length > 0) {\r\n              json.forEach((currentValue, index) => {\r\n                let notification = {}\r\n                notification['id'] = json[index]['id'];\r\n                notification['subject'] = json[index]['subject'];\r\n                notification['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                    .format(\"YYYY-MM-DD HH:mm:ss\");\r\n                notification['message'] = json[index]['message'];\r\n                notification['status'] = json[index]['status'];\r\n                notification['url'] = json[index]['url'];\r\n\r\n                notificationList.push(notification);\r\n              });\r\n            }\r\n\r\n            setNotifications(notificationList);\r\n            setSpinnerHidden(true);\r\n          }\r\n        });\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const batchDelete = () => {\r\n    let rows = table.current.selectionContext.selected;\r\n    if(rows.length <= 0) {\r\n      toast.error(t('Select Row'));\r\n      return;\r\n    }\r\n    fetch(APIBaseURL + '/webmessagesbatch', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body:  JSON.stringify({\r\n        \"ids\": rows.join(\",\")\r\n      }),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        loadData(table);\r\n        return null;\r\n      } else {\r\n        let json = response.json();\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  const batchRead = () => {\r\n    let rows = table.current.selectionContext.selected;\r\n    if(rows.length <= 0) {\r\n      toast.error(t('Select Row'));\r\n      return;\r\n    }\r\n    fetch(APIBaseURL + '/webmessagesbatch', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: JSON.stringify({\r\n       \"ids\": rows.join(\",\")\r\n      }),\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        loadData(table);\r\n        return null;\r\n      } else {\r\n        let json = response.json();\r\n        toast.error(t(json.description))\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  const loadData = () => {\r\n    table.current.selectionContext.selected = [];\r\n    onSelect();\r\n    let isResponseOK = false;\r\n    fetch(APIBaseURL + '/webmessages?' +\r\n      'startdatetime=' + startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&enddatetime=' + endDatetime.format('YYYY-MM-DDTHH:mm:ss') +\r\n      '&priority=' + priority +\r\n      '&status=' + status, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'User-UUID': getCookieValue('user_uuid'),\r\n        Token: getCookieValue('token')\r\n      },\r\n      body: null,\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        isResponseOK = true;\r\n      }\r\n      return response.json();\r\n    }).then(json => {\r\n      if (isResponseOK) {\r\n        setFetchSuccess(true);\r\n        let notificationList = []\r\n        if (json.length > 0) {\r\n          json.forEach((currentValue, index) => {\r\n            let notification = {}\r\n            notification['id'] = json[index]['id'];\r\n            notification['subject'] = json[index]['subject'];\r\n            notification['created_datetime'] = moment(parseInt(json[index]['created_datetime']))\r\n                .format(\"YYYY-MM-DD HH:mm:ss\");\r\n            notification['message'] = json[index]['message'];\r\n            notification['status'] = json[index]['status'];\r\n            notification['url'] = json[index]['url'];\r\n\r\n            notificationList.push(notification);\r\n          });\r\n        }\r\n        setNotifications(notificationList);\r\n        setSpinnerHidden(true);\r\n      } else {\r\n        toast.error(t(json.description))\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"bg-light mb-3\">\r\n        <CardBody className=\"p-3\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row form>\r\n              <Col sm={1}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"priority\">\r\n                    {t('Notification Priority')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"bulk-select\"\r\n                    value={priority}\r\n                    onChange={({ target }) => {setPriority(target.value);}}>\r\n                    <option value=\"all\" key=\"all\" >{t('View all')}</option>\r\n                    <option value=\"LOW\" key=\"low\" >{t('Notification Low')}</option>\r\n                    <option value=\"MEDIUM\" key=\"medium\" >{t('Notification Medium')}</option>\r\n                    <option value=\"HIGH\" key=\"high\" >{t('Notification High')}</option>\r\n                    <option value=\"CRITICAL\" key=\"critical\" >{t('Notification Critical')}</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"status\">\r\n                    {t('Notification Status')}\r\n                  </Label>\r\n                  <CustomInput type=\"select\" id=\"bulk-select\"\r\n                    value={status}\r\n                    onChange={({ target }) => {setStatus(target.value);}}>\r\n                    <option value=\"all\" key=\"all\" >{t('View all')}</option>\r\n                    <option value=\"read\" key=\"read\" >{t('Notification Read')}</option>\r\n                    <option value=\"new\" key=\"unread\" >{t('notification_NEW')}</option>\r\n                    <option value=\"acknowledged\" key=\"acknowledged\" >{t('Notification Acknowledged')}</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"startDatetime\">\r\n                    {t('Reporting Period Begins')}\r\n                  </Label>\r\n                  <Datetime id='startDatetime'\r\n                    value={startDatetime}\r\n                    onChange={onStartDatetimeChange}\r\n                    isValidDate={getStartDatetime}\r\n                    closeOnSelect={true} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={2}>\r\n                <FormGroup className=\"form-group\">\r\n                  <Label className={labelClasses} for=\"endDatetime\">\r\n                    {t('Reporting Period Ends')}\r\n                  </Label>\r\n                  <Datetime id='endDatetime'\r\n                    value={endDatetime}\r\n                    onChange={onEndDatetimeChange}\r\n                    isValidDate={getEndDatetime}\r\n                    closeOnSelect={true} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <FormGroup>\r\n                  <br />\r\n                  <ButtonGroup id=\"submit\">\r\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card className=\"mb-3\">\r\n        <Spinner color=\"primary\" hidden={spinnerHidden}  />\r\n        <FalconCardHeader title={t('Notification List')} light={false} titleClass=\"text-lightSlateGray mb-0\" >\r\n          {isSelected ? (\r\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\r\n              <Button color=\"falcon-default\" onClick={() => batchRead()} size=\"sm\" className=\"ml-2\">\r\n              {t('Notification Mark As Read')}\r\n                </Button>\r\n              <Button color=\"falcon-default\" onClick={() => batchDelete()}  size=\"sm\" className=\"ml-2\">\r\n              {t('Notification Delete')}\r\n                </Button>\r\n            </InputGroup>\r\n          ) : (\r\n              <Fragment>\r\n\r\n              </Fragment>\r\n            )}\r\n        </FalconCardHeader>\r\n        <CardBody className=\"p-0\">\r\n          <PaginationProvider pagination={paginationFactory(options)}>\r\n            {({ paginationProps, paginationTableProps }) => {\r\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\r\n\r\n              return (\r\n                <Fragment>\r\n                  <div className=\"table-responsive\">\r\n                    <BootstrapTable\r\n                      ref={table}\r\n                      bootstrap4\r\n                      keyField=\"id\"\r\n                      data={notifications}\r\n                      columns={columns}\r\n                      selectRow={selectRow(onSelect)}\r\n                      bordered={false}\r\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\r\n                      rowClasses=\"btn-reveal-trigger\"\r\n                      headerClasses=\"bg-200 text-900\"\r\n                      {...paginationTableProps}\r\n                    />\r\n                  </div>\r\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\r\n                    <Col xs=\"auto\">\r\n                      <Button\r\n                        color=\"falcon-default\"\r\n                        size=\"sm\"\r\n                        onClick={handlePrevPage(paginationProps)}\r\n                        disabled={paginationProps.page === 1}\r\n                      >\r\n                        <FontAwesomeIcon icon=\"chevron-left\" />\r\n                      </Button>\r\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\r\n                        <Button\r\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\r\n                          size=\"sm\"\r\n                          className=\"ml-2\"\r\n                          onClick={() => paginationProps.onPageChange(pageNo)}\r\n                          key={pageNo}\r\n                        >\r\n                          {pageNo}\r\n                        </Button>\r\n                      ))}\r\n                      <Button\r\n                        color=\"falcon-default\"\r\n                        size=\"sm\"\r\n                        className=\"ml-2\"\r\n                        onClick={handleNextPage(paginationProps)}\r\n                        disabled={lastIndex >= paginationProps.totalSize}\r\n                      >\r\n                        <FontAwesomeIcon icon=\"chevron-right\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Fragment>\r\n              );\r\n            }}\r\n          </PaginationProvider>\r\n        </CardBody>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(withRedirect(Notification));\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n// import Activity from '../components/page/Activity';\r\n// import Associations from '../components/page/Associations';\r\n// import Billing from '../components/page/Billing';\r\n// import CustomerDetails from '../components/page/CustomerDetails';\r\n// import EventDetail from '../components/page/EventDetail';\r\n// import EventCreate from '../components/page/EventCreate';\r\n// import Events from '../components/page/Events';\r\n// import Faq from '../components/page/Faq';\r\n// import Invoice from '../components/page/Invoice';\r\n// import InvitePeople from '../components/page/InvitePeople';\r\n// import Notifications from '../components/page/Notifications';\r\n// import People from '../components/page/People';\r\n// import Pricing from '../components/pricing/Pricing';\r\n// import PricingAlt from '../components/pricing/PricingAlt';\r\n// import Profile from '../components/profile/Profile';\r\n// import Settings from '../components/page/Settings';\r\n// import Starter from '../components/extra/Starter';\r\n// import GettingStarted from '../components/documentation/GettingStarted';\r\n// import Alerts from '../components/bootstrap-components/Alerts';\r\n// import FalconAccordions from '../components/bootstrap-components/FalconAccordions';\r\n// import Spinners from '../components/bootstrap-components/Spinners';\r\n// import Carousel from '../components/bootstrap-components/Carousel';\r\n// import Avatar from '../components/bootstrap-components/Avatar';\r\n// import Badges from '../components/bootstrap-components/Badges';\r\n// import Backgrounds from '../components/bootstrap-components/Backgrounds';\r\n// import Breadcrumbs from '../components/bootstrap-components/Breadcrumb';\r\n// import Buttons from '../components/bootstrap-components/Buttons';\r\n// import Cards from '../components/bootstrap-components/Cards';\r\n// import Collapses from '../components/bootstrap-components/Collapses';\r\n// // import Dropdowns from '../components/bootstrap-components/Dropdowns';\r\n// import Forms from '../components/bootstrap-components/Forms';\r\n// import ListGroups from '../components/bootstrap-components/ListGroups';\r\n// import Modals from '../components/bootstrap-components/Modals';\r\n// import Navs from '../components/bootstrap-components/Navs';\r\n// import Navbars from '../components/bootstrap-components/Navbars';\r\n// import PageHeaders from '../components/bootstrap-components/PageHeaders';\r\n// import Paginations from '../components/bootstrap-components/Paginations';\r\n// import Popovers from '../components/bootstrap-components/Popovers';\r\n// import ProgressBar from '../components/bootstrap-components/ProgressBar';\r\n// import Tables from '../components/bootstrap-components/Tables';\r\n// import Tooltips from '../components/bootstrap-components/Tooltips';\r\n// import NavBarTop from '../components/bootstrap-components/NavBarTop';\r\n// import VerticalNavbar from '../components/bootstrap-components/VerticalNavbar';\r\n// import Sidepanel from '../components/bootstrap-components/Sidepanel';\r\n// import CookieNotice from '../components/bootstrap-components/CookieNotice';\r\n// import Borders from '../components/utilities/Borders';\r\n// import Clearfix from '../components/utilities/Clearfix';\r\n// import CloseIcon from '../components/utilities/CloseIcon';\r\n// import Colors from '../components/utilities/Colors';\r\n// import Display from '../components/utilities/Display';\r\n// import Embed from '../components/utilities/Embed';\r\n// import Figures from '../components/utilities/Figures';\r\n// import Flex from '../components/utilities/Flex';\r\n// import Grid from '../components/utilities/Grid';\r\n// import Sizing from '../components/utilities/Sizing';\r\n// import Spacing from '../components/utilities/Spacing';\r\n// import StretchedLink from '../components/utilities/StretchedLink';\r\n// import Typography from '../components/utilities/Typography';\r\n// import VerticalAlign from '../components/utilities/VerticalAlign';\r\n// import Visibility from '../components/utilities/Visibility';\r\n// import Typed from '../components/plugins/Typed';\r\n// import ImageLightbox from '../components/plugins/ImageLightbox';\r\n// import GoogleMapExample from '../components/plugins/GoogleMap';\r\n// import Chart from '../components/plugins/Chart';\r\n// import CountUpExample from '../components/plugins/Countup';\r\n// import DatetimeExample from '../components/plugins/Datetime';\r\n// import FontAwesome from '../components/plugins/FontAwesome';\r\n// import Echarts from '../components/plugins/Echarts';\r\n// import Toastify from '../components/plugins/Toastify';\r\n// import Select from '../components/plugins/Select';\r\n// import SlickCarousel from '../components/plugins/SlickCarousel';\r\n// import ReactBootstrapTable2 from '../components/plugins/ReactBootstrapTable2';\r\n// import ReactBeautifulDnD from '../components/plugins/ReactBeautifulDnD';\r\n// import EmailDetail from '../components/email/EmailDetail';\r\n// import Inbox from '../components/email/Inbox';\r\n// import Compose from '../components/email/Compose';\r\n// import QuillEditorExample from '../components/plugins/Quill';\r\n// import BulkSelect from '../components/plugins/BulkSelect';\r\n// import ChangeLog from '../components/changelog/ChangeLog';\r\n// import ProgressBarJs from '../components/plugins/ProgressBarJs';\r\n// import Products from '../components/e-commerce/Products';\r\n// import ProductDetails from '../components/e-commerce/ProductDetails';\r\n// import ShoppingCart from '../components/e-commerce/ShoppingCart';\r\n// import FavouriteItems from '../components/e-commerce/FavouriteItems';\r\n// import Orders from '../components/e-commerce/Orders';\r\n// import OrderDetails from '../components/e-commerce/OrderDetails';\r\n// import Customers from '../components/e-commerce/Customers';\r\n// import Checkout from '../components/e-commerce/Checkout';\r\n// import Feed from '../components/feed/Feed';\r\n// import Plyr from '../components/plugins/Plyr';\r\n// import Scrollbar from '../components/plugins/Scrollbar';\r\n// import Leaflet from '../components/plugins/Leaflet';\r\n// import EchartMap from '../components/plugins/EchartMap';\r\n// import InboxProvider from '../components/email/inbox/InboxProvider';\r\n// import ReactHookFrom from '../components/plugins/ReactHookFrom';\r\n// import Lottie from '../components/plugins/Lottie';\r\n// import Dropzone from '../components/plugins/Dropzone';\r\n// import CodeHighlightDoc from '../components/plugins/CodeHighlightDoc';\r\n// import EmojiMart from '../components/plugins/EmojiMart';\r\n// import Chat from '../components/chat/Chat';\r\n// import Widgets from '../components/widgets/Widgets';\r\n// import Kanban from '../components/kanban/Kanban';\r\n// Space\r\nimport SpaceEnergyCategory from '../components/MyEMS/Space/SpaceEnergyCategory';\r\nimport SpaceEnergyItem from '../components/MyEMS/Space/SpaceEnergyItem';\r\nimport SpaceCarbon from '../components/MyEMS/Space/SpaceCarbon';\r\nimport SpaceCost from '../components/MyEMS/Space/SpaceCost';\r\nimport SpaceOutput from '../components/MyEMS/Space/SpaceOutput';\r\nimport SpaceIncome from '../components/MyEMS/Space/SpaceIncome';\r\nimport SpaceEfficiency from '../components/MyEMS/Space/SpaceEfficiency';\r\nimport SpaceLoad from '../components/MyEMS/Space/SpaceLoad';\r\nimport SpaceStatistics from '../components/MyEMS/Space/SpaceStatistics';\r\nimport SpaceSaving from '../components/MyEMS/Space/SpaceSaving';\r\nimport SpaceEnvironmentMonitor from '../components/MyEMS/Space/SpaceEnvironmentMonitor';\r\n// Equipment\r\n// import EquipmentBatch from '../components/MyEMS/Equipment/EquipmentBatch';\r\n// import EquipmentCarbon from '../components/MyEMS/Equipment/EquipmentCarbon';\r\n// import EquipmentCost from '../components/MyEMS/Equipment/EquipmentCost';\r\n// import EquipmentEfficiency from '../components/MyEMS/Equipment/EquipmentEfficiency';\r\n// import EquipmentEnergyCategory from '../components/MyEMS/Equipment/EquipmentEnergyCategory';\r\n// import EquipmentEnergyItem from '../components/MyEMS/Equipment/EquipmentEnergyItem';\r\n// import EquipmentIncome from '../components/MyEMS/Equipment/EquipmentIncome';\r\n// import EquipmentLoad from '../components/MyEMS/Equipment/EquipmentLoad';\r\n// import EquipmentOutput from '../components/MyEMS/Equipment/EquipmentOutput';\r\n// import EquipmentSaving from '../components/MyEMS/Equipment/EquipmentSaving';\r\n// import EquipmentStatistics from '../components/MyEMS/Equipment/EquipmentStatistics';\r\n// import EquipmentTracking from '../components/MyEMS/Equipment/EquipmentTracking';\r\n// Meter\r\n// import MeterBatch from '../components/MyEMS/Meter/MeterBatch';\r\n// import MeterCarbon from '../components/MyEMS/Meter/MeterCarbon';\r\n// import MeterComparison from '../components/MyEMS/Meter/MeterComparison';\r\n// import MeterCost from '../components/MyEMS/Meter/MeterCost';\r\n// import MeterEnergy from '../components/MyEMS/Meter/MeterEnergy';\r\n// import MeterRealtime from '../components/MyEMS/Meter/MeterRealtime';\r\n// import MeterSaving from '../components/MyEMS/Meter/MeterSaving';\r\n// import MeterSubmetersBalance from '../components/MyEMS/Meter/MeterSubmetersBalance';\r\n// import MeterTracking from '../components/MyEMS/Meter/MeterTracking';\r\n// import MeterTrend from '../components/MyEMS/Meter/MeterTrend';\r\n// import OfflineMeterBatch from '../components/MyEMS/Meter/OfflineMeterBatch';\r\n// import OfflineMeterCarbon from '../components/MyEMS/Meter/OfflineMeterCarbon';\r\n// import OfflineMeterCost from '../components/MyEMS/Meter/OfflineMeterCost';\r\n// import OfflineMeterEnergy from '../components/MyEMS/Meter/OfflineMeterEnergy';\r\n// import OfflineMeterSaving from '../components/MyEMS/Meter/OfflineMeterSaving';\r\n// import OfflineMeterInput from '../components/MyEMS/Meter/OfflineMeterInput';\r\n// import VirtualMeterBatch from '../components/MyEMS/Meter/VirtualMeterBatch';\r\n// import VirtualMeterCarbon from '../components/MyEMS/Meter/VirtualMeterCarbon';\r\n// import VirtualMeterCost from '../components/MyEMS/Meter/VirtualMeterCost';\r\n// import VirtualMeterEnergy from '../components/MyEMS/Meter/VirtualMeterEnergy';\r\n// import VirtualMeterSaving from '../components/MyEMS/Meter/VirtualMeterSaving';\r\n// Tenant\r\n// import TenantEnergyCategory from '../components/MyEMS/Tenant/TenantEnergyCategory';\r\n// import TenantEnergyItem from '../components/MyEMS/Tenant/TenantEnergyItem';\r\n// import TenantCarbon from '../components/MyEMS/Tenant/TenantCarbon';\r\n// import TenantCost from '../components/MyEMS/Tenant/TenantCost';\r\n// import TenantLoad from '../components/MyEMS/Tenant/TenantLoad';\r\n// import TenantStatistics from '../components/MyEMS/Tenant/TenantStatistics';\r\n// import TenantSaving from '../components/MyEMS/Tenant/TenantSaving';\r\n// import TenantBill from '../components/MyEMS/Tenant/TenantBill';\r\n// import TenantBatch from '../components/MyEMS/Tenant/TenantBatch';\r\n// Store\r\n// import StoreEnergyCategory from '../components/MyEMS/Store/StoreEnergyCategory';\r\n// import StoreEnergyItem from '../components/MyEMS/Store/StoreEnergyItem';\r\n// import StoreCarbon from '../components/MyEMS/Store/StoreCarbon';\r\n// import StoreCost from '../components/MyEMS/Store/StoreCost';\r\n// import StoreLoad from '../components/MyEMS/Store/StoreLoad';\r\n// import StoreStatistics from '../components/MyEMS/Store/StoreStatistics';\r\n// import StoreSaving from '../components/MyEMS/Store/StoreSaving';\r\n// import StoreBatch from '../components/MyEMS/Store/StoreBatch';\r\n// Shopfloor\r\n// import ShopfloorEnergyCategory from '../components/MyEMS/Shopfloor/ShopfloorEnergyCategory';\r\n// import ShopfloorEnergyItem from '../components/MyEMS/Shopfloor/ShopfloorEnergyItem';\r\n// import ShopfloorCarbon from '../components/MyEMS/Shopfloor/ShopfloorCarbon';\r\n// import ShopfloorCost from '../components/MyEMS/Shopfloor/ShopfloorCost';\r\n// import ShopfloorLoad from '../components/MyEMS/Shopfloor/ShopfloorLoad';\r\n// import ShopfloorStatistics from '../components/MyEMS/Shopfloor/ShopfloorStatistics';\r\n// import ShopfloorSaving from '../components/MyEMS/Shopfloor/ShopfloorSaving';\r\n// import ShopfloorBatch from '../components/MyEMS/Shopfloor/ShopfloorBatch';\r\n// CombinedEquipment\r\n// import CombinedEquipmentBatch from '../components/MyEMS/CombinedEquipment/CombinedEquipmentBatch';\r\n// import CombinedEquipmentCarbon from '../components/MyEMS/CombinedEquipment/CombinedEquipmentCarbon';\r\n// import CombinedEquipmentCost from '../components/MyEMS/CombinedEquipment/CombinedEquipmentCost';\r\n// import CombinedEquipmentEfficiency from '../components/MyEMS/CombinedEquipment/CombinedEquipmentEfficiency';\r\n// import CombinedEquipmentEnergyCategory from '../components/MyEMS/CombinedEquipment/CombinedEquipmentEnergyCategory';\r\n// import CombinedEquipmentEnergyItem from '../components/MyEMS/CombinedEquipment/CombinedEquipmentEnergyItem';\r\n// import CombinedEquipmentLoad from '../components/MyEMS/CombinedEquipment/CombinedEquipmentLoad';\r\n// import CombinedEquipmentIncome from '../components/MyEMS/CombinedEquipment/CombinedEquipmentIncome';\r\n// import CombinedEquipmentOutput from '../components/MyEMS/CombinedEquipment/CombinedEquipmentOutput';\r\n// import CombinedEquipmentSaving from '../components/MyEMS/CombinedEquipment/CombinedEquipmentSaving';\r\n// import CombinedEquipmentStatistics from '../components/MyEMS/CombinedEquipment/CombinedEquipmentStatistics';\r\n// Auxiliary System\r\nimport EnergyFlowDiagram from '../components/MyEMS/AuxiliarySystem/EnergyFlowDiagram';\r\nimport DistributionSystem from '../components/MyEMS/AuxiliarySystem/DistributionSystem';\r\n// Microgrid\r\nimport MicrogridList from '../components/MyEMS/Microgrid/MicrogridList';\r\nimport MicrogridDetails from '../components/MyEMS/Microgrid/MicrogridDetails';\r\nimport MicrogridReporting from '../components/MyEMS/Microgrid/MicrogridReporting';\r\n// Energy Storage Power Statioin\r\nimport EnergyStoragePowerStationList from '../components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationList';\r\nimport EnergyStoragePowerStationDetails from '../components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationDetails';\r\nimport EnergyStoragePowerStationReporting from '../components/MyEMS/EnergyStoragePowerStation/EnergyStoragePowerStationReporting';\r\n// FDD\r\nimport FDDFault from '../components/MyEMS/FDD/Fault';\r\n// Monitoring\r\nimport SpaceEquipments from '../components/MyEMS/Monitoring/SpaceEquipments';\r\nimport CombinedEquipments from '../components/MyEMS/Monitoring/CombinedEquipments';\r\n// Advanced Reporting\r\nimport AdvancedReporting from '../components/MyEMS/AdvancedReporting/AdvancedReporting';\r\n// Knowledge Base\r\nimport KnowledgeBase from '../components/MyEMS/KnowledgeBase/KnowledgeBase';\r\n// Notification\r\nimport Notification from '../components/MyEMS/Notification/Notification';\r\n\r\n// const InboxRoutes = ({ match: { url } }) => (\r\n//   <InboxProvider>\r\n//     <Switch>\r\n//       <Route path={`${url}/email-detail`} exact component={EmailDetail} />\r\n//       <Route path={`${url}/inbox`} exact component={Inbox} />\r\n//       <Route path={`${url}/compose`} exact component={Compose} />\r\n\r\n//       {/*Redirect*/}\r\n//       <Redirect to=\"/errors/404\" />\r\n//     </Switch>\r\n//   </InboxProvider>\r\n// );\r\n\r\n// const ProductRoutes = ({ match: { url } }) => (\r\n//   <Switch>\r\n//     <Route path={`${url}/products/:productLayout`} exact component={Products} />\r\n//     <Route path={`${url}/checkout`} exact component={Checkout} />\r\n//     <Route path={`${url}/product-details/:id`} exact component={ProductDetails} />\r\n//     <Route path={`${url}/product-details/`} exact component={ProductDetails} />\r\n//     <Route path={`${url}/shopping-cart`} exact component={ShoppingCart} />\r\n//     <Route path={`${url}/orders`} exact component={Orders} />\r\n//     <Route path={`${url}/order-details`} exact component={OrderDetails} />\r\n//     <Route path={`${url}/customers`} exact component={Customers} />\r\n//     <Route path={`${url}/favourite-items`} exact component={FavouriteItems} />\r\n\r\n//     {/*Redirect*/}\r\n//     <Redirect to=\"/errors/404\" />\r\n//   </Switch>\r\n// );\r\n\r\nconst MyEMSRoutes = () => (\r\n  <Switch>\r\n    {/* <Route path=\"/feed\" exact component={Feed} /> */}\r\n    {/*Pages*/}\r\n    {/* <Route path=\"/pages/activity\" exact component={Activity} />\r\n    <Route path=\"/pages/associations\" exact component={Associations} />\r\n    <Route path=\"/pages/billing\" exact component={Billing} />\r\n    <Route path=\"/pages/customer-details\" exact component={CustomerDetails} />\r\n    <Route path=\"/pages/event-detail\" exact component={EventDetail} />\r\n    <Route path=\"/pages/event-create\" exact component={EventCreate} />\r\n    <Route path=\"/pages/events\" exact component={Events} />\r\n    <Route path=\"/pages/faq\" exact component={Faq} />\r\n    <Route path=\"/pages/invoice\" exact component={Invoice} />\r\n    <Route path=\"/pages/invite-people\" exact component={InvitePeople} />\r\n    <Route path=\"/pages/notifications\" exact component={Notifications} />\r\n    <Route path=\"/pages/people\" exact component={People} />\r\n    <Route path=\"/pages/pricing\" exact component={Pricing} />\r\n    <Route path=\"/pages/pricing-alt\" exact component={PricingAlt} />\r\n    <Route path=\"/pages/profile\" exact component={Profile} />\r\n    <Route path=\"/pages/settings\" exact component={Settings} />\r\n    <Route path=\"/pages/starter\" exact component={Starter} /> */}\r\n    {/*chat*/}\r\n    {/* <Route path=\"/chat\" exact component={Chat} /> */}\r\n    {/*kanban*/}\r\n    {/* <Route path=\"/kanban\" exact component={Kanban} /> */}\r\n    {/*E commerce*/}\r\n    {/* <Route path=\"/e-commerce\" component={ProductRoutes} /> */}\r\n\r\n    {/*Email*/}\r\n    {/* <Route path=\"/email\" component={InboxRoutes} /> */}\r\n\r\n    {/*widgets*/}\r\n    {/* <Route path=\"/widgets\" component={Widgets} /> */}\r\n\r\n    {/*Documentation*/}\r\n    {/* <Route path=\"/documentation\" exact component={GettingStarted} /> */}\r\n\r\n    {/*Changelog*/}\r\n    {/* <Route path=\"/changelog\" exact component={ChangeLog} /> */}\r\n\r\n    {/*Components*/}\r\n    {/* <Route path=\"/components/alerts\" exact component={Alerts} />\r\n    <Route path=\"/components/accordions\" exact component={FalconAccordions} />\r\n    <Route path=\"/components/avatar\" exact component={Avatar} />\r\n    <Route path=\"/components/badges\" exact component={Badges} />\r\n    <Route path=\"/components/backgrounds\" exact component={Backgrounds} />\r\n    <Route path=\"/components/breadcrumb\" exact component={Breadcrumbs} />\r\n    <Route path=\"/components/buttons\" exact component={Buttons} />\r\n    <Route path=\"/components/cards\" exact component={Cards} />\r\n    <Route path=\"/components/cookie-notice\" exact component={CookieNotice} />\r\n    <Route path=\"/components/collapses\" exact component={Collapses} />\r\n    <Route path=\"/components/dropdowns\" exact component={Dropdowns} />\r\n    <Route path=\"/components/forms\" exact component={Forms} />\r\n    <Route path=\"/components/listgroups\" exact component={ListGroups} />\r\n    <Route path=\"/components/modals\" exact component={Modals} />\r\n    <Route path=\"/components/navs\" exact component={Navs} />\r\n    <Route path=\"/components/navbars\" exact component={Navbars} />\r\n    <Route path=\"/components/navbar-top\" exact component={NavBarTop} />\r\n    <Route path=\"/components/navbar-vertical\" exact component={VerticalNavbar} />\r\n    <Route path=\"/components/Sidepanel\" exact component={Sidepanel} />\r\n    <Route path=\"/components/pageheaders\" exact component={PageHeaders} />\r\n    <Route path=\"/components/paginations\" exact component={Paginations} />\r\n    <Route path=\"/components/popovers\" exact component={Popovers} />\r\n    <Route path=\"/components/progress\" exact component={ProgressBar} />\r\n    <Route path=\"/components/tables\" exact component={Tables} />\r\n    <Route path=\"/components/tooltips\" exact component={Tooltips} />\r\n    <Route path=\"/components/spinners\" exact component={Spinners} />\r\n    <Route path=\"/components/carousel\" exact component={Carousel} /> */}\r\n\r\n    {/*Utilities*/}\r\n    {/* <Route path=\"/utilities/borders\" exact component={Borders} />\r\n    <Route path=\"/utilities/clearfix\" exact component={Clearfix} />\r\n    <Route path=\"/utilities/closeIcon\" exact component={CloseIcon} />\r\n    <Route path=\"/utilities/colors\" exact component={Colors} />\r\n    <Route path=\"/utilities/display\" exact component={Display} />\r\n    <Route path=\"/utilities/embed\" exact component={Embed} />\r\n    <Route path=\"/utilities/figures\" exact component={Figures} />\r\n    <Route path=\"/utilities/flex\" exact component={Flex} />\r\n    <Route path=\"/utilities/grid\" exact component={Grid} />\r\n    <Route path=\"/utilities/sizing\" exact component={Sizing} />\r\n    <Route path=\"/utilities/spacing\" exact component={Spacing} />\r\n    <Route path=\"/utilities/stretchedLink\" exact component={StretchedLink} />\r\n    <Route path=\"/utilities/typography\" exact component={Typography} />\r\n    <Route path=\"/utilities/verticalAlign\" exact component={VerticalAlign} />\r\n    <Route path=\"/utilities/visibility\" exact component={Visibility} /> */}\r\n\r\n    {/*Plugins*/}\r\n    {/* <Route path=\"/plugins/bulk-select\" exact component={BulkSelect} />\r\n    <Route path=\"/plugins/typed\" exact component={Typed} />\r\n    <Route path=\"/plugins/image-lightbox\" exact component={ImageLightbox} />\r\n    <Route path=\"/plugins/lottie\" exact component={Lottie} />\r\n    <Route path=\"/plugins/google-map\" exact component={GoogleMapExample} />\r\n    <Route path=\"/plugins/wysiwyg\" exact component={QuillEditorExample} />\r\n    <Route path=\"/plugins/chart\" exact component={Chart} />\r\n    <Route path=\"/plugins/countup\" exact component={CountUpExample} />\r\n    <Route path=\"/plugins/datetime\" exact component={DatetimeExample} />\r\n    <Route path=\"/plugins/fontawesome\" exact component={FontAwesome} />\r\n    <Route path=\"/plugins/echarts\" exact component={Echarts} />\r\n    <Route path=\"/plugins/toastify\" exact component={Toastify} />\r\n    <Route path=\"/plugins/select\" exact component={Select} />\r\n    <Route path=\"/plugins/slick-carousel\" exact component={SlickCarousel} />\r\n    <Route path=\"/plugins/scroll-bar\" exact component={Scrollbar} />\r\n    <Route path=\"/plugins/progressbar\" exact component={ProgressBarJs} />\r\n    <Route path=\"/plugins/plyr\" exact component={Plyr} />\r\n    <Route path=\"/plugins/react-hook-form\" exact component={ReactHookFrom} />\r\n    <Route path=\"/plugins/leaflet-map\" exact component={Leaflet} />\r\n    <Route path=\"/plugins/echart-map\" exact component={EchartMap} />\r\n    <Route path=\"/plugins/dropzone\" exact component={Dropzone} />\r\n    <Route path=\"/plugins/code-highlight\" exact component={CodeHighlightDoc} />\r\n    <Route path=\"/plugins/emoji-mart\" exact component={EmojiMart} />\r\n    <Route path=\"/plugins/react-bootstrap-table2\" exact component={ReactBootstrapTable2} />\r\n    <Route path=\"/plugins/react-beautiful-dnd\" exact component={ReactBeautifulDnD} /> */}\r\n\r\n    {/*Space*/}\r\n    <Route path=\"/space/energycategory\" exact component={SpaceEnergyCategory} />\r\n    <Route path=\"/space/energyitem\" exact component={SpaceEnergyItem} />\r\n    <Route path=\"/space/carbon\" exact component={SpaceCarbon} />\r\n    <Route path=\"/space/cost\" exact component={SpaceCost} />\r\n    <Route path=\"/space/output\" exact component={SpaceOutput} />\r\n    <Route path=\"/space/income\" exact component={SpaceIncome} />\r\n    <Route path=\"/space/efficiency\" exact component={SpaceEfficiency} />\r\n    <Route path=\"/space/load\" exact component={SpaceLoad} />\r\n    <Route path=\"/space/statistics\" exact component={SpaceStatistics} />\r\n    <Route path=\"/space/saving\" exact component={SpaceSaving} />\r\n    <Route path=\"/space/environmentmonitor\" exact component={SpaceEnvironmentMonitor} />\r\n\r\n    {/*Equipment*/}\r\n    {/* <Route path=\"/equipment/batch\" exact component={EquipmentBatch} />\r\n    <Route path=\"/equipment/carbon\" exact component={EquipmentCarbon} />\r\n    <Route path=\"/equipment/cost\" exact component={EquipmentCost} />\r\n    <Route path=\"/equipment/efficiency\" exact component={EquipmentEfficiency} />\r\n    <Route path=\"/equipment/energycategory\" exact component={EquipmentEnergyCategory} />\r\n    <Route path=\"/equipment/energyitem\" exact component={EquipmentEnergyItem} />\r\n    <Route path=\"/equipment/income\" exact component={EquipmentIncome} />\r\n    <Route path=\"/equipment/load\" exact component={EquipmentLoad} />\r\n    <Route path=\"/equipment/output\" exact component={EquipmentOutput} />\r\n    <Route path=\"/equipment/saving\" exact component={EquipmentSaving} />\r\n    <Route path=\"/equipment/statistics\" exact component={EquipmentStatistics} />\r\n    <Route path=\"/equipment/tracking\" exact component={EquipmentTracking} /> */}\r\n\r\n    {/*Meter*/}\r\n    {/* <Route path=\"/meter/meterenergy\" exact component={MeterEnergy} />\r\n    <Route path=\"/meter/metercarbon\" exact component={MeterCarbon} />\r\n    <Route path=\"/meter/metercomparison\" exact component={MeterComparison} />\r\n    <Route path=\"/meter/metercost\" exact component={MeterCost} />\r\n    <Route path=\"/meter/metertrend\" exact component={MeterTrend} />\r\n    <Route path=\"/meter/meterrealtime\" exact component={MeterRealtime} />\r\n    <Route path=\"/meter/metersaving\" exact component={MeterSaving} />\r\n    <Route path=\"/meter/metersubmetersbalance\" exact component={MeterSubmetersBalance} />\r\n    <Route path=\"/meter/meterbatch\" exact component={MeterBatch} />\r\n    <Route path=\"/meter/metertracking\" exact component={MeterTracking} />\r\n    <Route path=\"/meter/virtualmetersaving\" exact component={VirtualMeterSaving} />\r\n    <Route path=\"/meter/virtualmeterenergy\" exact component={VirtualMeterEnergy} />\r\n    <Route path=\"/meter/virtualmetercarbon\" exact component={VirtualMeterCarbon} />\r\n    <Route path=\"/meter/virtualmetercost\" exact component={VirtualMeterCost} />\r\n    <Route path=\"/meter/virtualmeterbatch\" exact component={VirtualMeterBatch} />\r\n    <Route path=\"/meter/offlinemeterenergy\" exact component={OfflineMeterEnergy} />\r\n    <Route path=\"/meter/offlinemetercarbon\" exact component={OfflineMeterCarbon} />\r\n    <Route path=\"/meter/offlinemetercost\" exact component={OfflineMeterCost} />\r\n    <Route path=\"/meter/offlinemeterbatch\" exact component={OfflineMeterBatch} />\r\n    <Route path=\"/meter/offlinemetersaving\" exact component={OfflineMeterSaving} />\r\n    <Route path=\"/meter/offlinemeterinput\" exact component={OfflineMeterInput} /> */}\r\n\r\n    {/*Tenant*/}\r\n    {/* <Route path=\"/tenant/energycategory\" exact component={TenantEnergyCategory} />\r\n    <Route path=\"/tenant/energyitem\" exact component={TenantEnergyItem} />\r\n    <Route path=\"/tenant/carbon\" exact component={TenantCarbon} />\r\n    <Route path=\"/tenant/cost\" exact component={TenantCost} />\r\n    <Route path=\"/tenant/load\" exact component={TenantLoad} />\r\n    <Route path=\"/tenant/statistics\" exact component={TenantStatistics} />\r\n    <Route path=\"/tenant/saving\" exact component={TenantSaving} />\r\n    <Route path=\"/tenant/bill\" exact component={TenantBill} />\r\n    <Route path=\"/tenant/batch\" exact component={TenantBatch} /> */}\r\n\r\n    {/*Sotore*/}\r\n    {/* <Route path=\"/store/energycategory\" exact component={StoreEnergyCategory} />\r\n    <Route path=\"/store/energyitem\" exact component={StoreEnergyItem} />\r\n    <Route path=\"/store/carbon\" exact component={StoreCarbon} />\r\n    <Route path=\"/store/cost\" exact component={StoreCost} />\r\n    <Route path=\"/store/load\" exact component={StoreLoad} />\r\n    <Route path=\"/store/statistics\" exact component={StoreStatistics} />\r\n    <Route path=\"/store/saving\" exact component={StoreSaving} />\r\n    <Route path=\"/store/batch\" exact component={StoreBatch} /> */}\r\n\r\n    {/*Shopfloor*/}\r\n    {/* <Route path=\"/shopfloor/energycategory\" exact component={ShopfloorEnergyCategory} /> */}\r\n    {/* <Route path=\"/shopfloor/energyitem\" exact component={ShopfloorEnergyItem} /> */}\r\n    {/* <Route path=\"/shopfloor/carbon\" exact component={ShopfloorCarbon} /> */}\r\n    {/* <Route path=\"/shopfloor/cost\" exact component={ShopfloorCost} /> */}\r\n    {/* <Route path=\"/shopfloor/load\" exact component={ShopfloorLoad} /> */}\r\n    {/* <Route path=\"/shopfloor/statistics\" exact component={ShopfloorStatistics} /> */}\r\n    {/* <Route path=\"/shopfloor/saving\" exact component={ShopfloorSaving} /> */}\r\n    {/* <Route path=\"/shopfloor/batch\" exact component={ShopfloorBatch} /> */}\r\n\r\n    {/*CombinedEquipment*/}\r\n    {/* <Route path=\"/combinedequipment/batch\" exact component={CombinedEquipmentBatch} /> */}\r\n    {/* <Route path=\"/combinedequipment/carbon\" exact component={CombinedEquipmentCarbon} /> */}\r\n    {/* <Route path=\"/combinedequipment/cost\" exact component={CombinedEquipmentCost} /> */}\r\n    {/* <Route path=\"/combinedequipment/efficiency\" exact component={CombinedEquipmentEfficiency} /> */}\r\n    {/* <Route path=\"/combinedequipment/energycategory\" exact component={CombinedEquipmentEnergyCategory} /> */}\r\n    {/* <Route path=\"/combinedequipment/energyitem\" exact component={CombinedEquipmentEnergyItem} /> */}\r\n    {/* <Route path=\"/combinedequipment/income\" exact component={CombinedEquipmentIncome} /> */}\r\n    {/* <Route path=\"/combinedequipment/load\" exact component={CombinedEquipmentLoad} /> */}\r\n    {/* <Route path=\"/combinedequipment/output\" exact component={CombinedEquipmentOutput} /> */}\r\n    {/* <Route path=\"/combinedequipment/saving\" exact component={CombinedEquipmentSaving} /> */}\r\n    {/* <Route path=\"/combinedequipment/statistics\" exact component={CombinedEquipmentStatistics} /> */}\r\n\r\n    {/*Auxiliary System*/}\r\n    <Route path=\"/auxiliarysystem/energyflowdiagram\" exact component={EnergyFlowDiagram} />\r\n    <Route path=\"/auxiliarysystem/distributionsystem\" exact component={DistributionSystem} />\r\n\r\n    {/*Microgrid*/}\r\n    <Route path=\"/microgrid\" exact component={MicrogridList} />\r\n    <Route path=\"/microgrid/details\" exact component={MicrogridDetails} />\r\n    <Route path=\"/microgrid/reporting\" exact component={MicrogridReporting} />\r\n\r\n    {/*EnergyStoragePowerStation*/}\r\n    <Route path=\"/energystoragepowerstation\" exact component={EnergyStoragePowerStationList} />\r\n    <Route path=\"/energystoragepowerstation/details\" exact component={EnergyStoragePowerStationDetails} />\r\n    <Route path=\"/energystoragepowerstation/reporting\" exact component={EnergyStoragePowerStationReporting} />\r\n\r\n    {/*FDD*/}\r\n    <Route path=\"/fdd\" exact component={FDDFault} />\r\n\r\n    {/*Equipment Monitoring*/}\r\n    <Route path=\"/monitoring/spaceequipments\" exact component={SpaceEquipments} />\r\n    <Route path=\"/monitoring/combinedequipments\" exact component={CombinedEquipments} />\r\n\r\n    {/*Advanced Reporting*/}\r\n    <Route path=\"/advancedreporting\" exact component={AdvancedReporting} />\r\n\r\n    {/*Knowledge Base*/}\r\n    <Route path=\"/knowledgebase\" exact component={KnowledgeBase} />\r\n\r\n    {/* Notification */}\r\n    <Route path=\"/notification\" exact component={Notification} />\r\n\r\n    {/*Redirect*/}\r\n    <Redirect to=\"/errors/404\" />\r\n  </Switch>\r\n);\r\n\r\nexport default MyEMSRoutes;\r\n"],"names":["html","__html","ChartJS","register","CategoryScale","LinearScale","PointElement","BarElement","Tooltip","Legend","withTranslation","_ref","reportingTitle","baseTitle","reportingTooltipTitle","baseTooltipTitle","reportingLabels","baseLabels","reportingData","baseData","rates","options","t","option","setOption","useState","isDark","useContext","AppContext","chartRef","useRef","lineData","setLineData","datasets","useEffect","chart","current","ctx","gradientFill","createLinearGradient","canvas","height","addColorStop","chartData","data","undefinedConvertsToEmptyArray","borderColor","rgbaColor","themeColors","primary","backgroundColor","type","yAxisID","tooltip","callbacks","label","context","raw","datalabels","formatter","value","color","light","dark","align","anchor","display","content","dataset","length","stack","tension","borderWidth","borderRadius","labels","config","plugins","ChartDataLabels","legend","xPadding","yPadding","displayColors","title","datasetIndex","concat","dataIndex","Number","isNaN","toFixed","parseTitleOrTooltipTitle","interaction","intersect","mode","scales","x","ticks","fontColor","fontStyle","stacked","y","gridLines","y1","position","grid","drawOnChartArea","suggestedMax","callback","index","hover","undefined","key","name","substitute","title_parameter","forEach","currentKey","_jsx","Card","className","children","_jsxs","CardBody","Row","Col","isIterableArray","xs","CustomInput","id","bsSize","onChange","_ref2","target","update","map","_ref3","Chart","ref","width","periodTypeOptions","comparisonTypeOptions","disabled","format","size","style","onClean","locale","placeholder","flag","Ref","React","DateRangePicker","cleanable","onSelect","date","time","moment","calendarObj","overlay","calendarTitleObj","setTimeout","childNodes","nodeValue","innerText","preventOverflow","ChildSpacesTable","loadable","DetailedDataTable","WorkingDaysConsumptionTable","withRedirect","setRedirect","setRedirectUrl","current_moment","uuid_","useLocation","search","split","is_logged_in","getCookieValue","user_name","user_display_name","user_uuid","token","checkEmpty","createCookie","settings","cookieExpireTime","timer","setInterval","clearInterval","selectedSpaceName","setSelectedSpaceName","selectedSpaceID","setSelectedSpaceID","comparisonType","setComparisonType","periodType","setPeriodType","cascaderOptions","setCascaderOptions","cascaderValue","setCascaderValue","basePeriodDateRange","setBasePeriodDateRange","clone","subtract","startOf","toDate","basePeriodDateRangePickerDisabled","setBasePeriodDateRangePickerDisabled","reportingPeriodDateRange","setReportingPeriodDateRange","dateRangePickerLocale","sunday","monday","tuesday","wednesday","thursday","friday","saturday","ok","today","yesterday","hours","minutes","seconds","last7Days","formattedMonthPattern","dateRangePickerStyle","zIndex","language","submitButtonDisabled","setSubmitButtonDisabled","spinnerHidden","setSpinnerHidden","exportButtonHidden","setExportButtonHidden","timeOfUseShareData","setTimeOfUseShareData","TCEShareData","setTCEShareData","TCO2EShareData","setTCO2EShareData","cardSummaryList","setCardSummaryList","totalInTCE","setTotalInTCE","totalInTCO2E","setTotalInTCO2E","childSpaceProportionList","setChildSpaceProportionList","spaceBaseAndReportingNames","setSpaceBaseAndReportingNames","spaceBaseAndReportingUnits","setSpaceBaseAndReportingUnits","spaceBaseLabels","setSpaceBaseLabels","spaceBaseData","setSpaceBaseData","spaceBaseSubtotals","setSpaceBaseSubtotals","spaceReportingLabels","setSpaceReportingLabels","spaceReportingData","setSpaceReportingData","spaceReportingSubtotals","setSpaceReportingSubtotals","spaceReportingRates","setSpaceReportingRates","spaceReportingOptions","setSpaceReportingOptions","parameterLineChartLabels","setParameterLineChartLabels","parameterLineChartData","setParameterLineChartData","parameterLineChartOptions","setParameterLineChartOptions","detailedDataTableData","setDetailedDataTableData","detailedDataTableColumns","setDetailedDataTableColumns","dataField","text","sort","childSpacesTableData","setChildSpacesTableData","childSpacesTableColumns","setChildSpacesTableColumns","excelBytesBase64","setExcelBytesBase64","workingDaysConsumptionTableData","setWorkingDaysConsumptionTableData","workingDaysConsumptionTableColumns","setWorkingDaysConsumptionTableColumns","isResponseOK","fetch","APIBaseURL","method","headers","Token","body","then","response","console","log","json","JSON","parse","stringify","join","o","loadUUID","toast","error","description","catch","err","spaceName","spaceList","spaceID","ids","newName","newIds","space","idArr","push","rt","url","loadData","cardSummaryArray","currentValue","cardSummaryItem","parseFloat","timeOfUseArray","timeOfUseItem","Math","random","toString","TCEDataArray","TCEDataItem","TCO2EDataArray","TCO2EDataItem","childSpaceProportionArray","energyCategoryIndex","childSpaceProportionItem","currentSpaceName","spaceIndex","childSpaceProportionItemDataItem","base_timestamps","base_values","base_and_reporting_names","base_and_reporting_units","base_subtotals","reporting_timestamps","reporting_values","reporting_subtotals","currentRate","Array","rate","unit","timestamps","values","names","isBasePeriodTimestampExists","detailed_column_list","decimalValue","detailed_value_list","max_timestamps_length","detailed_value","workding_days_table_column_list","working_days_table_value_list","working_days_table_value","currentTimestamp","timestampIndex","child_space_value_list","child_space_value","total","reduce","a","b","child_space_column_list","labelClasses","base_period_data","i","Fragment","Breadcrumb","BreadcrumbItem","active","onClick","window","location","reload","Link","to","Form","onSubmit","e","preventDefault","form","sm","FormGroup","Label","for","Cascader","onSpaceCascaderChange","selectedOptions","changeOnSelect","expandTrigger","Input","readOnly","defaultValue","DateRangePickerWrapper","DateRange","endOfDay","event","ButtonGroup","Button","Spinner","hidden","ButtonIcon","icon","transform","mimeType","blob","link","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","CardSummary","footnote","footvalue","footunit","CountUp","end","duration","prefix","separator","decimal","decimals","noGutters","SharePie","uuid","MultiTrendChart","columns","pagesize","echarts","use","LineChart","GridComponent","ToolboxComponent","DataZoomComponent","MarkLineComponent","MarkPointComponent","colors","setValues","oldValues","setOldValues","nodes","setNodes","markPoint","itemStyle","markLine","lineStyle","lastMoment","setLastMoment","lineLabels","setLinaLabels","tempNodes","slice","smooth","splice","CheckPicker","appearance","searchable","countable","arr","currentMoment","ReactEchartsCore","notMerge","trigger","getGrays","left","right","bottom","containLabel","xAxis","axisLabel","interval","rotate","axisLine","yAxis","splitLine","show","series","toolbox","feature","dataZoom","xAxisIndex","yAxisIndex","sharePieList","setSharePieList","sharePieDict","energyCategoryDict","sharePieSubItem","current_energy_category_id","sharePieArray","sharePieItem","energyItemIndex","MultipleLineChartnew","a0","EchartsDemo","carbonShareData","setCarbonShareData","childSpaceSubtotalShareData","setChildSpaceSubtotalShareData","carbonDataArray","carbonDataItem","childSpaceSubtotalShareDataArray","subtotal","childSpaceSubtotalDataItem","total_of_subtotals_from_base_period","total_of_subtotals_from_reporting_period","total_current_timstamp","total_of_subtotals","MultipleLineChart","costShareData","setCostShareData","costDataArray","costDataItem","incomeShareData","setIncomeShareData","incomeDataArray","incomeDataItem","listItemBorderColor","RealtimeData","Component","constructor","arguments","_isMounted","state","trendLog","currentEnergyValue","energyValuePointName","pointList","componentWillUnmount","this","refreshInterval","clearTimeout","refreshTimeout","componentDidMount","props","sensorId","currentName","pointItem","currentValues","setState","floor","render","minWidth","maxWidth","CardHeader","sensorName","borderBottom","ListGroup","flush","ListGroupItem","cursor","setCursor","maxCursor","setMaxCursor","selectSensorList","setSelectSensorList","sensorList","setSensorList","isSecondResponseOK","getCursor","sensorLen","ceil","getElementById","sensor","Pagination","PaginationItem","PaginationLink","first","previous","next","last","SankeyChart","energyFlowDiagramList","setEnergyFlowDiagramList","selectedEnergyFlowDiagram","setSelectedEnergyFlowDiagram","energyFlowDiagramData","setEnergyFlowDiagramData","energyFlowDiagram","getOption","colorArr","labelColor","labelTextBorderColor","colorIndex","links","item","sourceColor","targetColor","source","x2","y2","colorStops","offset","globalCoord","triggerOn","focusNodeAdjacency","curveness","fontFamily","fontSize","fontWeight","textBorderWidth","textBorderColor","RealtimeChart","distributionSystemID","currentCircuit","circuitIndex","currentPoint","pointIndex","useInterval","delay","savedCallback","pointid","pointname","namewithid","optionData","timeArr","valueArr","replace","textStyle","top","start","init","clear","marginTop","background","hide","Charts","setDisplay","setPosition","setShow","setPointid","setPointname","setType","setArr","distributionSystemList","setDistributionSystemList","selectedDistributionSystemID","setSelectedDistributionSystemID","images","setImages","SVGSystemReportDict","setSVGSystemReportDict","refreshSVGData","textElement","tspanList","getElementsByTagName","textContent","onContextMenu","pageX","pageY","element","elementFromPoint","pt_id","getAttribute","tagName","distributionSystem","lg","dangerouslySetInnerHTML","ScorpioMenu","onMenuClick","onClose","Dialog","Loader","defaultProps","MicrogridListItem","files","address","postal_code","serial_number","batteryState","batterySocPointValue","batteryPowerPointValue","photovoltaicPowerPointValue","loadPowerPointValue","gridPowerPointValue","alarms","isOnline","PCSRunState","favouriteItemsDispatch","ProductContext","cartLoading","setCartLoading","classNames","md","src","Badge","pill","tag","Flex","justify","column","iconClassName","open","handleAddToCart","meta","handler","isRTL","pageNo","itemsPerPage","nextPageNo","prevPageNo","nextPage","prevPage","currentPage","CardFooter","FontAwesomeIcon","getPaginationArray","page","items","defaultItemsPerPage","setData","itemsChunk","setItemsChunk","setTotal","lastPageNo","setLastPageNo","setItemsPerPage","setPageNo","from","setFrom","setTo","setPrevPageNo","setNextPageNo","chunk","handleNextPage","handlePrevPage","perPage","microgridArray","setMicrogridArray","microgridIds","setMicrogridIds","isLoading","setIsLoading","geojson","setGeojson","rootLatitude","setRootLatitude","rootLongitude","setRootLongitude","geojsonData","microgird","require","sliderSettings","infinite","speed","slidesToShow","slidesToScroll","paginationData","paginationMeta","paginationHandler","usePagination","filter","microgrid","includes","_createElement","CustomizeMapBox","Latitude","Longitude","Zoom","Geojson","MicrogridFooter","microgridUUID","chargeStartTime1","setChargeStartTime1","chargeEndTime1","setChargeEndTime1","chargeStartTime2","setChargeStartTime2","chargeEndTime2","setChargeEndTime2","chargeStartTime3","setChargeStartTime3","chargeEndTime3","setChargeEndTime3","chargeStartTime4","setChargeStartTime4","chargeEndTime4","setChargeEndTime4","dischargeStartTime1","setDischargeStartTime1","dischargeEndTime1","setDischargeEndTime1","dischargeStartTime2","setDischargeStartTime2","dischargeEndTime2","setDischargeEndTime2","dischargeStartTime3","setDischargeStartTime3","dischargeEndTime3","setDischargeEndTime3","dischargeStartTime4","setDischargeStartTime4","dischargeEndTime4","setDischargeEndTime4","chargeStartTime1CommandID","setChargeStartTime1CommandID","chargeEndTime1CommandID","setChargeEndTime1CommandID","chargeStartTime2CommandID","setChargeStartTime2CommandID","chargeEndTime2CommandID","setChargeEndTime2CommandID","chargeStartTime3CommandID","setChargeStartTime3CommandID","chargeEndTime3CommandID","setChargeEndTime3CommandID","chargeStartTime4CommandID","setChargeStartTime4CommandID","chargeEndTime4CommandID","setChargeEndTime4CommandID","dischargeStartTime1CommandID","setDischargeStartTime1CommandID","dischargeEndTime1CommandID","setDischargeEndTime1CommandID","dischargeStartTime2CommandID","setDischargeStartTime2CommandID","dischargeEndTime2CommandID","setDischargeEndTime2CommandID","dischargeStartTime3CommandID","setDischargeStartTime3CommandID","dischargeEndTime3CommandID","setDischargeEndTime3CommandID","dischargeStartTime4CommandID","setDischargeStartTime4CommandID","dischargeEndTime4CommandID","setDischargeEndTime4CommandID","microgridName","setMicrogridName","microgridSerialNumber","setMicrogridSerialNumber","microgridAddress","setMicrogridAddress","microgridPostalCode","setMicrogridPostalCode","microgridCapacity","setMicrogridCapacity","microgridLatitude","setMicrogridLatitude","microgridLongitude","setMicrogridLongitude","microgridSVG","setMicrogridSVG","FalconCardHeader","titleClass","Table","striped","scope","Datetime","dateFormat","timeFormat","onChargeStartTime1Close","parseInt","substring","onChargeEndTime1Close","onDischargeStartTime1Close","onDischargeEndTime1Close","onChargeStartTime2Close","onChargeEndTime2Close","onDischargeStartTime2Close","onDischargeEndTime2Close","onChargeStartTime3Close","onChargeEndTime3Close","onDischargeStartTime3Close","onDischargeEndTime3Close","onChargeStartTime4Close","onChargeEndTime4Close","onDischargeStartTime4Close","onDischargeEndTime4Close","setSpaceCascaderHidden","setMicrogridSearchHidden","microgridList","setMicrogridList","filteredMicrogridList","setFilteredMicrogridList","selectedMicrogrid","setSelectedMicrogrid","spaceCascaderHidden","microgridSearchHidden","microgridBaseLabels","setMicrogridBaseLabels","microgridBaseData","setMicrogridBaseData","microgridReportingNames","setMicrogridReportingNames","microgridReportingUnits","setMicrogridReportingUnits","microgridReportingSubtotals","setMicrogridReportingSubtotals","microgridReportingLabels","setMicrogridReportingLabels","microgridReportingData","setMicrogridReportingData","microgridReportingOptions","setMicrogridReportingOptions","inline","keyword","toLowerCase","filteredResult","_ref4","_ref5","EnergyStoragePowerStationListItem","batteryOperatingState","energyStoragePowerStationArray","setEnergyStoragePowerStationArray","energyStoragePowerStationIds","setEnergyStoragePowerStationIds","energyStoragePowerStation","EnergyStoragePowerStationFooter","energyStoragePowerStationUUID","energyStoragePowerStationName","setEnergyStoragePowerStationName","energyStoragePowerStationAddress","setEnergyStoragePowerStationAddress","energyStoragePowerStationPostalCode","setEnergyStoragePowerStationPostalCode","energyStoragePowerStationCapacity","setEnergyStoragePowerStationCapacity","energyStoragePowerStationLatitude","setEnergyStoragePowerStationLatitude","energyStoragePowerStationLongitude","setEnergyStoragePowerStationLongitude","energyStoragePowerStationSVG","setEnergyStoragePowerStationSVG","setEnergyStoragePowerStationSearchHidden","energyStoragePowerStationList","setEnergyStoragePowerStationList","filteredEnergyStoragePowerStationList","setFilteredEnergyStoragePowerStationList","selectedEnergyStoragePowerStation","setSelectedEnergyStoragePowerStation","energyStoragePowerStationSearchHidden","energyStoragePowerStationSerialNumber","setEnergyStoragePowerStationSerialNumber","energyStoragePowerStationBaseLabels","setEnergyStoragePowerStationBaseLabels","energyStoragePowerStationBaseData","setEnergyStoragePowerStationBaseData","energyStoragePowerStationReportingNames","setEnergyStoragePowerStationReportingNames","energyStoragePowerStationReportingUnits","setEnergyStoragePowerStationReportingUnits","energyStoragePowerStationReportingSubtotals","setEnergyStoragePowerStationReportingSubtotals","energyStoragePowerStationReportingLabels","setEnergyStoragePowerStationReportingLabels","energyStoragePowerStationReportingData","setEnergyStoragePowerStationReportingData","energyStoragePowerStationReportingOptions","setEnergyStoragePowerStationReportingOptions","COLUMNS","Header","accessor","read_warn_content","useMemo","WARN_DATA","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","columnIndex","getHeaderProps","row","rowIndex","getRowProps","cells","cell","cellIndex","getCellProps","startDatetime","setStartDatetime","endDatetime","setEndDatetime","priority","setPriority","status","setStatus","faults","setFaults","table","createRef","isSelected","setIsSelected","onPageChange","setImmediate","selectionContext","selected","classes","subjectFormatter","actionFormatter","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","handleRead","handleAcknowledged","divider","handledelete","custom","sizePerPage","totalSize","SelectRowInput","_ref6","indeterminate","rest","input","selectRow","clickToSelect","selectionHeaderRenderer","_ref7","selectionRenderer","_ref8","onSelectAll","handleSubmit","faultList","fault","warning_data","set_warning_data","listacenvironerror","setlistacenvironerror","get_ac1_warning","axios","get","_ref9","_ref10","newDateTime","isValidDate","currentDate","isBefore","closeOnSelect","isAfter","handle_test","confirm","PaginationProvider","pagination","paginationFactory","_ref11","paginationProps","paginationTableProps","lastIndex","BootstrapTable","bootstrap4","keyField","bordered","rowClasses","headerClasses","Reacttable","resolvedData","waitingTime","loading","setLoading","isMounted","EquipmentList","category","features","parameter1","parameter2","parameter3","parameter4","parameter5","parameter6","parameter7","isRunning","payload","path","product2","product1","product4","product3","product8","product6","product7","product5","product9","equipmentIds","setEquipmentIds","useFakeFetch","equipments","equipment","EquipmentFooter","option_minute","minutelabel","minuteOption","option_time","timelabel","timeOption","fakeData","options_strategy","options_month","QueryClient","Example","validationErrors","setValidationErrors","accessorKey","header","editSelectOptions","muiEditTextFieldProps","select","strategy","helperText","month","editVariant","starttime","startminute","endtime","endminute","required","power","onFocus","mutateAsync","createUser","isPending","isCreatingUser","queryClient","useQueryClient","useMutation","mutationFn","async","Promise","resolve","onMutate","newUserInfo","setQueryData","prevUsers","useCreateUser","fetchedUsers","isError","isLoadingUsersError","isFetching","isFetchingUsers","isLoadingUsers","useQuery","queryKey","queryFn","refetchOnWindowFocus","updateUser","isUpdatingUser","prevUser","useUpdateUser","deleteUser","isDeletingUser","userId","user","useDeleteUser","confirmm","confirm_submit","confirm_queryClient","delete","confirm_data","getQueryData","val","hourStr","startTimeHour","minuteStr","startTimeMinute","end_hourStr","endTimeHour","end_minuteStr","endTimeMinute","post","useMaterialReactTable","createDisplayMode","editDisplayMode","enableEditing","getRowId","positionActionsColumn","muiTableHeadCellProps","sx","theme","muiTableBodyCellProps","muiToolbarAlertBannerProps","muiTableContainerProps","minHeight","onCreatingRowCancel","onCreatingRowSave","newValidationErrors","Object","some","setCreatingRow","onEditingRowCancel","onEditingRowSave","setEditingRow","renderRowActions","Box","gap","IconButton","EditIcon","original","openDeleteConfirmModal","DeleteIcon","renderTopToolbarCustomActions","variant","isSaving","showAlertBanner","showProgressBars","MaterialReactTable","New_material_crud","QueryClientProvider","client","combinedEquipmentList","setCombinedEquipmentList","selectedCombinedEquipment","setSelectedCombinedEquipment","selectedStrategName","setSelectedStrategName","selectedStrategyID","setSelectedStrategyID","selectedMonthName","setSelectedMonthName","selectedMonthID","setSelectedMonthID","selectedStartTimeName","setSelectedStartTimeName","selectedStartTimeID","setSelectedStartTimeID","selectedEndTimeName","setSelectedEndTimeName","selectedEndTimeID","setSelectedEndTimeID","selectedPowerName","setSelectedPowerName","selectedPowerID","setSelectedPowerID","toDoList","setToDoList","updateId","setUpdateId","onChangePage","allpage","startIndex","endIndex","paginatedData","updateToDo","find","handleUpdate","deleteToDo","handleDelete","onSpaceStrategyChange","onSpaceMonthChange","onSpaceStartTimeChange","onSpaceEndTimeChange","Swal","updatedToDoList","reverse","day","ReportBadge","Summary","calendar","badge","file_bytes_base64","Media","Calendar","fileName","fileBytesBase64","handleExport","reports","setReports","reportList","report","additional","createMarkup","Alert","fetchSuccess","setFetchSuccess","notifications","setNotifications","notificationList","notification","rowKey","newRest","InputGroup","batchRead","batchDelete","MyEMSRoutes","Switch","Route","exact","component","SpaceEnergyCategory","SpaceEnergyItem","SpaceCarbon","SpaceCost","SpaceOutput","SpaceIncome","SpaceEfficiency","SpaceLoad","SpaceStatistics","SpaceSaving","SpaceEnvironmentMonitor","EnergyFlowDiagram","DistributionSystem","MicrogridList","MicrogridDetails","MicrogridReporting","EnergyStoragePowerStationList","EnergyStoragePowerStationDetails","EnergyStoragePowerStationReporting","FDDFault","SpaceEquipments","CombinedEquipments","AdvancedReporting","KnowledgeBase","Notification","Redirect"],"sourceRoot":""}