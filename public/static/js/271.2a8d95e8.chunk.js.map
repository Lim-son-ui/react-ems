{"version":3,"file":"static/js/271.2a8d95e8.chunk.js","mappings":"+QAQA,MAsCA,EAtCsBA,GACKC,IAEvB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,MAEvC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,OAAK,EAAAC,UACdC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,oBAAmBH,SAAA,EAChCH,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,EAAGF,UAAU,oBAAmBH,SACtCN,IAAWG,EAAAA,EAAAA,KAACS,EAAAA,EAAU,IAAKZ,OAE9BG,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACG,GAAI,GAAIC,GAAI,EAAGL,UAAU,yCAAwCH,UACpEH,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACO,WAAS,EAACN,UAAU,yBAAwBH,UAC/CH,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACM,GAAI,EAAGC,GAAI,EAAGR,UAAU,YAAWH,UACtCC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAAAZ,SAAA,EACHH,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACV,UAAU,uDAAsDH,UAC1EH,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CACHX,UAAU,qFACVY,GAAG,IAAGf,SACP,cAIHH,EAAAA,EAAAA,KAACmB,EAAAA,EAAQ,CAACb,UAAU,MAAKH,UACvBH,EAAAA,EAAAA,KAACL,EAAiB,CAACG,WAAYA,KAAgBF,mBAOjD,E,iDCXlB,EAAewB,GAnBDC,IAAqB,IAApB,WAAEvB,GAAYuB,EAG3B,OAFAC,EAAAA,EAAAA,YAAU,IAAMxB,EAAW,CAAEyB,MAAOC,EAAOC,SAAU,aAAc,CAAC3B,KAGlEM,EAAAA,EAAAA,MAACsB,EAAAA,SAAQ,CAAAvB,SAAA,EACPC,EAAAA,EAAAA,MAACuB,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,UAAS1B,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,WACJC,EAAAA,EAAAA,MAAA,KAAGE,UAAU,aAAYH,SAAA,EACvBH,EAAAA,EAAAA,KAAA,QAAMM,UAAU,wBAAuBH,SAAC,gBACxCH,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,iCAAgCf,SAAC,0BAG9CH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CAACC,OAAO,QAAQC,UAAQ,MACzB,I,sECHf,EAAeZ,GAZAC,IAAqB,IAApB,WAAEvB,GAAYuB,EAG5B,OAFAC,EAAAA,EAAAA,YAAU,IAAMxB,EAAW,CAAEyB,MAAOC,KAAU,CAAC1B,KAG7CE,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAaH,UAC1BH,EAAAA,EAAAA,KAACiC,EAAAA,EAAa,CAACF,OAAO,QAAQG,SAAS,QACnC,I,qECeV,EAAed,GAnBMC,IAAqB,IAApB,WAAEvB,GAAYuB,EAGlC,OAFAC,EAAAA,EAAAA,YAAU,IAAMxB,EAAW,CAAEyB,MAAOC,KAAU,CAAC1B,KAG7CM,EAAAA,EAAAA,MAACsB,EAAAA,SAAQ,CAAAvB,SAAA,EACPC,EAAAA,EAAAA,MAACuB,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,UAAS1B,SAAA,EACpCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,cACJC,EAAAA,EAAAA,MAAA,KAAGE,UAAU,aAAYH,SAAA,EACvBH,EAAAA,EAAAA,KAAA,QAAMM,UAAU,wBAAuBH,SAAC,oBACxCH,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,8BAA6Bf,SAAC,iBAG3CH,EAAAA,EAAAA,KAACmC,EAAAA,EAAgB,CAACJ,OAAO,QAAQC,UAAQ,MAChC,I,sECDf,EAAeZ,GAdQC,IAAqB,IAApB,WAAEvB,GAAYuB,EAGpC,OAFAC,EAAAA,EAAAA,YAAU,IAAMxB,EAAW,CAAEyB,MAAOC,EAAOC,SAAU,UAAWW,SAAS,KAAS,CAACtC,KAGjFM,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaH,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,MAAIM,UAAU,OAAMH,SAAC,4BACrBH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,uDACPH,EAAAA,EAAAA,KAACqC,EAAAA,EAAkB,CAACN,OAAO,YACvB,I,sECKV,EAAeX,GAbOC,IAAqB,IAApB,WAAEvB,GAAYuB,EAGnC,OAFAC,EAAAA,EAAAA,YAAU,IAAMxB,EAAW,CAAEyB,MAAOC,KAAU,CAAC1B,KAG7CM,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaH,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,oBACJH,EAAAA,EAAAA,KAACsC,EAAAA,EAAiB,CAACP,OAAO,QAAQC,UAAQ,MACtC,I,sECKV,EAAeZ,GAZKC,IAAqB,IAApB,WAAEvB,GAAYuB,EAGjC,OAFAC,EAAAA,EAAAA,YAAU,IAAMxB,EAAW,CAAEyB,MAAOC,EAAOC,SAAU,aAAc,CAAC3B,KAGlEE,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAaH,UAC1BH,EAAAA,EAAAA,KAACuC,EAAAA,EAAkB,CAACC,MAAM,cAAcT,OAAO,QAAQG,SAAS,QAC5D,I,uGCqBV,EAAed,GAxBIC,IAAqB,IAApB,WAAEvB,GAAYuB,EAGhC,OAFAC,EAAAA,EAAAA,YAAU,IAAMxB,EAAW,CAAEyB,MAAOC,KAAU,CAAC1B,KAG7CE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,UAAU,yBAAwBH,UACrCC,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,GAAG,OAAML,SAAA,EACZC,EAAAA,EAAAA,MAACqC,EAAAA,EAAK,CAACnC,UAAU,qBAAoBH,SAAA,EACnCH,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,CAACC,IAAKC,EAAOC,KAAK,MAAMvC,UAAU,UACzCF,EAAAA,EAAAA,MAACqC,EAAAA,EAAK,CAACK,MAAI,EAAA3C,SAAA,EACTH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,cACJC,EAAAA,EAAAA,MAAA,KAAGE,UAAU,OAAMH,SAAA,CAAC,wBACEH,EAAAA,EAAAA,KAAA,SAAM,iCAKhCA,EAAAA,EAAAA,KAAC+C,EAAAA,EAAc,CAACzC,UAAU,aAExB,ICDV,EAhBwBe,IAAA,IAAG2B,OAAO,IAAEC,IAAO5B,EAAA,OACzCjB,EAAAA,EAAAA,MAAC8C,EAAAA,GAAM,CAAA/C,SAAA,EACLH,EAAAA,EAAAA,KAACmD,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKJ,EAAG,UAAUK,OAAK,EAACC,UAAWC,KAC9CxD,EAAAA,EAAAA,KAACmD,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKJ,EAAG,WAAWK,OAAK,EAACC,UAAWE,KAC/CzD,EAAAA,EAAAA,KAACmD,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKJ,EAAG,aAAaK,OAAK,EAACC,UAAWG,KACjD1D,EAAAA,EAAAA,KAACmD,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKJ,EAAG,oBAAoBK,OAAK,EAACC,UAAWI,KACxD3D,EAAAA,EAAAA,KAACmD,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKJ,EAAG,iBAAiBK,OAAK,EAACC,UAAWK,KACrD5D,EAAAA,EAAAA,KAACmD,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKJ,EAAG,mBAAmBK,OAAK,EAACC,UAAWM,KACvD7D,EAAAA,EAAAA,KAACmD,EAAAA,GAAK,CAACC,KAAI,GAAAC,OAAKJ,EAAG,gBAAgBK,OAAK,EAACC,UAAWO,KAGpD9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAQ,CAAC7C,GAAG,kBACN,C","sources":["hoc/withAuthSplit.js","components/auth/split/Login.js","components/auth/split/Logout.js","components/auth/split/Registration.js","components/auth/split/ForgetPassword.js","components/auth/split/PasswordReset.js","components/auth/split/ConfirmMail.js","components/auth/split/LockScreen.js","components/auth/split/AuthSplitRoutes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Container from 'reactstrap/es/Container';\r\nimport Background from '../components/common/Background';\r\nimport CardBody from 'reactstrap/es/CardBody';\r\nimport CardHeader from 'reactstrap/es/CardHeader';\r\nimport { Card, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst withAuthSplit = OriginalComponent => {\r\n  const UpdatedComponent = props => {\r\n    // State\r\n    const [bgProps, setBgProps] = useState(null);\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"min-vh-100 bg-100\">\r\n          <Col xs={6} className=\"d-none d-lg-block\">\r\n            {bgProps && <Background {...bgProps} />}\r\n          </Col>\r\n          <Col sm={10} md={6} className=\"px-sm-0 align-self-center mx-auto py-5\">\r\n            <Row noGutters className=\"justify-content-center\">\r\n              <Col lg={9} xl={8} className=\"col-xxl-6\">\r\n                <Card>\r\n                  <CardHeader className=\"bg-split-card-header bg-circle-shape text-center p-2\">\r\n                    <Link\r\n                      className=\"text-white text-sans-serif font-weight-extra-bold fs-4 z-index-1 position-relative\"\r\n                      to=\"/\"\r\n                    >\r\n                      falcon\r\n                    </Link>\r\n                  </CardHeader>\r\n                  <CardBody className=\"p-4\">\r\n                    <OriginalComponent setBgProps={setBgProps} {...props} />\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  return UpdatedComponent;\r\n};\r\n\r\nexport default withAuthSplit;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Flex from '../../common/Flex';\r\nimport LoginForm from '../LoginForm';\r\nimport withAuthSplit from '../../../hoc/withAuthSplit';\r\n\r\nimport bgImg from '../../../assets/img/generic/14.jpg';\r\n\r\nconst Login = ({ setBgProps }) => {\r\n  useEffect(() => setBgProps({ image: bgImg, position: '50% 20%' }), [setBgProps]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Flex align=\"center\" justify=\"between\">\r\n        <h3>Login</h3>\r\n        <p className=\"mb-0 fs--1\">\r\n          <span className=\"font-weight-semi-bold\">New User? </span>\r\n          <Link to=\"/authentication/split/register\">Create account</Link>\r\n        </p>\r\n      </Flex>\r\n      <LoginForm layout=\"split\" hasLabel />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = { setBgProps: PropTypes.func.isRequired };\r\n\r\nexport default withAuthSplit(Login);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LogoutContent from '../LogoutContent';\r\nimport withAuthSplit from '../../../hoc/withAuthSplit';\r\n\r\nimport bgImg from '../../../assets/img/generic/19.jpg';\r\n\r\nconst Logout = ({ setBgProps }) => {\r\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <LogoutContent layout=\"split\" titleTag=\"h3\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nLogout.propTypes = { setBgProps: PropTypes.func.isRequired };\r\n\r\nexport default withAuthSplit(Logout);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Flex from '../../common/Flex';\r\nimport RegistrationForm from '../RegistrationForm';\r\nimport withAuthSplit from '../../../hoc/withAuthSplit';\r\n\r\nimport bgImg from '../../../assets/img/generic/15.jpg';\r\n\r\nconst Registration = ({ setBgProps }) => {\r\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Flex align=\"center\" justify=\"between\">\r\n        <h3>Register</h3>\r\n        <p className=\"mb-0 fs--1\">\r\n          <span className=\"font-weight-semi-bold\">Already User? </span>\r\n          <Link to=\"/authentication/split/login\">Login</Link>\r\n        </p>\r\n      </Flex>\r\n      <RegistrationForm layout=\"split\" hasLabel />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegistration.propTypes = { setBgProps: PropTypes.func.isRequired };\r\n\r\nexport default withAuthSplit(Registration);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ForgetPasswordForm from '../ForgetPasswordForm';\r\nimport withAuthSplit from '../../../hoc/withAuthSplit';\r\n\r\nimport bgImg from '../../../assets/img/generic/17.jpg';\r\n\r\nconst ForgetPassword = ({ setBgProps }) => {\r\n  useEffect(() => setBgProps({ image: bgImg, position: '50% 76%', overlay: true }), [setBgProps]);\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h4 className=\"mb-0\"> Forgot your password?</h4>\r\n      <small>Enter your email and we'll send you a reset link.</small>\r\n      <ForgetPasswordForm layout=\"split\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nForgetPassword.propTypes = { setBgProps: PropTypes.func.isRequired };\r\n\r\nexport default withAuthSplit(ForgetPassword);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PasswordResetForm from '../PasswordResetForm';\r\nimport withAuthSplit from '../../../hoc/withAuthSplit';\r\n\r\nimport bgImg from '../../../assets/img/generic/20.jpg';\r\n\r\nconst PasswordReset = ({ setBgProps }) => {\r\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h3>Reset password</h3>\r\n      <PasswordResetForm layout=\"split\" hasLabel />\r\n    </div>\r\n  );\r\n};\r\n\r\nPasswordReset.propTypes = { setBgProps: PropTypes.func.isRequired };\r\n\r\nexport default withAuthSplit(PasswordReset);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ConfirmMailContent from '../ConfirmMailContent';\r\nimport withAuthSplit from '../../../hoc/withAuthSplit';\r\n\r\nimport bgImg from '../../../assets/img/generic/16.jpg';\r\n\r\nconst ConfirmMail = ({ setBgProps }) => {\r\n  useEffect(() => setBgProps({ image: bgImg, position: '50% 30%' }), [setBgProps]);\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <ConfirmMailContent email=\"xyz@abc.com\" layout=\"split\" titleTag=\"h3\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nConfirmMail.propTypes = { setBgProps: PropTypes.func.isRequired };\r\n\r\nexport default withAuthSplit(ConfirmMail);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '../../common/Avatar';\r\nimport LockScreenForm from '../LockScreenForm';\r\nimport { Col, Media, Row } from 'reactstrap';\r\nimport withAuthSplit from '../../../hoc/withAuthSplit';\r\n\r\nimport team1 from '../../../assets/img/team/1.jpg';\r\nimport bgImg from '../../../assets/img/generic/18.jpg';\r\n\r\nconst LockScreen = ({ setBgProps }) => {\r\n  useEffect(() => setBgProps({ image: bgImg }), [setBgProps]);\r\n\r\n  return (\r\n    <Row className=\"justify-content-center\">\r\n      <Col xs=\"auto\">\r\n        <Media className=\"align-items-center\">\r\n          <Avatar src={team1} size=\"4xl\" className=\"mr-4\" />\r\n          <Media body>\r\n            <h4>Hi! Emma</h4>\r\n            <p className=\"mb-0\">\r\n              Enter your password <br />\r\n              to access the admin.\r\n            </p>\r\n          </Media>\r\n        </Media>\r\n        <LockScreenForm className=\"mt-4\" />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nLockScreen.propTypes = { setBgProps: PropTypes.func.isRequired };\r\n\r\nexport default withAuthSplit(LockScreen);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Logout from './Logout';\r\nimport Registration from './Registration';\r\nimport ForgetPassword from './ForgetPassword';\r\nimport PasswordReset from './PasswordReset';\r\nimport ConfirmMail from './ConfirmMail';\r\nimport LockScreen from './LockScreen';\r\n\r\nconst AuthSplitRoutes = ({ match: { url } }) => (\r\n  <Switch>\r\n    <Route path={`${url}/login`} exact component={Login} />\r\n    <Route path={`${url}/logout`} exact component={Logout} />\r\n    <Route path={`${url}/register`} exact component={Registration} />\r\n    <Route path={`${url}/forget-password`} exact component={ForgetPassword} />\r\n    <Route path={`${url}/confirm-mail`} exact component={ConfirmMail} />\r\n    <Route path={`${url}/password-reset`} exact component={PasswordReset} />\r\n    <Route path={`${url}/lock-screen`} exact component={LockScreen} />\r\n\r\n    {/*Redirect*/}\r\n    <Redirect to=\"/errors/404\" />\r\n  </Switch>\r\n);\r\nAuthSplitRoutes.propTypes = { match: PropTypes.object.isRequired };\r\n\r\nexport default AuthSplitRoutes;\r\n"],"names":["OriginalComponent","props","bgProps","setBgProps","useState","_jsx","Container","fluid","children","_jsxs","Row","className","Col","xs","Background","sm","md","noGutters","lg","xl","Card","CardHeader","Link","to","CardBody","withAuthSplit","_ref","useEffect","image","bgImg","position","Fragment","Flex","align","justify","LoginForm","layout","hasLabel","LogoutContent","titleTag","RegistrationForm","overlay","ForgetPasswordForm","PasswordResetForm","ConfirmMailContent","email","Media","Avatar","src","team1","size","body","LockScreenForm","match","url","Switch","Route","path","concat","exact","component","Login","Logout","Registration","ForgetPassword","ConfirmMail","PasswordReset","LockScreen","Redirect"],"sourceRoot":""}